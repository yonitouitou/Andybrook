{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin/admin-panel/admin-panel.component.css","webpack:///./src/app/admin/admin-panel/admin-panel.component.html","webpack:///./src/app/admin/admin-panel/admin-panel.component.ts","webpack:///./src/app/app-nav-bar/app-nav-bar.component.css","webpack:///./src/app/app-nav-bar/app-nav-bar.component.html","webpack:///./src/app/app-nav-bar/app-nav-bar.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/common-components/modal-builder.ts","webpack:///./src/app/common-components/pipe/FilterPipe.ts","webpack:///./src/app/customer/customer-header/customer-header.component.css","webpack:///./src/app/customer/customer-header/customer-header.component.html","webpack:///./src/app/customer/customer-header/customer-header.component.ts","webpack:///./src/app/customer/customer-info/customer-info.component.css","webpack:///./src/app/customer/customer-info/customer-info.component.html","webpack:///./src/app/customer/customer-info/customer-info.component.ts","webpack:///./src/app/customer/customer-orders/customer-orders.component.css","webpack:///./src/app/customer/customer-orders/customer-orders.component.html","webpack:///./src/app/customer/customer-orders/customer-orders.component.ts","webpack:///./src/app/customer/customer-panel/customer-panel.component.css","webpack:///./src/app/customer/customer-panel/customer-panel.component.html","webpack:///./src/app/customer/customer-panel/customer-panel.component.ts","webpack:///./src/app/customer/list-customer/list-customer.component.css","webpack:///./src/app/customer/list-customer/list-customer.component.html","webpack:///./src/app/customer/list-customer/list-customer.component.ts","webpack:///./src/app/customer/new-customer/new-customer.component.css","webpack:///./src/app/customer/new-customer/new-customer.component.html","webpack:///./src/app/customer/new-customer/new-customer.component.ts","webpack:///./src/app/header-menu/header-menu.component.css","webpack:///./src/app/header-menu/header-menu.component.html","webpack:///./src/app/header-menu/header-menu.component.ts","webpack:///./src/app/modal/add-order-item-modal/add-order-item-modal.component.css","webpack:///./src/app/modal/add-order-item-modal/add-order-item-modal.component.html","webpack:///./src/app/modal/add-order-item-modal/add-order-item-modal.component.ts","webpack:///./src/app/modal/confirm-modal/confirm-modal-component.css","webpack:///./src/app/modal/confirm-modal/confirm-modal-component.html","webpack:///./src/app/modal/confirm-modal/confirm-modal-component.ts","webpack:///./src/app/modal/create-order-modal/create-order-modal.component.css","webpack:///./src/app/modal/create-order-modal/create-order-modal.component.html","webpack:///./src/app/modal/create-order-modal/create-order-modal.component.ts","webpack:///./src/app/modal/delete-order-items-modal/delete-order-items-modal.component.css","webpack:///./src/app/modal/delete-order-items-modal/delete-order-items-modal.component.html","webpack:///./src/app/modal/delete-order-items-modal/delete-order-items-modal.component.ts","webpack:///./src/app/modal/info-modal/info-modal.component.css","webpack:///./src/app/modal/info-modal/info-modal.component.html","webpack:///./src/app/modal/info-modal/info-modal.component.ts","webpack:///./src/app/modal/order-notification-modal/order-notification-modal.component.css","webpack:///./src/app/modal/order-notification-modal/order-notification-modal.component.html","webpack:///./src/app/modal/order-notification-modal/order-notification-modal.component.ts","webpack:///./src/app/modal/show-order-items-modal/show-order-items-modal.component.css","webpack:///./src/app/modal/show-order-items-modal/show-order-items-modal.component.html","webpack:///./src/app/modal/show-order-items-modal/show-order-items-modal.component.ts","webpack:///./src/app/modal/upload-product-file-modal/upload-product-file-modal.component.css","webpack:///./src/app/modal/upload-product-file-modal/upload-product-file-modal.component.html","webpack:///./src/app/modal/upload-product-file-modal/upload-product-file-modal.component.ts","webpack:///./src/app/model/Address.ts","webpack:///./src/app/model/AggregatedOrder.ts","webpack:///./src/app/model/AggregatedOrderInfo.ts","webpack:///./src/app/model/AggregatedOrderItem.ts","webpack:///./src/app/model/Customer.ts","webpack:///./src/app/model/DocType.ts","webpack:///./src/app/model/Order.ts","webpack:///./src/app/model/OrderItem.ts","webpack:///./src/app/model/Owner.ts","webpack:///./src/app/model/Product.ts","webpack:///./src/app/model/ProductItem.ts","webpack:///./src/app/model/ProductStockInfo.ts","webpack:///./src/app/model/Store.ts","webpack:///./src/app/model/UploadProductsFileResult.ts","webpack:///./src/app/model/admin/AdminSetting.ts","webpack:///./src/app/model/request/customer/AddOrUpdateCustomerReq.ts","webpack:///./src/app/model/request/notification/NotificationRequest.ts","webpack:///./src/app/model/request/notification/OrderNotificationRequest.ts","webpack:///./src/app/model/request/order/AddOrderItemByBarCodeReq.ts","webpack:///./src/app/model/request/order/AddOrderItemReq.ts","webpack:///./src/app/model/request/order/DeleteOrderItemsReq.ts","webpack:///./src/app/order-panel/list-order-item/list-order-item.component.css","webpack:///./src/app/order-panel/list-order-item/list-order-item.component.html","webpack:///./src/app/order-panel/list-order-item/list-order-item.component.ts","webpack:///./src/app/order-panel/selected-order-items-list/selected-order-items-list.component.css","webpack:///./src/app/order-panel/selected-order-items-list/selected-order-items-list.component.html","webpack:///./src/app/order-panel/selected-order-items-list/selected-order-items-list.component.ts","webpack:///./src/app/order-panel/show-order-header/show-order-header.component.css","webpack:///./src/app/order-panel/show-order-header/show-order-header.component.html","webpack:///./src/app/order-panel/show-order-header/show-order-header.component.ts","webpack:///./src/app/order-panel/show-order/show-order.component.css","webpack:///./src/app/order-panel/show-order/show-order.component.html","webpack:///./src/app/order-panel/show-order/show-order.component.ts","webpack:///./src/app/orders-manager-panel/list-orders/list-orders.component.css","webpack:///./src/app/orders-manager-panel/list-orders/list-orders.component.html","webpack:///./src/app/orders-manager-panel/list-orders/list-orders.component.ts","webpack:///./src/app/orders-manager-panel/orders-manager/orders-manager.component.css","webpack:///./src/app/orders-manager-panel/orders-manager/orders-manager.component.html","webpack:///./src/app/orders-manager-panel/orders-manager/orders-manager.component.ts","webpack:///./src/app/product/products-panel/products-panel.component.css","webpack:///./src/app/product/products-panel/products-panel.component.html","webpack:///./src/app/product/products-panel/products-panel.component.ts","webpack:///./src/app/service/admin-setting-service.ts","webpack:///./src/app/service/customer-service.ts","webpack:///./src/app/service/http-service.ts","webpack:///./src/app/service/notification-service.ts","webpack:///./src/app/service/order-service.ts","webpack:///./src/app/service/product-service.ts","webpack:///./src/app/shared.module.ts","webpack:///./src/app/util/StringUtil.ts","webpack:///./src/app/util/TypeUtil.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvYWRtaW4vYWRtaW4tcGFuZWwvYWRtaW4tcGFuZWwuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n    <form [formGroup]=\\\"adminForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-check-label\\\" for=\\\"notification\\\">Notification &nbsp;</label>\\r\\n          <input type=\\\"checkbox\\\" formControlName=\\\"notification\\\" class=\\\"form-check-input\\\" (input)=\\\"settingChanged()\\\">\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"Email\\\">Email addresses\\r\\n          <span style=\\\"font-size: 80%; font-style: italic\\\">(Use comma ',' delimiter for multiple emails)</span\\r\\n        ></label>\\r\\n        <input type=\\\"text\\\" formControlName=\\\"emails\\\"\\r\\n          (input)=\\\"settingChanged()\\\"\\r\\n          class=\\\"form-control\\\"\\r\\n        />\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"itemToShow\\\">List item number to load by default</label>\\r\\n        <input type=\\\"text\\\" formControlName=\\\"itemToShow\\\"\\r\\n          (input)=\\\"settingChanged()\\\"\\r\\n          class=\\\"form-control\\\"\\r\\n        />\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"saveButtonDisabled\\\">Save</button>\\r\\n      </div>\\r\\n    </form>\\r\\n    <ngb-alert *ngIf=\\\"alertMessage\\\" type=\\\"success\\\" (close)=\\\"alertMessage = null\\\">{{ alertMessage }}</ngb-alert>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { AdminSettingService } from '../../service/admin-setting-service'\r\nimport { AdminSetting } from 'src/app/model/admin/AdminSetting';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Subject } from 'rxjs'\r\nimport { debounceTime } from 'rxjs/operators'\r\nimport { RGB } from 'src/app/model/RGB';\r\n\r\n@Component({\r\n  selector: 'admin-panel',\r\n  templateUrl: './admin-panel.component.html',\r\n  styleUrls: ['./admin-panel.component.css']\r\n})\r\nexport class AdminPanelComponent implements OnInit {\r\n\r\n  private _success = new Subject<string>()\r\n  private adminSetting: AdminSetting\r\n  private headerTableBackgroundColor: RGB\r\n  private headerTableTextColor: RGB\r\n  adminForm: FormGroup;\r\n  submitted = false;\r\n  saveButtonDisabled = true\r\n  alertMessage: string\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n              private adminSettingService: AdminSettingService) { }\r\n\r\n  ngOnInit() {\r\n    this.adminForm = this.formBuilder.group({\r\n      notification: [],\r\n      itemToShow: ['', Validators.min(1)],\r\n      emails: ['', [Validators.required]]\r\n    });\r\n\r\n    this.adminSetting = new AdminSetting()\r\n    this.adminSettingService.getAdminSetting(this.adminSetting)\r\n        .subscribe(data => {\r\n          this.adminSetting.emails = data.emails;\r\n          this.adminSetting.itemToShow = data.loadItemsLimit;\r\n          this.adminSetting.notifyOnCloseReport = data.notificationPolicy.onCloseReport;\r\n\r\n          this.adminForm.setValue({\r\n            notification: this.adminSetting.notifyOnCloseReport,\r\n            emails: this.adminSetting.emails.join(),\r\n            itemToShow: this.adminSetting.itemToShow\r\n      })\r\n    })\r\n\r\n    this._success.subscribe((msg) => this.alertMessage = msg);\r\n    this._success.pipe(debounceTime(5000)).subscribe(() => this.alertMessage = null);\r\n  }\r\n\r\n  public changeAlertMessage() {\r\n    this._success.next(\"Setting saved successully\")\r\n  }\r\n\r\n  settingChanged() {\r\n    this.saveButtonDisabled = false\r\n  }\r\n\r\n  settingSaved(successfully: boolean) {\r\n    this.saveButtonDisabled = true\r\n    this.changeAlertMessage()\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() { return this.adminForm.controls; }\r\n\r\n  onSubmit() {\r\n      this.submitted = true;\r\n      if (this.adminForm.invalid) {\r\n          return;\r\n      }\r\n      let values = this.adminForm.value;\r\n      this.adminSetting.emails = values.emails.split(\",\");\r\n      this.adminSetting.itemToShow = values.itemToShow;\r\n      this.adminSetting.notifyOnCloseReport = values.notification;\r\n      this.adminSettingService.updateAdminSetting(this.adminSetting).subscribe(data => {\r\n        this.adminSetting.emails = data.emails;\r\n        this.adminSetting.itemToShow = data.loadItemsLimit;\r\n        this.adminSetting.notifyOnCloseReport = data.notificationPolicy.onCloseReport;\r\n        this.settingSaved(true);\r\n    })\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvYXBwLW5hdi1iYXIvYXBwLW5hdi1iYXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark bg-primary fixed-top\\\">\\r\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Andybrook</a>\\r\\n    <button class=\\\"navbar-toggler hidden-sm-up\\\" type=\\\"button\\\" (click)=\\\"isNavbarCollapsed = !isNavbarCollapsed\\\" data-target=\\\"#navbarsDefault\\\" aria-controls=\\\"navbarsDefault\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n    </button>\\r\\n    <div [ngbCollapse]=\\\"isNavbarCollapsed\\\" class=\\\"collapse navbar-collapse\\\" id=\\\"navbarsDefault\\\">\\r\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\"\\r\\n             routerLinkActive=\\\"active\\\"\\r\\n             [routerLinkActiveOptions]=\\\"{exact: true}\\\"\\r\\n             routerLink=\\\"/\\\"\\r\\n          >Home</a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item dropdown\\\" ngbDropdown>\\r\\n          <a class=\\\"nav-link dropdown-toggle\\\" id=\\\"id01\\\" ngbDropdownToggle>Customers</a>\\r\\n          <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"id01\\\" ngbDropdownMenu>\\r\\n            <a class=\\\"dropdown-item\\\" routerLink=\\\"/customer-dashboard\\\">Dashboard</a>\\r\\n            <a class=\\\"dropdown-item\\\" routerLink=\\\"/new-customer/-1\\\">New Customer</a>\\r\\n          </div>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\"\\r\\n             routerLink=\\\"/products\\\"\\r\\n          >Products</a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\"\\r\\n             routerLink=\\\"/admin\\\"\\r\\n          >Admin</a>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </nav>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-app-nav-bar',\r\n  templateUrl: './app-nav-bar.component.html',\r\n  styleUrls: ['./app-nav-bar.component.css']\r\n})\r\nexport class AppNavBarComponent implements OnInit {\r\n\r\n  isNavbarCollapsed=true;\r\n  \r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvYXBwLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-app-nav-bar></app-app-nav-bar>\\r\\n<br>\\r\\n<br>\\r\\n<br>\\r\\n<div class=\\\"container-fluid\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n</div>\\r\\n\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  \r\n}\r\n\r\n\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatDialogModule } from '@angular/material'\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { HttpClientModule } from '@angular/common/http'\r\nimport { Routes, RouterModule } from '@angular/router'\r\nimport { BrowserAnimationsModule, NoopAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AppComponent } from './app.component';\r\nimport { ListOrderItemComponent } from './order-panel/list-order-item/list-order-item.component';\r\nimport { OrdersManagerComponent } from './orders-manager-panel/orders-manager/orders-manager.component';\r\nimport { ShowOrderComponent } from './order-panel/show-order/show-order.component';\r\nimport { OrderService } from './service/order-service';\r\nimport { HttpService } from './service/http-service';\r\nimport { AdminSettingService } from './service/admin-setting-service';\r\nimport { HeaderMenuComponent } from './header-menu/header-menu.component';\r\nimport { OrderHeaderComponent } from './order-panel/show-order-header/show-order-header.component';\r\nimport { ListOrdersComponent } from './orders-manager-panel/list-orders/list-orders.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\r\nimport { SharedModule } from './shared.module';\r\nimport { CustomerPanelComponent } from './customer/customer-panel/customer-panel.component';\r\nimport { NotificationService } from './service/notification-service';\r\nimport { AppNavBarComponent } from './app-nav-bar/app-nav-bar.component';\r\nimport { ConfirmModalComponent } from './modal/confirm-modal/confirm-modal-component';\r\nimport { ModalBuilder } from './common-components/modal-builder';\r\nimport { CreateOrderModalComponent } from './modal/create-order-modal/create-order-modal.component';\r\nimport { CustomerService } from './service/customer-service';\r\nimport { InfoModalComponent } from './modal/info-modal/info-modal.component';\r\nimport { ProductService } from './service/product-service';\r\nimport { ShowOrderItemsModalComponent } from './modal/show-order-items-modal/show-order-items-modal.component';\r\nimport { SelectedOrderItemsListComponent } from './order-panel/selected-order-items-list/selected-order-items-list.component';\r\nimport { DeleteOrderItemsModalComponent } from './modal/delete-order-items-modal/delete-order-items-modal.component';\r\nimport { AddOrderItemModalComponent } from './modal/add-order-item-modal/add-order-item-modal.component';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { ListCustomerComponent } from './customer/list-customer/list-customer.component';\r\nimport { CustomerOrdersComponent } from './customer/customer-orders/customer-orders.component';\r\nimport { CustomerInfoComponent } from './customer/customer-info/customer-info.component';\r\nimport { CustomerHeaderComponent } from './customer/customer-header/customer-header.component';\r\nimport { NewCustomerComponent } from './customer/new-customer/new-customer.component';\r\nimport { FileUploadModule } from 'ng2-file-upload';\r\nimport { OrderNotificationModalComponent } from './modal/order-notification-modal/order-notification-modal.component';\r\nimport { UploadProductFileModalComponent } from './modal/upload-product-file-modal/upload-product-file-modal.component';\r\nimport { ProductsPanelComponent } from './product/products-panel/products-panel.component';\r\n\r\nconst appRoutes: Routes = [\r\n  { path: '', component: OrdersManagerComponent },\r\n  { path: 'order/:id', component: ShowOrderComponent },\r\n  { path: 'admin', component: AdminPanelComponent },\r\n  { path: 'new-customer/:id', component: NewCustomerComponent },\r\n  { path: 'customer-dashboard', component: CustomerPanelComponent },\r\n  { path: 'products', component: ProductsPanelComponent }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ListOrderItemComponent,\r\n    OrdersManagerComponent,\r\n    ShowOrderComponent,\r\n    HeaderMenuComponent,\r\n    OrderHeaderComponent,\r\n    ListOrdersComponent,\r\n    AdminPanelComponent,\r\n    CustomerPanelComponent,\r\n    AppNavBarComponent,\r\n    ConfirmModalComponent,\r\n    CreateOrderModalComponent,\r\n    InfoModalComponent,\r\n    ShowOrderItemsModalComponent,\r\n    SelectedOrderItemsListComponent,\r\n    DeleteOrderItemsModalComponent,\r\n    AddOrderItemModalComponent,\r\n    ListCustomerComponent,\r\n    CustomerOrdersComponent,\r\n    CustomerInfoComponent,\r\n    CustomerHeaderComponent,\r\n    NewCustomerComponent,\r\n    OrderNotificationModalComponent,\r\n    UploadProductFileModalComponent,\r\n    ProductsPanelComponent,\r\n  ],\r\n  entryComponents: [\r\n    CreateOrderModalComponent,\r\n    ConfirmModalComponent,\r\n    InfoModalComponent,\r\n    ShowOrderItemsModalComponent,\r\n    DeleteOrderItemsModalComponent,\r\n    AddOrderItemModalComponent,\r\n    OrderNotificationModalComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    MatToolbarModule,\r\n    MatDialogModule,\r\n    BrowserAnimationsModule,\r\n    NoopAnimationsModule,\r\n    ReactiveFormsModule,\r\n    NgbModule,\r\n    SharedModule,\r\n    FileUploadModule,\r\n    RouterModule.forRoot(appRoutes)\r\n  ],\r\n  providers: [\r\n    OrderService,\r\n    HttpService,\r\n    AdminSettingService,\r\n    NotificationService,\r\n    ModalBuilder,\r\n    CustomerService,\r\n    ProductService,\r\n    CookieService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Component } from '@angular/compiler/src/core';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class ModalBuilder {\r\n\r\n    constructor(private modalService: NgbModal) {\r\n\r\n    }\r\n\r\n    open(component: any): NgbModalRef  {\r\n        return this.modalService.open(component)\r\n    }\r\n\r\n    openCenteredLargeModal(component: any): NgbModalRef {\r\n        return this.modalService.open(component, {size: 'lg', centered: true})\r\n    }\r\n\r\n    openCenteredModal(component: any): NgbModalRef {\r\n        return this.modalService.open(component, {centered: true})\r\n    }\r\n}","import {Pipe, PipeTransform, Injectable } from '@angular/core'\r\n\r\n@Pipe({\r\n    name: 'filter',\r\n})\r\n@Injectable()\r\nexport class FilterPipe implements PipeTransform {\r\n\r\n    transform(items: IterableIterator<any>, field: string, value: string): Array<any> {\r\n        if (!items) {\r\n            return new Array[0]\r\n        }\r\n        let array = Array.from(items)\r\n        if (!field || !value) {\r\n            return array\r\n        }\r\n        return array.filter(\r\n            singleTerm => singleTerm['product'][field].toLowerCase().includes(value.toLowerCase())\r\n        )\r\n    }\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvY3VzdG9tZXIvY3VzdG9tZXItaGVhZGVyL2N1c3RvbWVyLWhlYWRlci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'customer-header',\r\n  templateUrl: './customer-header.component.html',\r\n  styleUrls: ['./customer-header.component.css']\r\n})\r\nexport class CustomerHeaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"label {\\r\\n    font-weight: bold;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9jdXN0b21lci9jdXN0b21lci1pbmZvL2N1c3RvbWVyLWluZm8uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGlCQUFpQjtBQUNyQiIsImZpbGUiOiJhcHAvY3VzdG9tZXIvY3VzdG9tZXItaW5mby9jdXN0b21lci1pbmZvLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJsYWJlbCB7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxufSJdfQ== */\"","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <h5>Store Information</h5>\\r\\n    <hr>\\r\\n    <div *ngIf=\\\"customer\\\">\\r\\n      <label>ID :</label> {{ customer.store.id }}\\r\\n      <br>\\r\\n      <label>Store :</label> {{ customer.store.name }}\\r\\n      <br>\\r\\n      <label>Address :</label> {{ customer.store.address.format() }}\\r\\n      <br>\\r\\n      <label>Phone :</label> {{ customer.store.phone }}\\r\\n      <br>\\r\\n      <label>Email :</label> {{ customer.store.email }}\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col\\\">\\r\\n    <h5>Owner Information</h5>\\r\\n    <hr>\\r\\n    <div *ngIf=\\\"customer\\\">\\r\\n      <label>ID :</label> {{ customer.store.owner.id }}\\r\\n      <br>\\r\\n      <label>Compagny :</label> {{ customer.store.owner.compagnyName }}\\r\\n      <br>\\r\\n      <label>Name :</label> {{ customer.store.owner.firstName + ' ' + customer.store.owner.lastName }}\\r\\n      <br>\\r\\n      <label>Email :</label> {{ customer.store.owner.email }}\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Customer } from 'src/app/model/Customer';\r\n\r\n@Component({\r\n  selector: 'customer-info',\r\n  templateUrl: './customer-info.component.html',\r\n  styleUrls: ['./customer-info.component.css']\r\n})\r\nexport class CustomerInfoComponent implements OnInit {\r\n\r\n  @Input() customer: Customer\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"/* Scroll Bar Aggregated Order Item table */\\r\\n.my-custom-scrollbar {\\r\\n    position: relative;\\r\\n    max-height: 35%;\\r\\n    overflow: auto;\\r\\n  }\\r\\n.table-wrapper-scroll-y {\\r\\n  display: block;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9jdXN0b21lci9jdXN0b21lci1vcmRlcnMvY3VzdG9tZXItb3JkZXJzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsMkNBQTJDO0FBQzNDO0lBQ0ksa0JBQWtCO0lBQ2xCLGVBQWU7SUFDZixjQUFjO0VBQ2hCO0FBRUY7RUFDRSxjQUFjO0FBQ2hCIiwiZmlsZSI6ImFwcC9jdXN0b21lci9jdXN0b21lci1vcmRlcnMvY3VzdG9tZXItb3JkZXJzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBTY3JvbGwgQmFyIEFnZ3JlZ2F0ZWQgT3JkZXIgSXRlbSB0YWJsZSAqL1xyXG4ubXktY3VzdG9tLXNjcm9sbGJhciB7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBtYXgtaGVpZ2h0OiAzNSU7XHJcbiAgICBvdmVyZmxvdzogYXV0bztcclxuICB9XHJcbiAgXHJcbi50YWJsZS13cmFwcGVyLXNjcm9sbC15IHtcclxuICBkaXNwbGF5OiBibG9jaztcclxufSJdfQ== */\"","module.exports = \"<h5>Orders ({{ orders.length }})</h5>\\r\\n<div class=\\\"table-responsive table-wrapper-scroll-y my-custom-scrollbar\\\">\\r\\n  <table class=\\\"table table-striped table-bordered table-sm\\\">\\r\\n      <thead>\\r\\n          <tr>\\r\\n              <th>ID</th>\\r\\n              <th>Name</th>\\r\\n              <th>Status</th>\\r\\n              <th>Products</th>\\r\\n              <th>Qty</th>\\r\\n              <th>Amount</th>\\r\\n              <th>Creation</th>\\r\\n              <th>Closed</th>\\r\\n              <th></th>\\r\\n          </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n          <tr *ngFor=\\\"let order of orders\\\">\\r\\n              <td>{{ order.id }}</td>\\r\\n              <td>{{ order.name }}</td>\\r\\n              <td [ngClass]=\\\"order.status === 'OPEN' ? 'table-success' : 'table-danger'\\\">{{ order.status }}</td>\\r\\n              <td>{{ order.aggregatedOrderInfo.productSize }}</td>\\r\\n              <td>{{ order.aggregatedOrderInfo.orderItemSize }}</td>\\r\\n              <td>{{ order.aggregatedOrderInfo.totalPrice }} €</td>\\r\\n              <td>{{ order.createdDatetime  | date:'shortDate' }}</td>\\r\\n              <td>{{ order.closeDatetime  | date:'shortDate' }}</td>\\r\\n              <td>\\r\\n                <button\\r\\n                    class=\\\"btn btn-success btn-sm\\\"\\r\\n                    [routerLink]=\\\"['/order', order.id]\\\"\\r\\n                >See</button>\\r\\n              </td>\\r\\n          </tr>\\r\\n      </tbody>\\r\\n  </table>\\r\\n</div>\\r\\n\"","import { Component, OnInit, Input, OnChanges } from '@angular/core';\r\nimport { AggregatedOrder } from 'src/app/model/AggregatedOrder';\r\nimport { OrderService } from 'src/app/service/order-service';\r\nimport { Customer } from 'src/app/model/Customer';\r\n\r\n@Component({\r\n  selector: 'customer-orders',\r\n  templateUrl: './customer-orders.component.html',\r\n  styleUrls: ['./customer-orders.component.css']\r\n})\r\nexport class CustomerOrdersComponent implements OnInit, OnChanges {\r\n\r\n  @Input() customer: Customer\r\n  private orders: AggregatedOrder[] = []\r\n\r\n  constructor(private orderService: OrderService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.loadOrders()\r\n  }\r\n\r\n  private loadOrders() {\r\n    if (this.customer != null) {\r\n      this.orderService.getOrdersOfCustomer(this.customer.id).subscribe(\r\n        data => {\r\n          let arr: AggregatedOrder[] = [];\r\n          for (let order of data) {\r\n            arr.push(AggregatedOrder.fromJson(order));\r\n          }\r\n          this.orders = arr;\r\n        }\r\n      )\r\n    }\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvY3VzdG9tZXIvY3VzdG9tZXItcGFuZWwvY3VzdG9tZXItcGFuZWwuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"row\\\">\\r\\n  <customer-header></customer-header>\\r\\n</div>\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-auto\\\">\\r\\n    <list-customer [customer]=\\\"customer\\\" (onCustomerSelected)=\\\"onCustomerSelected($event)\\\"></list-customer>\\r\\n  </div>\\r\\n  <div class=\\\"col\\\">\\r\\n    <new-customer [customer]=\\\"customer\\\" (onUpdateCustomerEvent)=\\\"onUpdateCustomer($event)\\\"></new-customer>\\r\\n    <hr>\\r\\n    <customer-orders [customer]=\\\"customer\\\"></customer-orders>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { AggregatedOrder } from 'src/app/model/AggregatedOrder';\r\nimport { OrderService } from 'src/app/service/order-service';\r\nimport { Customer } from 'src/app/model/Customer';\r\nimport { CustomerService } from 'src/app/service/customer-service';\r\n\r\n@Component({\r\n  selector: 'customer-panel',\r\n  templateUrl: './customer-panel.component.html',\r\n  styleUrls: ['./customer-panel.component.css']\r\n})\r\nexport class CustomerPanelComponent implements OnInit {\r\n\r\n  customer: Customer\r\n  orders: AggregatedOrder[] = []\r\n\r\n  constructor(private orderService: OrderService,\r\n              private customerService: CustomerService) { }\r\n\r\n  ngOnInit() {\r\n    \r\n  }\r\n\r\n  onCustomerSelected(event) {\r\n    this.customer = event;\r\n  }\r\n\r\n  onUpdateCustomer(event) {\r\n    this.customerService.getCustomer(event.id).subscribe(\r\n      data => {\r\n        this.customer = Customer.fromJson(data);\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","module.exports = \"/* Scroll Bar customer list table */\\r\\n.my-custom-scrollbar {\\r\\n    position: relative;\\r\\n    max-height: 750px;\\r\\n    overflow: auto;\\r\\n  }\\r\\n.table-wrapper-scroll-y {\\r\\n    display: block;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9jdXN0b21lci9saXN0LWN1c3RvbWVyL2xpc3QtY3VzdG9tZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxtQ0FBbUM7QUFDbkM7SUFDSSxrQkFBa0I7SUFDbEIsaUJBQWlCO0lBQ2pCLGNBQWM7RUFDaEI7QUFFQTtJQUNFLGNBQWM7RUFDaEIiLCJmaWxlIjoiYXBwL2N1c3RvbWVyL2xpc3QtY3VzdG9tZXIvbGlzdC1jdXN0b21lci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyogU2Nyb2xsIEJhciBjdXN0b21lciBsaXN0IHRhYmxlICovXHJcbi5teS1jdXN0b20tc2Nyb2xsYmFyIHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIG1heC1oZWlnaHQ6IDc1MHB4O1xyXG4gICAgb3ZlcmZsb3c6IGF1dG87XHJcbiAgfVxyXG4gIFxyXG4gIC50YWJsZS13cmFwcGVyLXNjcm9sbC15IHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gIH0iXX0= */\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <h5>Customers</h5>\\r\\n    </div>\\r\\n    <div class=\\\"col\\\" style=\\\"float:right\\\">\\r\\n      <input #searchInput type=\\\"search\\\"\\r\\n        class=\\\"form-control\\\"\\r\\n        (keyup.enter)=\\\"onClickSearch(searchInput.value)\\\"\\r\\n        placeholder=\\\"Type to search a customer...\\\">\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <div class=\\\"table-responsive table-wrapper-scroll-y my-custom-scrollbar\\\">\\r\\n        <table class=\\\"table table-striped table-hover\\\">\\r\\n          <thead>\\r\\n            <tr>\\r\\n              <th>ID</th>\\r\\n              <th>Store</th>\\r\\n              <th>Owner</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr *ngFor=\\\"let customer of customers\\\" (click)=\\\"onClickCustomer(customer)\\\">\\r\\n              <td>{{ customer.id }}</td>\\r\\n              <td>{{ customer.store.name }}</td>\\r\\n              <td>{{ customer.store.owner.firstName + \\\" \\\" + customer.store.owner.lastName }}</td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>  \\r\\n</div>\"","import { Component, OnInit, EventEmitter, Output, Input, OnChanges } from '@angular/core';\r\nimport { Customer } from 'src/app/model/Customer';\r\nimport { ModalBuilder } from 'src/app/common-components/modal-builder';\r\nimport { CustomerService } from 'src/app/service/customer-service';\r\nimport { InfoModalComponent } from 'src/app/modal/info-modal/info-modal.component';\r\n\r\n@Component({\r\n  selector: 'list-customer',\r\n  templateUrl: './list-customer.component.html',\r\n  styleUrls: ['./list-customer.component.css']\r\n})\r\nexport class ListCustomerComponent implements OnInit {\r\n\r\n  @Output() onCustomerSelected = new EventEmitter<Customer>()\r\n  @Input() customer: Customer\r\n  customers: Customer[] = [];\r\n\r\n  constructor(private customerService: CustomerService) { }\r\n\r\n  ngOnInit() {\r\n    this.getCustomersList(null);\r\n  }\r\n\r\n  private getCustomersList(searchInput: string) {\r\n    let obs;\r\n    this.customers = [];\r\n    if (searchInput === null || searchInput.length == 0) {\r\n      obs = this.customerService.getAllCustomers();\r\n    } else {\r\n      obs = this.customerService.searchCustomerByIdOrNames(searchInput);\r\n    }\r\n    obs.subscribe(\r\n      data => {\r\n        for (let customer of data) {\r\n          this.customers.push(Customer.fromJson(customer));\r\n        }\r\n      },\r\n      error => {\r\n        this.customers = [];\r\n      }\r\n    )\r\n  }\r\n\r\n  onClickCustomer(customer: Customer) {\r\n    this.onCustomerSelected.emit(customer);\r\n  }\r\n\r\n  onClickSearch(value: string) {\r\n    this.getCustomersList(value.trim());\r\n  }\r\n}\r\n","module.exports = \".ng-invalid:not(form)  {\\r\\n    border-left: 5px solid #a94442; /* red */\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9jdXN0b21lci9uZXctY3VzdG9tZXIvbmV3LWN1c3RvbWVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSw4QkFBOEIsRUFBRSxRQUFRO0FBQzVDIiwiZmlsZSI6ImFwcC9jdXN0b21lci9uZXctY3VzdG9tZXIvbmV3LWN1c3RvbWVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubmctaW52YWxpZDpub3QoZm9ybSkgIHtcclxuICAgIGJvcmRlci1sZWZ0OiA1cHggc29saWQgI2E5NDQ0MjsgLyogcmVkICovXHJcbn0iXX0= */\"","module.exports = \"<form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <h5>Owner</h5>\\r\\n  <hr>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col form-group\\\">\\r\\n      <label for=\\\"compagnyName\\\">Compagny Nane</label>\\r\\n      <input type=\\\"text\\\" formControlName=\\\"ownerAutoComplete\\\"\\r\\n        (blur)=\\\"onBlurOwnerAutoComplete()\\\"\\r\\n        [(ngModel)]=\\\"inputOwnerName\\\"\\r\\n        [ngbTypeahead]=\\\"search\\\"\\r\\n        class=\\\"form-control\\\"/>\\r\\n    </div>\\r\\n    <div class=\\\"col form-group\\\">\\r\\n        <label for=\\\"firstName\\\">FirstName</label>\\r\\n        <input type=\\\"text\\\" formControlName=\\\"ownerFirstName\\\" class=\\\"form-control\\\" (blur)=onBlurStringFormControl($event)/>\\r\\n    </div>\\r\\n    <div class=\\\"col form-group\\\">\\r\\n        <label for=\\\"lastName\\\">LastName</label>\\r\\n        <input type=\\\"text\\\" formControlName=\\\"ownerLastName\\\" class=\\\"form-control\\\" (blur)=onBlurStringFormControl($event)/>\\r\\n    </div>\\r\\n    <div class=\\\"col form-group\\\">\\r\\n        <label for=\\\"email\\\">Email</label>\\r\\n        <input type=\\\"text\\\" formControlName=\\\"ownerEmail\\\" class=\\\"form-control\\\" (blur)=onBlurLowcaseStringFormControl($event)/>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"storesOfSelectedOwner.length > 0\\\" class=\\\"row\\\">\\r\\n    <div class=\\\"col-5\\\">\\r\\n      <table class=\\\"table table-striped table-bordered table-sm\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th>#</th>\\r\\n            <th>Id</th>\\r\\n            <th>Name</th>\\r\\n            <th>Email</th>\\r\\n            <th>Phone</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let store of storesOfSelectedOwner; let i = index\\\">\\r\\n            <td>{{ i + 1 }}</td>\\r\\n            <td>{{ store.id }}</td>\\r\\n            <td>{{ store.name }}</td>\\r\\n            <td>{{ store.email }}</td>\\r\\n            <td>{{ store.phone }}</td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n  </div>\\r\\n  <h5>Store</h5>\\r\\n  <hr>\\r\\n  <div class=\\\"row\\\">\\r\\n      <div class=\\\"col form-group\\\">\\r\\n          <label for=\\\"name\\\">Name</label>\\r\\n          <input type=\\\"text\\\" formControlName=\\\"storeName\\\" class=\\\"form-control\\\" (blur)=onBlurStringFormControl($event)/>\\r\\n      </div>\\r\\n      <div class=\\\"col form-group\\\">\\r\\n        <label for=\\\"streetNumber\\\">Street Number</label>\\r\\n        <input type=\\\"text\\\" formControlName=\\\"storeStreetNumber\\\" class=\\\"form-control\\\"/>\\r\\n      </div>\\r\\n      <div class=\\\"col form-group\\\">\\r\\n          <label for=\\\"streetName\\\">Street</label>\\r\\n          <input type=\\\"text\\\" formControlName=\\\"storeStreetName\\\" class=\\\"form-control\\\"/>\\r\\n      </div>\\r\\n      <div class=\\\"col form-group\\\">\\r\\n          <label for=\\\"zipCode\\\">Zip Code</label>\\r\\n          <input type=\\\"text\\\" formControlName=\\\"storeZipCode\\\" class=\\\"form-control\\\"/>\\r\\n      </div>\\r\\n      <div class=\\\"col form-group\\\">\\r\\n          <label for=\\\"city\\\">City</label>\\r\\n          <input type=\\\"text\\\" formControlName=\\\"storeCity\\\" class=\\\"form-control\\\" (blur)=onBlurStringFormControl($event)/>\\r\\n      </div>\\r\\n      <div class=\\\"col form-group\\\">\\r\\n        <label for=\\\"country\\\">Country</label>\\r\\n        <input type=\\\"text\\\" formControlName=\\\"storeCountry\\\" class=\\\"form-control\\\" (blur)=onBlurStringFormControl($event)/>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n      <div class=\\\"col form-group\\\">\\r\\n          <label for=\\\"phone\\\">Phone</label>\\r\\n          <input type=\\\"text\\\" formControlName=\\\"storePhone\\\" class=\\\"form-control\\\"/>\\r\\n      </div>\\r\\n      <div class=\\\"col form-group\\\">\\r\\n          <label for=\\\"email\\\">Email</label>\\r\\n          <input type=\\\"text\\\" formControlName=\\\"storeEmail\\\" class=\\\"form-control\\\" (blur)=onBlurLowcaseStringFormControl($event)>\\r\\n      </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <button class=\\\"btn btn-primary\\\">Save</button>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-auto\\\">\\r\\n      <ngb-alert *ngIf=\\\"errorMessage\\\" [type]=\\\"typeAlert\\\" [dismissible]=\\\"true\\\" (close)=\\\"errorMessage = null\\\">{{ errorMessage }}</ngb-alert>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\"","import { Component, OnInit, Input, OnChanges, SimpleChanges, Output, EventEmitter } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { CustomerService } from 'src/app/service/customer-service';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, map } from 'rxjs/operators';\r\nimport { AddOrUpdateCustomerReq } from 'src/app/model/request/customer/AddOrUpdateCustomerReq';\r\nimport { Store } from 'src/app/model/Store';\r\nimport { ModalBuilder } from 'src/app/common-components/modal-builder';\r\nimport { InfoModalComponent } from 'src/app/modal/info-modal/info-modal.component';\r\nimport { StringUtil } from 'src/app/util/StringUtil';\r\nimport { Customer } from 'src/app/model/Customer';\r\nimport { Address } from 'src/app/model/Address';\r\n\r\n@Component({\r\n  selector: 'new-customer',\r\n  templateUrl: './new-customer.component.html',\r\n  styleUrls: ['./new-customer.component.css']\r\n})\r\nexport class NewCustomerComponent implements OnInit, OnChanges {\r\n\r\n  @Input() customer: Customer\r\n  @Output() onUpdateCustomerEvent = new EventEmitter<number>();\r\n\r\n  form: FormGroup\r\n  inputOwnerName: string\r\n  ownerNames: string[] = []\r\n  ownerIdMapByName: Map<string, number>\r\n  errorMessage: string\r\n  storesOfSelectedOwner: Store[] = []\r\n  typeAlert: string = 'success'\r\n  private _error = new Subject<string>()\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n              private modalBuilder: ModalBuilder,\r\n              private customerService: CustomerService) {\r\n    this.ownerIdMapByName = new Map();\r\n    this.initForm();\r\n    this._error.subscribe((msg) => this.errorMessage = msg);\r\n    this._error.pipe(debounceTime(4000)).subscribe(() => this.errorMessage = null);\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (this.customer != null) {\r\n      this.fillForm();\r\n    }\r\n  }\r\n\r\n  private initForm() {\r\n    this.loadOwners();\r\n    this.form = this.formBuilder.group({\r\n      ownerAutoComplete: '',\r\n      ownerFirstName: '',\r\n      ownerLastName: '',\r\n      ownerEmail: ['', Validators.email],\r\n      storeName: ['', Validators.required],\r\n      storeStreetNumber: '',\r\n      storeStreetName: '',\r\n      storeZipCode: '',\r\n      storeCity: '',\r\n      storeCountry: '',\r\n      storePhone: '',\r\n      storeEmail: ['', Validators.email]\r\n    });\r\n    if (this.customer != null) {\r\n      this.fillForm();\r\n    }\r\n  }\r\n\r\n  private fillForm() {\r\n    const store = this.customer.store;\r\n    this.form.setValue({\r\n      ownerAutoComplete: this.getStringValue(store.owner.compagnyName),\r\n      ownerFirstName: this.getStringValue(store.owner.firstName),\r\n      ownerLastName: this.getStringValue(store.owner.lastName),\r\n      ownerEmail: this.getStringValue(store.owner.email),\r\n      storeName: this.getStringValue(store.name),\r\n      storeStreetNumber: this.getStringValue(store.address.streetNumber),\r\n      storeStreetName: this.getStringValue(store.address.streetName),\r\n      storeZipCode: this.getNumericValue(store.address.zipCode),\r\n      storeCity: this.getStringValue(store.address.city),\r\n      storeCountry: this.getStringValue(store.address.country),\r\n      storePhone: this.getStringValue(store.phone),\r\n      storeEmail: this.getStringValue(store.email)\r\n    })\r\n  }\r\n\r\n  private getStringValue(value: string): string {\r\n    return value.length > 0 || value == 'null' ? value : \"\";\r\n  }\r\n\r\n  private getNumericValue(value: number): string {\r\n    return value <= 0 ? \"\" : value.toString();\r\n  }\r\n\r\n  private loadOwners() {\r\n    this.customerService.getAllOwnersIdsAndNames().subscribe(\r\n      data => {\r\n        for (let owner of data) {\r\n          this.ownerIdMapByName.set(owner.second, owner.first);\r\n          this.ownerNames.push(owner.second);\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  onBlurStringFormControl(event) {\r\n    event.srcElement.value = StringUtil.capitalFirstLetter(event.srcElement.value);\r\n  }\r\n\r\n  onBlurLowcaseStringFormControl(event) {\r\n    event.srcElement.value = event.srcElement.value.toLowerCase();\r\n  }\r\n\r\n  search = (text$: Observable<string>) =>\r\n    text$.pipe(\r\n      debounceTime(200),\r\n      distinctUntilChanged(),\r\n      map(term => term.length < 1 ? []\r\n        : this.ownerNames.filter(v => v.toLowerCase().indexOf(term.toLowerCase()) > -1).slice(0, 10))\r\n  )\r\n\r\n  onBlurOwnerAutoComplete() {\r\n    let ownerNameSelected = this.form.controls.ownerAutoComplete.value;\r\n    let ownerId = this.ownerIdMapByName.get(ownerNameSelected);\r\n    if (ownerId != null) {\r\n      this.customerService.getStoresOfOwner(ownerId).subscribe(\r\n        data => {\r\n          for (let store of data) {\r\n            this.storesOfSelectedOwner.push(Store.fromJson(store));\r\n          }\r\n        }, error => {\r\n          const modalRef = this.modalBuilder.open(InfoModalComponent);\r\n          modalRef.componentInstance.title = '';\r\n          modalRef.componentInstance.message = 'Cannot load the stores of the owner : ' + ownerNameSelected; \r\n        }\r\n      )\r\n    } else {\r\n      this.storesOfSelectedOwner = [];\r\n    }\r\n  }\r\n\r\n  private changeAlertMessage(type: string, errorMessage: string) {\r\n    this.typeAlert = type;\r\n    this._error.next(errorMessage);\r\n  }\r\n\r\n  onSubmit() {\r\n    let controls = this.form.controls;\r\n    if (this.form.valid) {\r\n      let ownerId = this.ownerIdMapByName.get(controls.ownerAutoComplete.value);\r\n      let req = new AddOrUpdateCustomerReq(ownerId, controls.storeName.value);\r\n      if (this.customer != null) {\r\n        req.customerId = this.customer.id;\r\n      }\r\n      req.ownerCompagnyName = controls.ownerAutoComplete.value;\r\n      req.ownerFirstName = controls.ownerFirstName.value;\r\n      req.ownerLastName = controls.ownerLastName.value;\r\n      req.ownerEmail = controls.ownerEmail.value;\r\n      req.storeName = controls.storeName.value;\r\n      req.storeEmail = controls.storeEmail.value;\r\n      req.storePhone = controls.storePhone.value;\r\n      req.storeAddress = new Address(controls.storeStreetNumber.value, controls.storeStreetName.value,\r\n                                controls.storeZipCode.value, controls.storeCity.value, controls.storeCountry.value);\r\n\r\n      this.sendCustomerRequest(req, this.customer != null)\r\n    } else {\r\n      this.changeAlertMessage(\"danger\", \"Form not valid.\");\r\n    }\r\n  }\r\n\r\n  private sendCustomerRequest(req: AddOrUpdateCustomerReq, isUpdateRequest: boolean) {\r\n    let observable = isUpdateRequest ? this.customerService.updateCustomer(req) : this.customerService.addCustomer(req); \r\n    observable.subscribe(\r\n      data => {\r\n        this.changeAlertMessage(\"success\", \"Customer successfully saved\");\r\n        this.onUpdateCustomerEvent.emit(this.customer.id);\r\n      },\r\n      error => {\r\n        this.changeAlertMessage(\"danger\", error.error);\r\n      }\r\n    );\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvaGVhZGVyLW1lbnUvaGVhZGVyLW1lbnUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p>\\r\\n  header-menu works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header-menu',\r\n  templateUrl: './header-menu.component.html',\r\n  styleUrls: ['./header-menu.component.css']\r\n})\r\nexport class HeaderMenuComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvbW9kYWwvYWRkLW9yZGVyLWl0ZW0tbW9kYWwvYWRkLW9yZGVyLWl0ZW0tbW9kYWwuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"modal-header\\\">\\r\\n    <h5 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Add order items</h5>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"onClose()\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n</div>\\r\\n<div class=\\\"modal-body\\\">\\r\\n  <form [formGroup]=\\\"addOrderItemForm\\\">\\r\\n    <div class=\\\"custom-control custom-switch\\\" style=\\\"float: right\\\">\\r\\n      <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"customSwitch1\\\" (click)=\\\"shouldEnableBarCodeMode($event)\\\" [(ngModel)]=\\\"barCodeMode\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n      <label class=\\\"custom-control-label\\\" for=\\\"customSwitch1\\\">Barcode Mode</label>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"barCodeMode\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"barCode\\\">BarCode</label>\\r\\n          <input type=\\\"text\\\" formControlName=\\\"barCode\\\"\\r\\n            (change)=\\\"onValueChange()\\\"\\r\\n            (blur)=\\\"onBlurBarCode()\\\"\\r\\n            class=\\\"form-control\\\"/>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"! barCodeMode\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"Name\\\">Product Name</label>\\r\\n        <input type=\\\"text\\\" formControlName=\\\"productName\\\"\\r\\n          [(ngModel)]=\\\"inputProductName\\\"\\r\\n          [ngbTypeahead]=\\\"search\\\"\\r\\n          (change)=\\\"onProductNameChange()\\\"\\r\\n          (blur)=\\\"onBlurProductName()\\\"\\r\\n          class=\\\"form-control\\\"/>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"quantity\\\">Quantity</label>\\r\\n        <input type=\\\"number\\\" formControlName=\\\"quantity\\\"\\r\\n          (change)=\\\"onValueChange()\\\"\\r\\n          class=\\\"form-control\\\"/>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"productStockInfo\\\">\\r\\n      <table class=\\\"table table-striped\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th>Id</th>\\r\\n            <th>Name</th>\\r\\n            <th>Initial Qty</th>\\r\\n            <th>Free Qty</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr>\\r\\n            <td>{{ productStockInfo.product.id }}</td>\\r\\n            <td>{{ productStockInfo.product.name }}</td>\\r\\n            <td>{{ productStockInfo.createdQuantity }}</td>\\r\\n            <td>{{ productStockInfo.createdQuantity - productStockInfo.usedQuantity }}</td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"productItem\\\">\\r\\n      <table class=\\\"table table-striped\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th>Id</th>\\r\\n            <th>Name</th>\\r\\n            <th>Free</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr>\\r\\n            <td>{{ productItem.id }}</td>\\r\\n            <td>{{ productItem.product.name }}</td>\\r\\n            <td>{{ productItem.orderItemId ? 'No' : 'Yes' }}</td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n<div class=\\\"modal-footer\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col\\\">\\r\\n          <button class=\\\"btn btn-outline-dark\\\" type=\\\"button\\\" [disabled]=\\\"isAddButtonDisabled\\\" (click)=\\\"onSubmit(true)\\\" style=\\\"float:left\\\">\\r\\n              <span *ngIf=\\\"addOrderItemInProgress\\\" class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\" aria-hidden=\\\"true\\\"></span>\\r\\n            Add Another</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-auto\\\">\\r\\n            <ngb-alert *ngIf=\\\"errorMessage\\\" type=\\\"danger\\\" [dismissible]=\\\"true\\\" (close)=\\\"errorMessage = null\\\">{{ errorMessage }}</ngb-alert>\\r\\n        </div>\\r\\n        <div class=\\\"col\\\">\\r\\n          <button class=\\\"btn btn-outline-dark\\\" type=\\\"button\\\" [disabled]=\\\"isAddButtonDisabled\\\" (click)=\\\"onSubmit(false)\\\" style=\\\"float:right\\\">\\r\\n              <span *ngIf=\\\"addOrderItemInProgress\\\" class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\" aria-hidden=\\\"true\\\"></span>\\r\\n            Add</button>\\r\\n        </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { OrderService } from 'src/app/service/order-service';\r\nimport { AddOrderItemReq } from 'src/app/model/request/order/AddOrderItemReq';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ProductService } from 'src/app/service/product-service';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, map } from 'rxjs/operators';\r\nimport { ProductStockInfo } from 'src/app/model/ProductStockInfo';\r\nimport { AddOrderItemByBarCodeReq } from 'src/app/model/request/order/AddOrderItemByBarCodeReq';\r\nimport { TypeUtil } from 'src/app/util/TypeUtil';\r\nimport { ProductItem } from 'src/app/model/ProductItem';\r\n\r\n@Component({\r\n  selector: 'add-order-item-modal',\r\n  templateUrl: './add-order-item-modal.component.html',\r\n  styleUrls: ['./add-order-item-modal.component.css']\r\n})\r\nexport class AddOrderItemModalComponent implements OnInit {\r\n\r\n  @Output() addOrderItemEvent = new EventEmitter<string>();\r\n  @Input() orderId: number\r\n\r\n  addOrderItemForm: FormGroup\r\n  addOrderItemInProgress: boolean\r\n  isAddButtonDisabled: boolean\r\n  barCodeMode: boolean\r\n  productNames: string[] = []\r\n  productIdMapByName: Map<string, number> = new Map()\r\n  inputProductName: string\r\n  productStockInfo: ProductStockInfo\r\n  productItem: ProductItem\r\n  errorMessage: string\r\n  private _error = new Subject<string>()\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n              private modal: NgbActiveModal,\r\n              private cookieService: CookieService,\r\n              private productService: ProductService,\r\n              private orderService: OrderService) {}\r\n\r\n  ngOnInit() {\r\n    this.initBarCodeMode();\r\n    this.initForm();\r\n    this.getAllCustomers();\r\n    this._error.subscribe((msg) => this.errorMessage = msg);\r\n    this._error.pipe(debounceTime(4000)).subscribe(() => this.errorMessage = null);\r\n  }\r\n\r\n  search = (text$: Observable<string>) =>\r\n    text$.pipe(\r\n      debounceTime(200),\r\n      distinctUntilChanged(),\r\n      map(term => term.length < 1 ? []\r\n        : this.productNames.filter(v => v.toLowerCase().indexOf(term.toLowerCase()) > -1).slice(0, 10))\r\n  )\r\n\r\n  onProductNameChange() {\r\n    this.onValueChange();\r\n    this.productStockInfo = null;\r\n  }\r\n\r\n  onValueChange() {\r\n    this.errorMessage = null;\r\n  }\r\n\r\n  initForm() {\r\n    if (this.barCodeMode) {\r\n      this.disableAddButton(false);\r\n    }\r\n    this.addOrderItemForm = this.formBuilder.group({\r\n      barCode: [''],\r\n      productName: [''],\r\n      productId: [''],\r\n      quantity: ['', Validators.min(1)]\r\n    });\r\n  }\r\n\r\n  private initBarCodeMode() {\r\n    this.barCodeMode = this.cookieService.check(\"barCodeMode\") ? TypeUtil.toBoolean(this.cookieService.get(\"barCodeMode\")) : true;\r\n  }\r\n\r\n  shouldEnableBarCodeMode(event) {\r\n    this.resetForm();\r\n    this.cookieService.set(\"barCodeMode\", String(event.currentTarget.checked));\r\n  }\r\n\r\n  private resetForm() {\r\n    this.addOrderItemForm.reset();\r\n    this.productStockInfo = null;\r\n    this.productItem = null;\r\n    this.changeErrorMessage(null);\r\n  }\r\n\r\n  getAllCustomers() {\r\n    this.productService.getAllProductNames().subscribe(\r\n      data => {\r\n        for (let idAndNameProduct of data) {\r\n          this.productIdMapByName.set(idAndNameProduct.second, idAndNameProduct.first)\r\n          this.productNames.push(idAndNameProduct.second);\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  onBlurProductName() {\r\n    this.productItem = null;\r\n    let productName = this.addOrderItemForm.get(\"productName\").value;\r\n    if (productName != null) {\r\n      let productId = this.productIdMapByName.get(productName);\r\n      if (productId != null) {\r\n        this.productService.getProductStockInfo(productId).subscribe(\r\n          data => {\r\n            this.productStockInfo = ProductStockInfo.fromJson(data);\r\n          },\r\n          error => {\r\n            this.changeErrorMessage(error.error);\r\n            this.productStockInfo = null;\r\n          }\r\n        )\r\n      }\r\n    } \r\n  }\r\n\r\n  onBlurBarCode() {\r\n    this.productStockInfo = null;\r\n    let barCode = this.addOrderItemForm.get(\"barCode\").value;\r\n    if (barCode != null) {\r\n      this.productService.getProductItemByBarCode(barCode).subscribe(\r\n        data => {\r\n          this.productItem = ProductItem.fromJson(data);\r\n          this.disableAddButton(false);\r\n        },\r\n        error => {\r\n          this.changeErrorMessage(error.error);\r\n          this.productItem = null;\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  onSubmit(addAnother: boolean) {\r\n    if (this.barCodeMode) {\r\n      this.onSubmitBarCodeMode(addAnother);\r\n    } else {\r\n      this.onSubmitNoBarCodeMode(addAnother);\r\n    }\r\n  }\r\n  \r\n  private onSubmitBarCodeMode(addAnother: boolean) {\r\n    let barCode = this.addOrderItemForm.get(\"barCode\").value;\r\n    if (barCode == null || barCode.length == 0) {\r\n      this.changeErrorMessage(\"Please enter a barcode.\")\r\n    } else {\r\n      this.addInProgress(true);\r\n      let request = new AddOrderItemByBarCodeReq(this.orderId, barCode);\r\n      this.orderService.addOrderItemByBarCode(request).subscribe(\r\n        data => {\r\n          this.addOrderItemEvent.emit();\r\n          if (addAnother) {\r\n            this.resetModal();\r\n          } else {\r\n            this.modal.close(true);\r\n          }\r\n          \r\n        },\r\n        error => {\r\n          this.changeErrorMessage(error.error);\r\n          this.addInProgress(false);\r\n        });\r\n      this.errorMessage = null;\r\n    }\r\n  }\r\n\r\n  private onSubmitNoBarCodeMode(addAnother: boolean) {\r\n    let productName = this.addOrderItemForm.get(\"productName\").value;\r\n    let productId = this.productIdMapByName.get(productName);\r\n    const qty = this.addOrderItemForm.get(\"quantity\").value;\r\n    if (this.productStockInfo === null) {\r\n      this.changeErrorMessage('Please select a product from the auto-complete list.');\r\n    } else if (! this.isValidQuantity(qty)) {\r\n      this.changeErrorMessage('Please choose a quantity between 1 to ' + this.productStockInfo.getFreeQuantity());\r\n    } else {\r\n      this.addInProgress(true);\r\n      let request = new AddOrderItemReq(this.orderId, productId, qty);\r\n      this.orderService.addOrderItem(request).subscribe(\r\n        data => {\r\n          this.addOrderItemEvent.emit();\r\n          if (addAnother) {\r\n            this.resetModal();\r\n          } else {\r\n            this.modal.close(true);\r\n          }\r\n        },\r\n        error => {\r\n          this.changeErrorMessage(error.error);\r\n          this.addInProgress(false);\r\n        });\r\n      this.errorMessage = null;\r\n    }\r\n  }\r\n\r\n  private addInProgress(isInProgress: boolean) {\r\n    this.addOrderItemInProgress = isInProgress;\r\n  }\r\n\r\n  private changeErrorMessage(errorMessage: string) {\r\n    this._error.next(errorMessage);\r\n  }\r\n\r\n  private isValidQuantity(qty: number): boolean {\r\n    return qty > 0 && qty <= this.productStockInfo.getFreeQuantity();\r\n  }\r\n\r\n  private disableAddButton(disabled: boolean) {\r\n    this.isAddButtonDisabled = disabled;\r\n  }\r\n\r\n  private resetModal() {\r\n    this.addOrderItemForm.reset();\r\n    this.addInProgress(false);\r\n    this.productStockInfo = null;\r\n  }\r\n  \r\n\r\n  onClose() {\r\n    this.modal.close(false)\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvbW9kYWwvY29uZmlybS1tb2RhbC9jb25maXJtLW1vZGFsLWNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">{{ title }}</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"onClickClose()\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n</div>\\r\\n<div class=\\\"modal-body\\\">\\r\\n    <p>{{ message }}</p>\\r\\n</div>\\r\\n<div class=\\\"modal-footer\\\">\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"onClickClose()\\\">No</button>\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onClickYes()\\\">Yes</button>\\r\\n</div>\\r\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'confirm-modal',\r\n  templateUrl: './confirm-modal-component.html',\r\n  styleUrls: ['./confirm-modal-component.css']\r\n})\r\nexport class ConfirmModalComponent implements OnInit {\r\n\r\n  @Input() title: string\r\n  @Input() message: string\r\n\r\n  constructor(public modal: NgbActiveModal) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onClickYes() {\r\n    this.modal.close(true)\r\n  }\r\n\r\n  onClickClose() {\r\n    this.modal.close(false)\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvbW9kYWwvY3JlYXRlLW9yZGVyLW1vZGFsL2NyZWF0ZS1vcmRlci1tb2RhbC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"modal-header\\\">\\r\\n  <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">New Order</h4>\\r\\n  <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"onClose()\\\">\\r\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n  </button>\\r\\n</div>\\r\\n<form [formGroup]=\\\"createOrderForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"modal-body\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"Name\\\">Name</label>\\r\\n        <input type=\\\"text\\\" formControlName=\\\"name\\\"\\r\\n          (input)=\\\"settingChanged()\\\"\\r\\n          class=\\\"form-control\\\"/>\\r\\n          <label *ngIf=\\\"isFormSubmitted && createOrderForm.get('name').invalid\\\" class=\\\"text-danger\\\">A name is required.</label>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"comment\\\">Comment/Description</label>\\r\\n        <input type=\\\"text\\\" formControlName=\\\"comment\\\"\\r\\n          (input)=\\\"settingChanged()\\\"\\r\\n          class=\\\"form-control\\\"/>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"customer\\\">Customer</label>\\r\\n        <select type=\\\"text\\\" formControlName=\\\"customers\\\"\\r\\n          (input)=\\\"settingChanged()\\\"\\r\\n          class=\\\"form-control\\\">\\r\\n          <option *ngFor=\\\"let customer of customersArray\\\"\\r\\n          [ngValue]=\\\"customer\\\">{{customer.id}} | {{ customer.store.name }} | {{ customer.store.owner.firstName }} {{ customer.store.owner.lastName }}</option>\\r\\n        </select>\\r\\n        <label *ngIf=\\\"isFormSubmitted && createOrderForm.get('customers').invalid\\\" class=\\\"text-danger\\\">A customer is required.</label>\\r\\n      </div>\\r\\n      <div>\\r\\n          <ngb-alert *ngIf=\\\"errorMessage\\\" type=\\\"danger\\\" [dismissible]=\\\"false\\\" (close)=\\\"errorMessage = null\\\">{{ errorMessage }}</ngb-alert>\\r\\n      </div>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-outline-dark\\\">Create</button>\\r\\n  </div>\\r\\n</form>\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Customer } from 'src/app/model/Customer';\r\nimport { CustomerService } from 'src/app/service/customer-service';\r\nimport { Order } from 'src/app/model/Order';\r\nimport { OrderService } from 'src/app/service/order-service';\r\nimport { Router } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-create-order-modal',\r\n  templateUrl: './create-order-modal.component.html',\r\n  styleUrls: ['./create-order-modal.component.css']\r\n})\r\nexport class CreateOrderModalComponent implements OnInit {\r\n\r\n  createOrderForm: FormGroup\r\n  customersArray: Customer[] = []\r\n  isFormSubmitted: boolean = false\r\n  errorMessage: string\r\n  private _error = new Subject<string>()\r\n\r\n  constructor(private modal: NgbActiveModal,\r\n              private customerService: CustomerService,\r\n              private orderService: OrderService,\r\n              private router: Router,\r\n              private formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit() {\r\n    this.createOrderForm = this.formBuilder.group({\r\n      name: ['', [Validators.required]],\r\n      customers: [[], [Validators.required]],\r\n      comment: ['']\r\n    });\r\n\r\n    this.customerService.getAllCustomersNoLimit().subscribe(data => {\r\n      console.log(data)\r\n      for (let i = 0; i < data.length; i++) {\r\n        this.customersArray.push(Customer.fromJson(data[i]))\r\n      }\r\n      this.createOrderForm.setValue({\r\n        name: '',\r\n        comment: '',\r\n        customers: this.customersArray\r\n      })\r\n    })\r\n\r\n    this._error.subscribe((msg) => this.errorMessage = msg)\r\n    this._error.pipe(debounceTime(5000)).subscribe(() => this.errorMessage = null)\r\n  }\r\n\r\n  public changeErrorMessage(errorMessage: string) {\r\n    this._error.next(\"Order not created : \" + errorMessage)\r\n  }\r\n\r\n  settingChanged() {\r\n\r\n  }\r\n\r\n  onSubmit() {\r\n    this.isFormSubmitted = true\r\n    const customer = this.createOrderForm.get(\"customers\").value\r\n    const orderName = this.createOrderForm.get(\"name\").value\r\n    const comment = this.createOrderForm.get(\"comment\").value\r\n    const order = new Order()\r\n    order.name = orderName\r\n    order.comment = comment\r\n    order.customer = customer\r\n    this.orderService.addOrder(order).subscribe(\r\n      data => {\r\n        this.modal.close(true)\r\n        this.router.navigate(['/order', data.id])\r\n      },\r\n      error => {\r\n        this.changeErrorMessage(error.error);\r\n      })\r\n  }\r\n\r\n  onClose() {\r\n    this.modal.close(false)\r\n  }\r\n\r\n}\r\n","module.exports = \".my-custom-scrollbar {\\r\\n    position: relative;\\r\\n    max-height: 500px;\\r\\n    overflow: auto;\\r\\n}\\r\\n\\r\\n.table-wrapper-scroll-y {\\r\\n    display: block;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9tb2RhbC9kZWxldGUtb3JkZXItaXRlbXMtbW9kYWwvZGVsZXRlLW9yZGVyLWl0ZW1zLW1vZGFsLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxrQkFBa0I7SUFDbEIsaUJBQWlCO0lBQ2pCLGNBQWM7QUFDbEI7O0FBRUE7SUFDSSxjQUFjO0FBQ2xCIiwiZmlsZSI6ImFwcC9tb2RhbC9kZWxldGUtb3JkZXItaXRlbXMtbW9kYWwvZGVsZXRlLW9yZGVyLWl0ZW1zLW1vZGFsLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubXktY3VzdG9tLXNjcm9sbGJhciB7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBtYXgtaGVpZ2h0OiA1MDBweDtcclxuICAgIG92ZXJmbG93OiBhdXRvO1xyXG59XHJcblxyXG4udGFibGUtd3JhcHBlci1zY3JvbGwteSB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxufSJdfQ== */\"","module.exports = \"<div class=\\\"modal-header\\\">\\r\\n  <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">{{ title }}</h4>\\r\\n  <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"onClickClose()\\\">\\r\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n  </button>\\r\\n</div>\\r\\n<div class=\\\"modal-body\\\">\\r\\n  <div class=\\\"table-wrapper-scroll-y my-custom-scrollbar\\\">\\r\\n    <table class=\\\"table table-striped\\\">\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th>#</th>\\r\\n          <th>Id</th>\\r\\n          <th>Product Name</th>\\r\\n          <th>BarCode</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let item of orderItems; let i = index\\\">\\r\\n          <td>{{ i+1 }}</td>\\r\\n          <td>{{ item.productItem.id }}</td>\\r\\n          <td>{{ item.productItem.product.name }}</td>\\r\\n          <td>{{ item.productItem.barCode }}</td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"modal-footer\\\">\\r\\n<button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"onClickClose()\\\">No</button>\\r\\n<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onClickYes()\\\">Yes</button>\\r\\n</div>\\r\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { OrderItem } from 'src/app/model/OrderItem';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-delete-order-items-modal',\r\n  templateUrl: './delete-order-items-modal.component.html',\r\n  styleUrls: ['./delete-order-items-modal.component.css']\r\n})\r\nexport class DeleteOrderItemsModalComponent implements OnInit {\r\n\r\n  @Input() title: string\r\n  @Input() orderItems: OrderItem[]\r\n\r\n  constructor(public modal: NgbActiveModal) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onClickYes() {\r\n    this.modal.close(true);\r\n  }\r\n\r\n  onClickClose() {\r\n    this.modal.close(false);\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvbW9kYWwvaW5mby1tb2RhbC9pbmZvLW1vZGFsLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"modal-header\\\">\\r\\n  <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">{{ title }}</h4>\\r\\n  <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"onClickClose()\\\">\\r\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n  </button>\\r\\n</div>\\r\\n<div class=\\\"modal-body\\\">\\r\\n  <p>{{ message }}</p>\\r\\n</div>\\r\\n<div class=\\\"modal-footer\\\">\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"onClickClose()\\\">OK</button>\\r\\n</div>\\r\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-info-modal',\r\n  templateUrl: './info-modal.component.html',\r\n  styleUrls: ['./info-modal.component.css']\r\n})\r\nexport class InfoModalComponent implements OnInit {\r\n\r\n  @Input() title: string\r\n  @Input() message: string\r\n\r\n  constructor(public modal: NgbActiveModal) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onClickClose() {\r\n    this.modal.close(false)\r\n  }\r\n}\r\n","module.exports = \".ng-invalid:not(form)  {\\r\\n    border-left: 5px solid #a94442; /* red */\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9tb2RhbC9vcmRlci1ub3RpZmljYXRpb24tbW9kYWwvb3JkZXItbm90aWZpY2F0aW9uLW1vZGFsLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSw4QkFBOEIsRUFBRSxRQUFRO0FBQzVDIiwiZmlsZSI6ImFwcC9tb2RhbC9vcmRlci1ub3RpZmljYXRpb24tbW9kYWwvb3JkZXItbm90aWZpY2F0aW9uLW1vZGFsLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubmctaW52YWxpZDpub3QoZm9ybSkgIHtcclxuICAgIGJvcmRlci1sZWZ0OiA1cHggc29saWQgI2E5NDQ0MjsgLyogcmVkICovXHJcbn0iXX0= */\"","module.exports = \"<div>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h3 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Order Notification Setting</h3>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"onClose()\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <form [formGroup]=\\\"form\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"notifType\\\">Notification Type</label>\\r\\n        <select formControlName=\\\"docTypesSelect\\\" class=\\\"custom-select\\\" (change)=\\\"onChangeType($event)\\\" required>\\r\\n            <option *ngFor=\\\"let type of docTypesMapByName.keys()\\\" [ngValue]=\\\"type\\\">{{ type }}</option>\\r\\n        </select>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\" *ngIf=\\\"selectedType\\\">\\r\\n        <label for=\\\"formats\\\">Formats</label>\\r\\n        <div class=\\\"form-inline\\\">\\r\\n          <div formArrayName=\\\"formats\\\" *ngFor=\\\"let format of form.get('formats').controls; let i = index;\\\">\\r\\n            <label class=\\\"checkbox-inline\\\" style=\\\"margin-right:25px\\\" for=\\\"format\\\">{{ selectedType.supportedFormats[i] }}&nbsp;\\r\\n              <input formControlName=\\\"format\\\" type=\\\"checkbox\\\">\\r\\n            </label>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"dateDocument\\\">Document's Date</label>\\r\\n        <div class=\\\"input-group\\\">\\r\\n          <input formControlName=\\\"dateDocument\\\" class=\\\"form-control\\\" placeholder=\\\"yyyy-mm-dd\\\" name=\\\"dp\\\" ngbDatepicker #dp=\\\"ngbDatepicker\\\">\\r\\n          <div class=\\\"input-group-append\\\">\\r\\n            <button class=\\\"btn btn-outline-secondary calendar\\\" (click)=\\\"dp.toggle()\\\" type=\\\"button\\\"></button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary btn-sm\\\" (click)=\\\"addEmailInput()\\\" style=\\\"float:right\\\">\\r\\n        <span class=\\\"glyphicon glyphicon-plus\\\"></span>+\\r\\n      </button>\\r\\n      <div formArrayName=\\\"emailInputs\\\" *ngFor=\\\"let input of form.get('emailInputs').controls; let i = index;\\\">\\r\\n        <div [formGroupName]=\\\"i\\\">\\r\\n          <label for=\\\"email\\\">Email {{ i + 1 }} </label>\\r\\n          <input formControlName=\\\"email\\\" class=\\\"form-control\\\" style=\\\"margin-bottom: 6px\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"onSubmit()\\\" [disabled]=\\\"! form.valid\\\">Notify</button>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormGroup, FormBuilder, Validators, FormControl, FormArray } from '@angular/forms';\r\nimport { NotificationService } from 'src/app/service/notification-service';\r\nimport { OrderNotificationRequest } from 'src/app/model/request/notification/OrderNotificationRequest';\r\nimport * as fileSaver from 'file-saver'\r\nimport { DocType } from 'src/app/model/DocType';\r\n\r\n@Component({\r\n  selector: 'app-order-notification-modal',\r\n  templateUrl: './order-notification-modal.component.html',\r\n  styleUrls: ['./order-notification-modal.component.css']\r\n})\r\nexport class OrderNotificationModalComponent implements OnInit {\r\n\r\n  @Input() orderId: number\r\n  form: FormGroup\r\n  docTypesMapByName: Map<string, DocType> = new Map();\r\n  selectedType: DocType;\r\n  formatsOfSelectedType: string[];\r\n\r\n  constructor(private modal: NgbActiveModal,\r\n              private formBuilder: FormBuilder,\r\n              private notificationService: NotificationService) {}\r\n\r\n  ngOnInit() {\r\n    this.initDocTypes();\r\n    this.form = this.formBuilder.group({\r\n      docTypesSelect: [[], [Validators.required]],\r\n      formats: this.formBuilder.array([]),\r\n      dateDocument: [],\r\n      emailInputs: this.formBuilder.array([])\r\n    });\r\n    const emailInputs = this.form.controls.emailInputs as FormArray;\r\n    emailInputs.push(this.createEmailInput());\r\n  }\r\n\r\n  private initDocTypes() {\r\n    this.notificationService.getDocumentTypes().subscribe(\r\n      data => {\r\n        for (let i = 0; i < data.length; i++) {\r\n          let docType = DocType.fromJson(data[i]);\r\n          this.docTypesMapByName.set(docType.type, docType);\r\n        }\r\n      },\r\n      error => {\r\n        console.log(\"Error : Cannot get the notification types : \" + error);  \r\n      }\r\n    )\r\n  }\r\n\r\n  private createEmailInput(): FormGroup {\r\n    return this.formBuilder.group({\r\n      email: ['', Validators.email]\r\n    });\r\n  }\r\n\r\n  private createFormatCheckbox(): FormGroup {\r\n    return this.formBuilder.group({\r\n      format: []\r\n    });\r\n  }\r\n\r\n  addFormatCheckbox() {\r\n    let formats = this.form.get('formats') as FormArray;\r\n    formats.push(this.createFormatCheckbox());\r\n  }\r\n\r\n  addEmailInput() {\r\n    let emailInputs = this.form.get('emailInputs') as FormArray;\r\n    emailInputs.push(this.createEmailInput());\r\n  }\r\n\r\n  onChangeType(event: any) {\r\n    let selectedTypeName = event.target.selectedOptions[0].text;\r\n    if (selectedTypeName != null) {\r\n      this.selectedType = this.docTypesMapByName.get(selectedTypeName);\r\n      if (this.selectedType != null) {\r\n        this.formatsOfSelectedType = this.selectedType.supportedFormats;\r\n        for (let i = 0; i < this.formatsOfSelectedType.length; i++) {\r\n          this.addFormatCheckbox()\r\n        }\r\n      } else {\r\n        console.log(\"Unknown selected type name \" + selectedTypeName + \". Known types : \" + JSON.stringify(this.docTypesMapByName));\r\n      }\r\n    }\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.form.valid) {\r\n      let dp = this.form.controls.dateDocument.value;\r\n      let type = this.form.controls.docTypesSelect.value;\r\n      let req = new OrderNotificationRequest(type, this.orderId);\r\n      if (dp != null) {\r\n        req.dateDocument = new Date(dp.year, dp.month - 1, dp.day + 1).getTime();\r\n      }\r\n      req.emails = this.getEmailsFromInputs();\r\n      this.notificationService.notify(req).subscribe(\r\n        response => {\r\n          this.saveFile(response.body, response.headers.get('filename'), response.headers.get('Content-type'));\r\n          this.modal.close();\r\n        },\r\n        error => {\r\n         alert(JSON.stringify(error));\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  saveFile(data: any, filename?: string, contentType?: string) {\r\n    const blob = new Blob([data], {type: contentType});\r\n    fileSaver.saveAs(blob, filename);\r\n  }\r\n\r\n  private getEmailsFromInputs(): string[] {\r\n    let emails: string[] = [];\r\n    let array = this.form.controls.emailInputs as FormArray;\r\n    for (let i = 0; i < array.length; i++) {\r\n      let emailObjValue = array.at(i).value;\r\n      if (emailObjValue.email.length > 0) {\r\n        emails.push(emailObjValue.email);\r\n      }\r\n    }\r\n    return emails;\r\n  }\r\n\r\n  onClose() {\r\n    this.modal.close(false);\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvbW9kYWwvc2hvdy1vcmRlci1pdGVtcy1tb2RhbC9zaG93LW9yZGVyLWl0ZW1zLW1vZGFsLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"modal-header\\\">\\r\\n  <h5 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Order Items</h5>\\r\\n  <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"onClose()\\\">\\r\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n  </button>\\r\\n</div>\\r\\n<div class=\\\"modal-body\\\">\\r\\n  <table class=\\\"table table-striped\\\">\\r\\n    <thead>\\r\\n      <tr>\\r\\n        <th>#</th>\\r\\n        <th>Id</th>\\r\\n        <th>Name</th>\\r\\n        <th>Price</th>\\r\\n        <th>Creation Date</th>\\r\\n        <th>Last Modified Date</th>\\r\\n        <th>BarCode</th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n      <tr *ngFor=\\\"let item of orderItems; let i = index\\\">\\r\\n        <td>{{ i+1 }}</td>\\r\\n        <td>{{ item.productItem.id }}</td>\\r\\n        <td>{{ item.productItem.product.name }}</td>\\r\\n        <td>{{ item.productItem.product.price }} €</td>\\r\\n        <td>{{ item.createdDatetime }}</td>\\r\\n        <td>{{ item.lastModifiedDatetime }}</td>\\r\\n        <td>{{ item.productItem.barCode }}</td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n</div>\\r\\n<div class=\\\"modal-footer\\\">\\r\\n  <button class=\\\"btn btn-outline-dark\\\" (click)=\\\"onClose()\\\">Close</button>\\r\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { OrderItem } from 'src/app/model/OrderItem';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-show-order-items-modal',\r\n  templateUrl: './show-order-items-modal.component.html',\r\n  styleUrls: ['./show-order-items-modal.component.css']\r\n})\r\nexport class ShowOrderItemsModalComponent implements OnInit {\r\n\r\n  @Input() orderItems: OrderItem[];\r\n\r\n  constructor(private modal: NgbActiveModal) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onClose() {\r\n    this.modal.close(false)\r\n  }\r\n}\r\n","module.exports = \".my-custom-scrollbar {\\r\\n  position: relative;\\r\\n  height: 450px;\\r\\n  overflow: auto;\\r\\n}\\r\\n\\r\\n.table-wrapper-scroll-y {\\r\\n  display: block;\\r\\n}\\r\\n\\r\\n.drop-box {\\r\\n  cursor: pointer;\\r\\n  background: #F8F8F8;\\r\\n  border: 5px dashed #DDD;\\r\\n  text-align: center;\\r\\n  padding: 40px;\\r\\n}\\r\\n\\r\\n.drag-over-title {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n.drop-box.dragover {\\r\\n  opacity: 0.6;\\r\\n}\\r\\n\\r\\n.drop-box.dragover .drag-over-title {\\r\\n  display: block;\\r\\n}\\r\\n\\r\\n.drop-box.dragover .drag-in-title {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\ninput[type='file'] {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\np { display: inline }\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9tb2RhbC91cGxvYWQtcHJvZHVjdC1maWxlLW1vZGFsL3VwbG9hZC1wcm9kdWN0LWZpbGUtbW9kYWwuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGtCQUFrQjtFQUNsQixhQUFhO0VBQ2IsY0FBYztBQUNoQjs7QUFFQTtFQUNFLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsbUJBQW1CO0VBQ25CLHVCQUF1QjtFQUN2QixrQkFBa0I7RUFDbEIsYUFBYTtBQUNmOztBQUVBO0VBQ0UsYUFBYTtBQUNmOztBQUVBO0VBQ0UsWUFBWTtBQUNkOztBQUVBO0VBQ0UsY0FBYztBQUNoQjs7QUFFQTtFQUNFLGFBQWE7QUFDZjs7QUFFQTtFQUNFLGFBQWE7QUFDZjs7QUFFQSxJQUFJLGdCQUFnQiIsImZpbGUiOiJhcHAvbW9kYWwvdXBsb2FkLXByb2R1Y3QtZmlsZS1tb2RhbC91cGxvYWQtcHJvZHVjdC1maWxlLW1vZGFsLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubXktY3VzdG9tLXNjcm9sbGJhciB7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIGhlaWdodDogNDUwcHg7XHJcbiAgb3ZlcmZsb3c6IGF1dG87XHJcbn1cclxuXHJcbi50YWJsZS13cmFwcGVyLXNjcm9sbC15IHtcclxuICBkaXNwbGF5OiBibG9jaztcclxufVxyXG5cclxuLmRyb3AtYm94IHtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgYmFja2dyb3VuZDogI0Y4RjhGODtcclxuICBib3JkZXI6IDVweCBkYXNoZWQgI0RERDtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgcGFkZGluZzogNDBweDtcclxufVxyXG4gIFxyXG4uZHJhZy1vdmVyLXRpdGxlIHtcclxuICBkaXNwbGF5OiBub25lO1xyXG59XHJcbiAgXHJcbi5kcm9wLWJveC5kcmFnb3ZlciB7XHJcbiAgb3BhY2l0eTogMC42O1xyXG59XHJcbiAgXHJcbi5kcm9wLWJveC5kcmFnb3ZlciAuZHJhZy1vdmVyLXRpdGxlIHtcclxuICBkaXNwbGF5OiBibG9jaztcclxufVxyXG4gIFxyXG4uZHJvcC1ib3guZHJhZ292ZXIgLmRyYWctaW4tdGl0bGUge1xyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbn1cclxuICBcclxuaW5wdXRbdHlwZT0nZmlsZSddIHtcclxuICBkaXNwbGF5OiBub25lO1xyXG59XHJcblxyXG5wIHsgZGlzcGxheTogaW5saW5lIH1cclxuIl19 */\"","module.exports = \"<div>\\r\\n  <input #fileInput type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\"/>\\r\\n \\r\\n  <div class=\\\"drop-box\\\" ng2FileDrop\\r\\n       [ngClass]=\\\"{'dragover': isDropOver}\\\"\\r\\n       [uploader]=\\\"uploader\\\"\\r\\n       (fileOver)=\\\"fileOverAnother($event)\\\"\\r\\n       (click)=\\\"fileClicked()\\\">\\r\\n    <span class=\\\"drag-in-title\\\">Import or drag file here</span>\\r\\n    <span class=\\\"drag-over-title\\\">Drop the file</span>\\r\\n  </div>\\r\\n  <br>\\r\\n  <div *ngIf=\\\"result\\\">\\r\\n    <p>Upload ID : {{ result.id }}</p>\\r\\n    <p> | </p>\\r\\n    <p>Rows in file : {{ result.rowsInFile }}</p>\\r\\n    <p> | </p>\\r\\n    <p>Rows Processed : {{ result.rowsProcessed }}</p>\\r\\n    <p> | </p>\\r\\n    <p>Total Product Items : {{ result.productItems.length }}</p>\\r\\n    <div class=\\\"table-wrapper-scroll-y my-custom-scrollbar\\\">\\r\\n      <table class=\\\"table table-sm table-striped\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th class=\\\"th-sm\\\">Name</th>\\r\\n            <th class=\\\"th-sm\\\">Price</th>\\r\\n            <th class=\\\"th-sm\\\">BarCode</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let productItem of result.productItems\\\">\\r\\n            <td>{{ productItem.product.name }}</td>\\r\\n            <td>{{ productItem.product.price }} €</td>\\r\\n            <td>{{ productItem.barCode }}</td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n    <br>\\r\\n    <div class=\\\"row\\\" style=\\\"float:right\\\">\\r\\n      <div class=\\\"col-md-auto\\\">\\r\\n        <p>Are you sure you want to add the {{ result.productItems.length }} product items to the stock ?</p>\\r\\n      </div>\\r\\n      <div class=\\\"col col-lg-1\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onClickYes()\\\">Yes</button>\\r\\n      </div>\\r\\n      <div class=\\\"col col-lg-1\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"onClickNo()\\\">No</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n</div>\\r\\n\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { FileUploader, FileItem, ParsedResponseHeaders } from 'ng2-file-upload';\r\nimport { UploadProductsFileResult } from 'src/app/model/UploadProductsFileResult';\r\nimport { ProductService } from '../../service/product-service';\r\n\r\n@Component({\r\n  selector: 'upload-product-file-modal',\r\n  templateUrl: './upload-product-file-modal.component.html',\r\n  styleUrls: ['./upload-product-file-modal.component.css']\r\n})\r\nexport class UploadProductFileModalComponent implements OnInit {\r\n\r\n  @ViewChild('fileInput') fileInput: ElementRef;\r\n\r\n  private result: UploadProductsFileResult\r\n \r\n  uploader: FileUploader;\r\n  isDropOver: boolean;\r\n  showConfirmUploadButton: boolean = false;\r\n\r\n  constructor(private productService: ProductService){}\r\n \r\n  ngOnInit(): void {\r\n    const headers = [{name: 'Accept', value: 'application/json'}];\r\n    this.uploader = new FileUploader({\r\n      url: 'v1/productItemFileUpload/upload',\r\n      autoUpload: true,\r\n      headers: headers\r\n    });\r\n    this.uploader.onErrorItem = (item, response, status, headers) => this.onErrorItem(item, response, status, headers);\r\n    this.uploader.onSuccessItem = (item, response, status, headers) => this.onSuccessItem(item, response, status, headers);\r\n  }\r\n\r\n  onSuccessItem(item: FileItem, response: string, status: number, headers: ParsedResponseHeaders) {\r\n    this.result = UploadProductsFileResult.fromJson(JSON.parse(response));\r\n    this.showConfirmUploadButton = true;\r\n  }\r\n  onErrorItem(item: FileItem, response: string, status: number, headers: ParsedResponseHeaders){\r\n      alert('Error : ' + JSON.stringify(response)); //error server response\r\n      this.showConfirmUploadButton = false;\r\n  }\r\n \r\n  fileOverAnother(e: any): void {\r\n    this.reset();\r\n    this.isDropOver = e;\r\n  }\r\n \r\n  fileClicked() {\r\n    this.fileInput.nativeElement.click();\r\n  }\r\n\r\n  onClickYes() {\r\n    alert('yes');\r\n    this.productService.confirmProductItemFileUpload(this.result.id).subscribe(\r\n      data => {\r\n        this.reset();\r\n      }\r\n     )\r\n\r\n  }\r\n\r\n  onClickNo() {\r\n    alert('no');\r\n  }\r\n\r\n  private reset() {\r\n    this.result = null;\r\n  }\r\n\r\n}\r\n","export class Address {\r\n\r\n    streetNumber: string\r\n    streetName: string\r\n    city: string\r\n    country: string\r\n    zipCode: number\r\n\r\n    constructor(streetNumber: string, streetName: string, zipCode: number, city: string, country: string) {\r\n        this.streetNumber = streetNumber;\r\n        this.streetName = streetName;\r\n        this.zipCode = zipCode;\r\n        this.city = city;\r\n        this.country = country;\r\n    }\r\n\r\n    static fromJson(data: any): Address {\r\n        return new Address(data.streetNumber, data.streetName, data.zipCode, data.city, data.country);\r\n    }\r\n\r\n    format(): string {\r\n        return this.streetNumber + ', ' + this.streetName + ' - ' + this.zipCode + ' ' + this.city + ' - ' + this.country;\r\n    }\r\n}","import { AggregatedOrderInfo } from './AggregatedOrderInfo';\r\nimport { AggregatedOrderItem } from './AggregatedOrderItem';\r\nimport { Customer } from './Customer';\r\n\r\nexport class AggregatedOrder {\r\n    id: number;\r\n    name: string;\r\n    comment: string;\r\n    customer: Customer;\r\n    status: string;\r\n    createdDatetime: Date;\r\n    lastModifiedDatetime: Date;\r\n    closeDatetime: Date;\r\n    aggregatedOrderInfo: AggregatedOrderInfo;\r\n    aggregatedOrderItems: AggregatedOrderItem[] = [];\r\n\r\n    constructor() {}\r\n\r\n    static fromJson(data: any): AggregatedOrder {\r\n        let order = new AggregatedOrder();\r\n        order.id = data.id;\r\n        order.name = data.name;\r\n        order.customer = Customer.fromJson(data.customer);\r\n        order.status = data.status;\r\n        order.comment = data.comment;\r\n        order.createdDatetime = data.createdDatetime;\r\n        order.lastModifiedDatetime = data.lastModifiedDatetime;\r\n        order.closeDatetime = data.closeDatetime;\r\n        order.aggregatedOrderInfo = AggregatedOrderInfo.fromJson(data.aggregatedOrderInfo);\r\n        for (let item of data.aggregatedOrderItems) {\r\n            order.aggregatedOrderItems.push(AggregatedOrderItem.fromJson(item));\r\n        }\r\n        return order;\r\n    }\r\n}","export class AggregatedOrderInfo {\r\n    \r\n    orderItemSize: number;\r\n    productSize: number;\r\n    totalPrice: number;\r\n\r\n    constructor() {}\r\n\r\n    static fromJson(data: any) : AggregatedOrderInfo {\r\n        let order = new AggregatedOrderInfo();\r\n        order.orderItemSize = data.orderItemSize;\r\n        order.productSize = data.productSize;\r\n        order.totalPrice = data.totalPrice;\r\n        return order;\r\n    }\r\n}","import { Product } from './Product';\r\nimport { OrderItem } from './OrderItem';\r\n\r\nexport class AggregatedOrderItem {\r\n    quantity: number;\r\n    ttlPrice: number;\r\n    lastModifiedDatetime: Date;\r\n    product: Product;\r\n    orderItems: OrderItem[] = [];\r\n\r\n    constructor() {}\r\n\r\n    static fromJson(data: any): AggregatedOrderItem {\r\n        let orderItem = new AggregatedOrderItem();\r\n        orderItem.quantity = data.quantity;\r\n        orderItem.ttlPrice = data.ttlPrice;\r\n        orderItem.lastModifiedDatetime = data.lastModifiedDatetime;\r\n        orderItem.product = Product.fromJson(data.product);\r\n        for (let item of data.orderItems) {\r\n            orderItem.orderItems.push(OrderItem.fromJson(item));\r\n        }\r\n        return orderItem;\r\n    }\r\n}","import { Store } from './Store';\r\n\r\nexport class Customer {\r\n\r\n    id: number\r\n    store: Store = new Store()\r\n\r\n    constructor() {}\r\n\r\n    static fromJson(data: any) : Customer {\r\n        let customer = new Customer()\r\n        customer.id = data.id\r\n        customer.store = Store.fromJson(data.store)\r\n        return customer\r\n    }\r\n}","export class DocType {\r\n\r\n    type: string\r\n    supportedFormats: string[]\r\n\r\n    constructor() {}\r\n\r\n    static fromJson(data: any): DocType {\r\n        let notif = new DocType();\r\n        notif.type = data.type;\r\n        notif.supportedFormats = data.supportedFormats;\r\n        return notif;\r\n    }\r\n}","import { OrderItem } from './OrderItem'\r\nimport { Customer } from './Customer';\r\n\r\nexport class Order {\r\n    \r\n    id: number\r\n    name: string\r\n    comment: string\r\n    status: string\r\n    customer: Customer = new Customer()\r\n    createDatetime: Date\r\n    closeDatetime: Date\r\n    items: Map<number, OrderItem> = new Map()\r\n    nbProduct: number\r\n    totalItemQty: number\r\n    totalPrice: number\r\n\r\n    constructor() {\r\n    }\r\n\r\n    static fromJson(data: any) : Order {\r\n        let itemsQty = data.items.reduce((sum, item) => sum + item.quantity, 0);\r\n        let totalPrice = this.getTotalPrice(data.items)\r\n        let sr = new Order()\r\n        sr.id = data.id\r\n        sr.name = data.name\r\n        sr.customer = data.customer\r\n        sr.status = data.status,\r\n        sr.nbProduct = data.items.length\r\n        sr.createDatetime = data.createdDateTime\r\n        sr.closeDatetime = data.closeDateTime\r\n        sr.comment = data.comment\r\n        sr.totalItemQty = itemsQty\r\n        sr.totalPrice = totalPrice\r\n        return sr\r\n    }\r\n\r\n    private static getTotalPrice(items: any) {\r\n        let total = 0\r\n        for (let i = 0; i < items.length; i++) {\r\n            total += items[i].productItem.product.price * items[i].quantity;\r\n        }\r\n        return total\r\n    }\r\n}","import { ProductItem } from './ProductItem';\r\n\r\nenum Type {\r\n    GLASSES = \"GLASSES\",\r\n}\r\n\r\nexport class OrderItem {\r\n\r\n    id: number\r\n    productItem: ProductItem\r\n    type: Type = Type.GLASSES\r\n    createdDatetime: Date\r\n    lastModifiedDatetime: Date\r\n    \r\n    constructor() {}\r\n\r\n    static fromJson(data: any): OrderItem {\r\n        let orderItem = new OrderItem();\r\n        orderItem.id = data.id;\r\n        orderItem.productItem = ProductItem.fromJson(data.productItem);\r\n        orderItem.createdDatetime = data.createdDatetime;\r\n        orderItem.lastModifiedDatetime = data.lastModifiedDatetime;\r\n        return orderItem;\r\n    }\r\n}","export class Owner {\r\n    id: number\r\n    compagnyName: string\r\n    firstName: string\r\n    lastName: string\r\n    email: string\r\n\r\n    constructor() {\r\n    }\r\n\r\n    static fromJson(data: any) : Owner {\r\n        let owner = new Owner();\r\n        owner.id = data.id;\r\n        owner.compagnyName = data.compagnyName;\r\n        owner.firstName = data.firstName;\r\n        owner.lastName = data.lastName;\r\n        owner.email = data.email;\r\n        return owner;\r\n    }\r\n}","export class Product {\r\n    id: number\r\n    name: string\r\n    price: number\r\n\r\n    constructor(id: number, name: string, price: number) {\r\n        this.id = id\r\n        this.name = name\r\n        this.price = price\r\n    }\r\n\r\n    static fromJson(data: any): Product {\r\n        const productId = data.id;\r\n        const productName = data.name;\r\n        const productPrice = data.price;\r\n        return new Product(productId, productName, productPrice)\r\n    }\r\n}","import { Product } from './Product';\r\n\r\nexport class ProductItem {\r\n\r\n    id: number\r\n    product: Product\r\n    barCode: string\r\n    orderItemId : boolean\r\n    createdDatetime: Date\r\n    lastModifiedDatetime: Date\r\n\r\n    constructor() {}\r\n\r\n    static fromJson(data: any): ProductItem {\r\n        let productItem = new ProductItem();\r\n        productItem.id = data.id;\r\n        productItem.orderItemId = data.orderItemId;\r\n        productItem.product = Product.fromJson(data.product);\r\n        productItem.createdDatetime = data.createdDatetime;\r\n        productItem.lastModifiedDatetime = data.lastModifiedDatetime;\r\n        if (data.barCode != undefined) {\r\n            productItem.barCode = data.barCode.id;\r\n        }\r\n        return productItem;\r\n    }\r\n\r\n}\r\n","import { Product } from './Product';\r\n\r\nexport class ProductStockInfo {\r\n    product: Product\r\n    createdQuantity: number;\r\n    usedQuantity: number;\r\n\r\n    constructor() {}\r\n\r\n    static fromJson(data: any): ProductStockInfo {\r\n        let stockInfo = new ProductStockInfo();\r\n        stockInfo.product = Product.fromJson(data.product);\r\n        stockInfo.createdQuantity = data.quantityCreated;\r\n        stockInfo.usedQuantity = data.quantityUsed;\r\n        return stockInfo;\r\n    }\r\n\r\n    getFreeQuantity(): number {\r\n        return this.createdQuantity - this.usedQuantity;\r\n    }\r\n}","import { Owner } from './Owner';\r\nimport { Address } from './Address';\r\n\r\nexport class Store {\r\n\r\n    id: number\r\n    name: string\r\n    email: string\r\n    phone: string\r\n    address: Address\r\n    owner: Owner\r\n\r\n    constructor() {\r\n    }\r\n\r\n    static fromJson(data: any): Store {\r\n        let store = new Store();\r\n        store.id = data.id;\r\n        store.name = data.name;\r\n        store.email = data.email;\r\n        store.phone = data.phone;\r\n        store.address = Address.fromJson(data.address);\r\n        store.owner = Owner.fromJson(data.owner);\r\n        return store\r\n    }\r\n}","import { ProductItem } from './ProductItem';\r\n\r\nexport class UploadProductsFileResult {\r\n\r\n    id: string;\r\n    rowsInFile: number;\r\n    rowsProcessed: number;\r\n    productItems: ProductItem[] = [];\r\n\r\n    constructor() {}\r\n\r\n    public static fromJson(data: any) : UploadProductsFileResult {\r\n        let result = new UploadProductsFileResult();\r\n        result.id = data.id;\r\n        result.rowsInFile = data.rowsInFile;\r\n        result.rowsProcessed = data.rowsProcessed;\r\n        let products: ProductItem[] = [];\r\n        for (let item of data.productItems) {\r\n            products.push(ProductItem.fromJson(item));\r\n        }\r\n        result.productItems = products;\r\n        return result;\r\n    }\r\n}\r\n","export class AdminSetting {\r\n\r\n    emails: string[]\r\n    itemToShow: number\r\n    notifyOnCloseReport: boolean\r\n\r\n    constructor() {}\r\n}","import { Address } from '../../Address';\r\n\r\nexport class AddOrUpdateCustomerReq {\r\n\r\n    customerId: number\r\n    ownerId: number\r\n    ownerCompagnyName: string\r\n    ownerFirstName: number\r\n    ownerLastName: number\r\n    ownerEmail: string\r\n    storeName: string\r\n    storePhone: string\r\n    storeEmail: string\r\n    storeAddress: Address\r\n\r\n    constructor(ownerId: number, storeName: string) {\r\n        this.ownerId = ownerId;\r\n        this.storeName = storeName;\r\n    }\r\n}","export class NotificationRequest {\r\n\r\n    docType: string\r\n    emails: string[] = []\r\n\r\n    constructor(docType: string) {\r\n        this.docType = docType;\r\n    }\r\n}","import { NotificationRequest } from './NotificationRequest';\r\n\r\nexport class OrderNotificationRequest extends NotificationRequest {\r\n\r\n    orderId: number\r\n    dateDocument: number = new Date().getTime();\r\n\r\n    constructor(type: string, orderId: number) {\r\n        super(type);\r\n        this.orderId = orderId;\r\n    }\r\n}","export class AddOrderItemByBarCodeReq {\r\n\r\n    orderId: number\r\n    barCode: string\r\n\r\n    constructor(orderId: number, barCode: string) {\r\n        this.orderId = orderId;\r\n        this.barCode = barCode;\r\n    }\r\n}","export class AddOrderItemReq {\r\n\r\n    orderId: number;\r\n    requestedQty: number;\r\n    productId: number;\r\n\r\n    constructor(orderId: number, productId: number, requestedQty: number) {\r\n        this.orderId = orderId;\r\n        this.productId = productId;\r\n        this.requestedQty = requestedQty;\r\n    }\r\n}","export class DeleteOrderItemsReq {\r\n\r\n    orderId: number\r\n    orderItemsId: number[]\r\n\r\n    constructor(orderId: number, orderItemsId: number[]) {\r\n        this.orderId = orderId;\r\n        this.orderItemsId = orderItemsId;\r\n    }\r\n}","module.exports = \".table tr.active td {\\r\\n    background-color:#275e94 !important;\\r\\n    color: white;\\r\\n    font-weight: bold;\\r\\n    white-space: nowrap;\\r\\n  }\\r\\n\\r\\n.table table-striped tr td {\\r\\n  padding: 1.5%;\\r\\n}\\r\\n\\r\\n/* Scroll Bar Aggregated Order Item table */\\r\\n\\r\\n.my-custom-scrollbar {\\r\\n  position: relative;\\r\\n  max-height: 450px;\\r\\n  overflow: auto;\\r\\n}\\r\\n\\r\\n.table-wrapper-scroll-y {\\r\\n  display: block;\\r\\n}\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9vcmRlci1wYW5lbC9saXN0LW9yZGVyLWl0ZW0vbGlzdC1vcmRlci1pdGVtLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxtQ0FBbUM7SUFDbkMsWUFBWTtJQUNaLGlCQUFpQjtJQUNqQixtQkFBbUI7RUFDckI7O0FBRUY7RUFDRSxhQUFhO0FBQ2Y7O0FBRUEsMkNBQTJDOztBQUMzQztFQUNFLGtCQUFrQjtFQUNsQixpQkFBaUI7RUFDakIsY0FBYztBQUNoQjs7QUFFQTtFQUNFLGNBQWM7QUFDaEIiLCJmaWxlIjoiYXBwL29yZGVyLXBhbmVsL2xpc3Qtb3JkZXItaXRlbS9saXN0LW9yZGVyLWl0ZW0uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi50YWJsZSB0ci5hY3RpdmUgdGQge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjojMjc1ZTk0ICFpbXBvcnRhbnQ7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcbiAgfVxyXG5cclxuLnRhYmxlIHRhYmxlLXN0cmlwZWQgdHIgdGQge1xyXG4gIHBhZGRpbmc6IDEuNSU7XHJcbn1cclxuXHJcbi8qIFNjcm9sbCBCYXIgQWdncmVnYXRlZCBPcmRlciBJdGVtIHRhYmxlICovXHJcbi5teS1jdXN0b20tc2Nyb2xsYmFyIHtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgbWF4LWhlaWdodDogNDUwcHg7XHJcbiAgb3ZlcmZsb3c6IGF1dG87XHJcbn1cclxuXHJcbi50YWJsZS13cmFwcGVyLXNjcm9sbC15IHtcclxuICBkaXNwbGF5OiBibG9jaztcclxufVxyXG5cclxuIl19 */\"","module.exports = \"<div class=\\\"table-responsive table-wrapper-scroll-y my-custom-scrollbar\\\">\\r\\n  <table class=\\\"table table-striped table-hover\\\">\\r\\n    <thead>\\r\\n      <tr>\\r\\n        <th>#</th>\\r\\n        <th>Name</th>\\r\\n        <th>Price</th>\\r\\n        <th>Qty</th>\\r\\n        <th>Total Price</th>\\r\\n        <th>Last Modified Date</th>\\r\\n        <th></th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n      <tr *ngFor=\\\"let item of orderItems | filter : 'name' : searchString; let i = index\\\"\\r\\n      (click)=\\\"setSelectedRow(i); onClickShowSelectedOrderItems(item.orderItems)\\\"\\r\\n        [class.active]=\\\"i == selectedRow\\\">\\r\\n        <td>{{ i+1 }}</td>\\r\\n        <td>{{ item.product.name }}</td>\\r\\n        <td>{{ item.product.price }} €</td>\\r\\n        <td\\r\\n          contenteditable=\\\"order.status !== 'CLOSED'\\\"\\r\\n          (blur)=\\\"onChangeOrderItemQuantity(item, $event)\\\">\\r\\n          {{ item.quantity }}\\r\\n        </td>\\r\\n        <td>{{ item.ttlPrice }} €</td>\\r\\n        <td>{{ item.lastModifiedDatetime | date:'medium' }}</td>\\r\\n        <td>\\r\\n          <button *ngIf=\\\"order.status !== 'CLOSED'\\\"\\r\\n          (click)=\\\"onClickDeleteOrderItemButton(i, item.orderItems)\\\"\\r\\n          [disabled]=\\\"deleteOrderItemInProgressArray[i]\\\"\\r\\n          class=\\\"btn btn-danger btn-sm\\\">\\r\\n              <span *ngIf=\\\"deleteOrderItemInProgressArray[i]\\\" class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\" aria-hidden=\\\"true\\\"></span>\\r\\n            Delete</button>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n</div>\\r\\n<br>\\r\\n<selected-order-items-list\\r\\n  [selectedOrderItems]=\\\"selectedOrderItems\\\"\\r\\n  [order]=\\\"order\\\"\\r\\n  (onDeleteOrderItemEvent)=\\\"deleteSingleOrderItem($event)\\\"\\r\\n></selected-order-items-list>\\r\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { OrderItem } from '../../model/OrderItem'\r\nimport { OrderService } from 'src/app/service/order-service';\r\nimport { ModalBuilder } from 'src/app/common-components/modal-builder';\r\nimport { InfoModalComponent } from 'src/app/modal/info-modal/info-modal.component';\r\nimport { ProductService } from 'src/app/service/product-service';\r\nimport { Observable } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, map } from 'rxjs/operators';\r\nimport { ModifyOrderItemReq } from 'src/app/model/request/order/ModifyOrderItemReq';\r\nimport { AggregatedOrder } from 'src/app/model/AggregatedOrder';\r\nimport { AggregatedOrderItem } from 'src/app/model/AggregatedOrderItem';\r\nimport { DeleteOrderItemsModalComponent } from 'src/app/modal/delete-order-items-modal/delete-order-items-modal.component';\r\nimport { DeleteOrderItemsReq } from 'src/app/model/request/order/DeleteOrderItemsReq';\r\n\r\n@Component({\r\n  selector: 'list-order-item',\r\n  templateUrl: './list-order-item.component.html',\r\n  styleUrls: ['./list-order-item.component.css']\r\n})\r\nexport class ListOrderItemComponent implements OnInit {\r\n\r\n  @Input() orderItems: IterableIterator<AggregatedOrderItem>\r\n  @Input() order: AggregatedOrder\r\n\r\n  @Output() onCreateOrderItemEvent = new EventEmitter<OrderItem>()\r\n  @Output() onChangeOrderItemEvent = new EventEmitter<ModifyOrderItemReq>()\r\n  @Output() onDeleteOrderItemEvent = new EventEmitter<number[]>()\r\n  \r\n  inputId: number\r\n  inputBarCode: string\r\n  inputName: string\r\n  inputQuantity: number\r\n  inputPrice: number\r\n  selectedRow: number\r\n  areNewOrderItemFieldsSet = false\r\n  searchString: string\r\n  selectedOrderItems: Map<number, OrderItem> = new Map();\r\n  productNames: string[] = []\r\n  deleteOrderItemInProgressArray: boolean[] = [];\r\n  productIdMapByName: Map<string, number> = new Map()\r\n  \r\n  search = (text$: Observable<string>) =>\r\n    text$.pipe(\r\n      debounceTime(200),\r\n      distinctUntilChanged(),\r\n      map(term => term.length < 1 ? []\r\n        : this.productNames.filter(v => v.toLowerCase().indexOf(term.toLowerCase()) > -1).slice(0, 10))\r\n    )\r\n\r\n  constructor(private orderService: OrderService,\r\n              private productService: ProductService,\r\n              private modalBuilder: ModalBuilder) {}\r\n\r\n  ngOnInit() {\r\n    this.initDeleteOrderItemButtonStatus();\r\n  }\r\n\r\n  private initDeleteOrderItemButtonStatus() {\r\n    for (let i = 0; i < this.deleteOrderItemInProgressArray.length; i++) {\r\n      this.deleteOrderItemInProgressArray.push(false);\r\n    }\r\n  }\r\n\r\n  checkInputFieldSet() {\r\n    this.areNewOrderItemFieldsSet = this.inputName.trim().length > 0\r\n                                      && this.inputQuantity > 0\r\n                                      && this.inputPrice > 0\r\n  }\r\n\r\n  deleteSingleOrderItem(orderItem: OrderItem) {\r\n    const orderItems: OrderItem[] = [orderItem];\r\n    this.deleteOrderItem(orderItems);\r\n    this.selectedOrderItems.delete(orderItem.id);\r\n  }\r\n\r\n  deleteOrderItem(orderItems: OrderItem[]) {\r\n    const ids = orderItems.map(item => item.id);\r\n    const req = new DeleteOrderItemsReq(this.order.id, ids);\r\n    this.orderService.deleteOrderItems(req).subscribe(\r\n      data => {\r\n          this.onDeleteOrderItemEvent.emit(ids);\r\n          this.deleteFromSelectedOrderItem(ids);\r\n      },\r\n      error => {\r\n        const modalRef = this.modalBuilder.open(InfoModalComponent)\r\n        modalRef.componentInstance.title = \"Error : Failed to delete the order items.\";\r\n        modalRef.componentInstance.message = error.error\r\n      }\r\n    )\r\n  }\r\n\r\n  private deleteFromSelectedOrderItem(ids: number[]) {\r\n    for(let id of ids) {\r\n      this.selectedOrderItems.delete(id);\r\n    }\r\n  }\r\n\r\n  onClickDeleteOrderItemButton(rowTableIndex: number, orderItems: OrderItem[]) {\r\n    this.setDeleteOrderItemButtonStatus(rowTableIndex, true);\r\n    this.displayDeletionConfirmationModal(rowTableIndex, orderItems);\r\n  }\r\n\r\n  displayDeletionConfirmationModal(rowTableIndex:number, orderItems: OrderItem[]) {\r\n    const modalRef = this.modalBuilder.openCenteredLargeModal(DeleteOrderItemsModalComponent)\r\n    modalRef.componentInstance.title = \"Are you sure you want to delete the following order items ?\"\r\n    modalRef.componentInstance.orderItems = orderItems;\r\n    modalRef.result.then((response) => {\r\n      if (response) {\r\n        this.deleteOrderItem(orderItems);\r\n      }\r\n      this.setDeleteOrderItemButtonStatus(rowTableIndex, false);\r\n    })\r\n  }\r\n\r\n  onChangeOrderItemQuantity(orderItem: OrderItem, event: any) {\r\n    /*let newQuantity = event.target.textContent\r\n    if (orderItem.quantity != newQuantity) {\r\n      let req = new ModifyOrderItemReq(orderItem.id, newQuantity);\r\n      // Must send Http request.\r\n      this.onChangeOrderItemEvent.emit(req)\r\n    } */\r\n  }\r\n\r\n  setSelectedRow(index: number) {\r\n    this.selectedRow = index\r\n  }\r\n\r\n  onClickShowSelectedOrderItems(selectedOrderItems: OrderItem[]) {\r\n    let tmp = new Map<number, OrderItem>();\r\n    for (let orderItem of selectedOrderItems) {\r\n      tmp.set(orderItem.id, orderItem);\r\n    }\r\n    this.selectedOrderItems = tmp;\r\n  }\r\n\r\n  setDeleteOrderItemButtonStatus(index: number, isInProgress: boolean) {\r\n      this.deleteOrderItemInProgressArray[index] = isInProgress;\r\n  }\r\n}\r\n","module.exports = \"/* Scroll Bar Aggregated Order Item table */\\r\\n.my-custom-scrollbar {\\r\\n    position: relative;\\r\\n    max-height: 200px;\\r\\n    overflow: auto;\\r\\n  }\\r\\n.table-wrapper-scroll-y {\\r\\n    display: block;\\r\\n  }\\r\\n  \\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9vcmRlci1wYW5lbC9zZWxlY3RlZC1vcmRlci1pdGVtcy1saXN0L3NlbGVjdGVkLW9yZGVyLWl0ZW1zLWxpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSwyQ0FBMkM7QUFDM0M7SUFDSSxrQkFBa0I7SUFDbEIsaUJBQWlCO0lBQ2pCLGNBQWM7RUFDaEI7QUFFQTtJQUNFLGNBQWM7RUFDaEIiLCJmaWxlIjoiYXBwL29yZGVyLXBhbmVsL3NlbGVjdGVkLW9yZGVyLWl0ZW1zLWxpc3Qvc2VsZWN0ZWQtb3JkZXItaXRlbXMtbGlzdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyogU2Nyb2xsIEJhciBBZ2dyZWdhdGVkIE9yZGVyIEl0ZW0gdGFibGUgKi9cclxuLm15LWN1c3RvbS1zY3JvbGxiYXIge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgbWF4LWhlaWdodDogMjAwcHg7XHJcbiAgICBvdmVyZmxvdzogYXV0bztcclxuICB9XHJcbiAgXHJcbiAgLnRhYmxlLXdyYXBwZXItc2Nyb2xsLXkge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgfVxyXG4gICJdfQ== */\"","module.exports = \"<div class=\\\"table-responsive table-wrapper-scroll-y my-custom-scrollbar\\\">\\r\\n  <table class=\\\"table table-striped table-hover table-sm\\\">\\r\\n    <thead>\\r\\n      <tr>\\r\\n        <th>#</th>\\r\\n        <th>Id</th>\\r\\n        <th>BarCode</th>\\r\\n        <th>Created Date</th>\\r\\n        <th>Last Modified Date</th>\\r\\n        <th></th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n      <tr *ngFor=\\\"let item of selectedOrderItems.values(); let i = index\\\">\\r\\n        <td>{{ i+1 }}</td>\\r\\n        <td>{{ item.productItem.id }}</td>\\r\\n        <td>{{ item.productItem.barCode }}</td>\\r\\n        <td>{{ item.createdDatetime }}</td>\\r\\n        <td>{{ item.lastModifiedDatetime }}</td>\\r\\n        <td>\\r\\n          <button\\r\\n          (click)=\\\"onClickDeleteOrderItemButton(i, item)\\\"\\r\\n          [disabled]=\\\"deleteOrderItemInProgressArray[i]\\\"\\r\\n          class=\\\"btn btn-danger btn-sm\\\">\\r\\n          <span *ngIf=\\\"deleteOrderItemInProgressArray[i]\\\" class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\" aria-hidden=\\\"true\\\"></span>\\r\\n            Delete</button>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n</div>\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { OrderItem } from 'src/app/model/OrderItem';\r\nimport { DeleteOrderItemsModalComponent } from 'src/app/modal/delete-order-items-modal/delete-order-items-modal.component';\r\nimport { ModalBuilder } from 'src/app/common-components/modal-builder';\r\nimport { AggregatedOrder } from 'src/app/model/AggregatedOrder';\r\nimport { DeleteOrderItemsReq } from 'src/app/model/request/order/DeleteOrderItemsReq';\r\nimport { OrderService } from 'src/app/service/order-service';\r\nimport { InfoModalComponent } from 'src/app/modal/info-modal/info-modal.component';\r\n\r\n@Component({\r\n  selector: 'selected-order-items-list',\r\n  templateUrl: './selected-order-items-list.component.html',\r\n  styleUrls: ['./selected-order-items-list.component.css']\r\n})\r\nexport class SelectedOrderItemsListComponent implements OnInit {\r\n\r\n  @Input() selectedOrderItems: Map<number, OrderItem> = new Map();\r\n  @Input() order: AggregatedOrder;\r\n\r\n  @Output() onDeleteOrderItemEvent = new EventEmitter<OrderItem>();\r\n  deleteOrderItemInProgressArray: boolean[] = [];\r\n\r\n  constructor(private modalBuilder: ModalBuilder,\r\n              private orderService: OrderService) { }\r\n\r\n  ngOnInit() {\r\n    this.initDeleteOrderItemButtonStatus();\r\n  }\r\n\r\n  private initDeleteOrderItemButtonStatus() {\r\n    for (let i = 0; i < this.deleteOrderItemInProgressArray.length; i++) {\r\n      this.deleteOrderItemInProgressArray.push(false);\r\n    }\r\n  }\r\n\r\n  onClickDeleteOrderItemButton(rowTableIndex: number, orderItem: OrderItem) {\r\n    this.setDeleteOrderItemButtonStatus(rowTableIndex, true);\r\n    this.displayDeletionConfirmationModal(rowTableIndex, orderItem);\r\n  }\r\n\r\n  displayDeletionConfirmationModal(rowTableIndex:number, orderItem: OrderItem) {\r\n    const modalRef = this.modalBuilder.openCenteredLargeModal(DeleteOrderItemsModalComponent)\r\n    modalRef.componentInstance.title = \"Are you sure you want to delete the following order item ?\";\r\n    let orderItemToDelete = [];\r\n    orderItemToDelete.push(orderItem);\r\n    modalRef.componentInstance.orderItems = orderItemToDelete;\r\n    modalRef.result.then((response) => {\r\n      if (response) {\r\n        this.onDeleteOrderItemEvent.emit(orderItem);\r\n        //this.deleteOrderItem(orderItem);\r\n      }\r\n      this.setDeleteOrderItemButtonStatus(rowTableIndex, false);\r\n    })\r\n  }\r\n\r\n  deleteOrderItem(orderItem: OrderItem) {\r\n    const id: number[] = [orderItem.id];\r\n    const req = new DeleteOrderItemsReq(this.order.id, id);\r\n    this.orderService.deleteOrderItems(req).subscribe(\r\n      data => {\r\n          this.selectedOrderItems.delete(orderItem.id);\r\n      },\r\n      error => {\r\n        const modalRef = this.modalBuilder.open(InfoModalComponent)\r\n        modalRef.componentInstance.title = \"Error : Failed to delete the order items.\";\r\n        modalRef.componentInstance.message = error.error\r\n      }\r\n    )\r\n  }\r\n\r\n  setDeleteOrderItemButtonStatus(index: number, isInProgress: boolean) {\r\n    this.deleteOrderItemInProgressArray[index] = isInProgress;\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvb3JkZXItcGFuZWwvc2hvdy1vcmRlci1oZWFkZXIvc2hvdy1vcmRlci1oZWFkZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container-fluid\\\" style=\\\"border-bottom: 1px solid black\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <h5>{{ order.name }}</h5>\\r\\n    </div>\\r\\n    <div class=\\\"col\\\">\\r\\n      <p>Comment : {{ order.comment }}</p>\\r\\n    </div>\\r\\n    <div class=\\\"col\\\">\\r\\n      <div style=\\\"overflow: hidden;\\\">\\r\\n        <p style=\\\"float: left\\\">Customer : &nbsp;</p>\\r\\n        <p style=\\\"float: left; font-weight: bold\\\"> {{ order.customer.store.name }}</p>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col\\\">\\r\\n      <div style=\\\"overflow: hidden;\\\">\\r\\n        <p style=\\\"float: left;\\\">Status :&nbsp;</p>\\r\\n        <p style=\\\"float: left; font-weight: bold\\\"> {{ order.status }}</p>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <div class=\\\"row justify-content-between\\\">\\r\\n          <div class=\\\"col-4\\\">\\r\\n              <button\\r\\n                class=\\\"btn btn-outline-primary\\\"\\r\\n                (click)=\\\"onClickAddOrderItem()\\\"\\r\\n                [disabled]=\\\"order.status === 'CLOSED'\\\"\\r\\n              >Add Order Item</button>\\r\\n          </div>\\r\\n          <div class=\\\"col-4\\\">\\r\\n              <button\\r\\n                style=\\\"float: right\\\"\\r\\n                class=\\\"btn btn-outline-info\\\"\\r\\n                (click)=\\\"onClickCloseOrder()\\\"\\r\\n                [disabled]=\\\"order.status === 'CLOSED'\\\"\\r\\n              >Close the order</button>\\r\\n          </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>    \\r\\n  <br>\\r\\n</div>\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { ModalBuilder } from 'src/app/common-components/modal-builder';\r\nimport { ConfirmModalComponent } from 'src/app/modal/confirm-modal/confirm-modal-component';\r\nimport { OrderService } from 'src/app/service/order-service';\r\nimport { AggregatedOrder } from 'src/app/model/AggregatedOrder';\r\nimport { AddOrderItemModalComponent } from 'src/app/modal/add-order-item-modal/add-order-item-modal.component';\r\n\r\n@Component({\r\n  selector: 'show-order-header',\r\n  templateUrl: './show-order-header.component.html',\r\n  styleUrls: ['./show-order-header.component.css']\r\n})\r\nexport class OrderHeaderComponent implements OnInit {\r\n\r\n  @Input() order: AggregatedOrder\r\n\r\n  @Output() onCloseOrderEvent = new EventEmitter()\r\n  @Output() onAddOrderItemEvent = new EventEmitter()\r\n\r\n  constructor(private modalBuilder: ModalBuilder,\r\n              private orderService: OrderService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onClickAddOrderItem() {\r\n    let modalRef = this.modalBuilder.openCenteredLargeModal(AddOrderItemModalComponent);\r\n    modalRef.componentInstance.orderId = this.order.id;\r\n    modalRef.componentInstance.addOrderItemEvent.subscribe(($e) => {\r\n      this.onAddOrderItemEvent.emit();\r\n    })\r\n  }\r\n\r\n  onClickCloseOrder() {\r\n    let modalRef = this.modalBuilder.open(ConfirmModalComponent);\r\n    modalRef.componentInstance.title = \"Close Order Confirmation\";\r\n    modalRef.componentInstance.message = \"Are you sure you want to close the order \"\r\n          + this.order.name + \" for the store \" + this.order.customer.store.name + \" ?\";\r\n\r\n    modalRef.result.then((response) => {\r\n      if (response) {\r\n        this.orderService.closeOrder(this.order.id).subscribe(\r\n          data => {\r\n            this.order.closeDatetime = data.closeDateTime;\r\n            this.order.status = data.status;\r\n          }\r\n        )\r\n      }\r\n    })\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvb3JkZXItcGFuZWwvc2hvdy1vcmRlci9zaG93LW9yZGVyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div>\\r\\n  <show-order-header\\r\\n    [order]=\\\"order\\\"\\r\\n    (onCloseOrderEvent)=\\\"onCloseOrder()\\\"\\r\\n    (onAddOrderItemEvent)=\\\"onOrderItemAdded()\\\"\\r\\n  ></show-order-header>\\r\\n  <list-order-item *ngIf=\\\"order\\\"\\r\\n    [order]=\\\"order\\\"\\r\\n    [orderItems]=\\\"order.aggregatedOrderItems.values()\\\"\\r\\n    (onCreateOrderItemEvent)=\\\"onNewOrderItem($event)\\\"\\r\\n    (onChangeOrderItemEvent)=\\\"onChangeOrderItem($event)\\\"\\r\\n    (onDeleteOrderItemEvent)=\\\"onDeleteOrderItem($event)\\\"\\r\\n  ></list-order-item>\\r\\n  <div class=\\\"container=fluid\\\">\\r\\n    <button class=\\\"btn btn-primary\\\"\\r\\n        (click)=\\\"onClickBack()\\\"\\r\\n        style=\\\"float: right\\\"\\r\\n    >Back</button>\\r\\n</div>\\r\\n</div>\"","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\nimport { OrderService } from '../../service/order-service';\r\nimport { OrderItem } from '../../model/OrderItem'\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AggregatedOrder } from 'src/app/model/AggregatedOrder';\r\n\r\n@Component({\r\n  \r\n  selector: 'show-order',\r\n  templateUrl: './show-order.component.html',\r\n  styleUrls: ['./show-order.component.css'],\r\n  changeDetection: ChangeDetectionStrategy.Default\r\n})\r\nexport class ShowOrderComponent implements OnInit {\r\n\r\n  reportId: number = 1;\r\n  order: AggregatedOrder;\r\n\r\n  constructor(private orderService: OrderService,\r\n              private route: ActivatedRoute,\r\n              private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.order = new AggregatedOrder();\r\n    this.order.id = parseInt(this.route.snapshot.paramMap.get('id'));\r\n    this.refreshOrder();\r\n  }\r\n\r\n  onOrderItemAdded(orderItem: OrderItem) {\r\n    this.refreshOrder();\r\n  }\r\n\r\n  onChangeOrderItem(orderItem: OrderItem) {\r\n    //this.order.items.set(orderItem.id, orderItem)\r\n  }\r\n\r\n  onDeleteOrderItem(ids: number[]) {\r\n    this.refreshOrder();\r\n  }\r\n\r\n  onClickBack() {\r\n    this.router.navigate([''])\r\n  }\r\n\r\n  private refreshOrder() {\r\n    this.orderService.getOrder(this.order.id).subscribe(data => {\r\n      this.order = AggregatedOrder.fromJson(data);\r\n    })  \r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvb3JkZXJzLW1hbmFnZXItcGFuZWwvbGlzdC1vcmRlcnMvbGlzdC1vcmRlcnMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"table-responsive\\\">\\r\\n    <table class=\\\"table table-striped\\\">\\r\\n        <thead>\\r\\n            <tr>\\r\\n                <th>ID</th>\\r\\n                <th>Name</th>\\r\\n                <th>Store</th>\\r\\n                <th>Status</th>\\r\\n                <th>Total Product</th>\\r\\n                <th>Total Qty</th>\\r\\n                <th>Total Price</th>\\r\\n                <th>Creation Date</th>\\r\\n                <th>Last Modified Date</th>\\r\\n                <th>Close Date</th>\\r\\n                <th></th>\\r\\n                <th></th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n            <tr *ngFor=\\\"let order of ordersArray\\\">\\r\\n                <td>{{ order.id }}</td>\\r\\n                <td>{{ order.name }}</td>\\r\\n                <td>{{ order.customer.store.name }}</td>\\r\\n                <td>{{ order.status }}</td>\\r\\n                <td>{{ order.aggregatedOrderInfo.productSize }}</td>\\r\\n                <td>{{ order.aggregatedOrderInfo.orderItemSize }}</td>\\r\\n                <td>{{ order.aggregatedOrderInfo.totalPrice }} €</td>\\r\\n                <td>{{ order.createdDatetime  | date:'medium' }}</td>\\r\\n                <td>{{ order.lastModifiedDatetime  | date:'medium' }}</td>\\r\\n                <td>{{ order.closeDatetime  | date:'medium' }}</td>\\r\\n                <td><button\\r\\n                    class=\\\"btn btn-success\\\"\\r\\n                    [routerLink]=\\\"['/order', order.id]\\\"\\r\\n                    >See</button>\\r\\n                </td>\\r\\n                <td><button\\r\\n                    *ngIf=\\\"order.status !== 'CLOSED'\\\"\\r\\n                    class=\\\"btn btn-info\\\"\\r\\n                    (click)=\\\"onClickCloseOrder(order)\\\"\\r\\n                    >Close Order</button>\\r\\n                    <button\\r\\n                        *ngIf=\\\"order.status === 'CLOSED'\\\"\\r\\n                        class=\\\"btn btn-primary\\\"\\r\\n                        (click)=\\\"onClickNotify(order)\\\"\\r\\n                    >Notify</button>\\r\\n                </td>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n</div>\\r\\n<div class=\\\"row justify-content-between\\\">\\r\\n    <div class=\\\"col-4\\\">\\r\\n        <ngb-pagination [collectionSize]=\\\"collectionSize\\\" [(page)]=\\\"page\\\" [pageSize]=\\\"pageSize\\\"></ngb-pagination>\\r\\n    </div>\\r\\n    <div class=\\\"col-2\\\">\\r\\n        <select class=\\\"custom-select\\\" [(ngModel)]=\\\"pageSize\\\">\\r\\n            <option [ngValue]=\\\"5\\\">5 items per page</option>\\r\\n            <option [ngValue]=\\\"10\\\">10 items per page</option>\\r\\n            <option [ngValue]=\\\"20\\\">20 items per page</option>\\r\\n        </select>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { OrderService } from 'src/app/service/order-service';\r\nimport { NotificationService } from 'src/app/service/notification-service';\r\nimport { ModalBuilder } from 'src/app/common-components/modal-builder';\r\nimport { ConfirmModalComponent } from 'src/app/modal/confirm-modal/confirm-modal-component';\r\nimport { AggregatedOrder } from 'src/app/model/AggregatedOrder';\r\nimport { OrderNotificationModalComponent } from 'src/app/modal/order-notification-modal/order-notification-modal.component';\r\n\r\n@Component({\r\n  selector: 'list-orders',\r\n  templateUrl: './list-orders.component.html',\r\n  styleUrls: ['./list-orders.component.css']\r\n})\r\nexport class ListOrdersComponent implements OnInit {\r\n\r\n  @Input() orders: AggregatedOrder[]\r\n\r\n  page: number = 1\r\n  pageSize: number = 10\r\n  collectionSize: number\r\n\r\n  constructor(private orderService: OrderService,\r\n              private notificationService: NotificationService,\r\n              private modalBuilder: ModalBuilder) {}\r\n\r\n  ngOnInit() {\r\n    this.collectionSize = this.orders.length\r\n  }\r\n\r\n  onClickCloseOrder(orderToClose: AggregatedOrder) {\r\n    let modalRef = this.modalBuilder.open(ConfirmModalComponent);\r\n    modalRef.componentInstance.title = \"Close Order Confirmation\";\r\n    modalRef.componentInstance.message = \"Are you sure you want to close the order \"\r\n          + orderToClose.name + \" for the store \" + orderToClose.customer.store.name + ' ?';\r\n\r\n    modalRef.result.then((response) => {\r\n      if (response) {\r\n        this.orderService.closeOrder(orderToClose.id).subscribe(\r\n          data => {\r\n            orderToClose.closeDatetime = data.closeDateTime\r\n            orderToClose.status = data.status\r\n          }\r\n        )\r\n      }\r\n    });\r\n  }\r\n\r\n  onClickNotify(order: AggregatedOrder) {\r\n    let modalRef = this.modalBuilder.open(OrderNotificationModalComponent);\r\n    modalRef.componentInstance.orderId = order.id;\r\n  }\r\n\r\n  get ordersArray(): AggregatedOrder[] {\r\n    return this.orders\r\n              .slice((this.page - 1) * this.pageSize, (this.page -1) * this.pageSize + this.pageSize)\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvb3JkZXJzLW1hbmFnZXItcGFuZWwvb3JkZXJzLW1hbmFnZXIvb3JkZXJzLW1hbmFnZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row justify-content-between\\\">\\r\\n        <div class=\\\"col-4\\\">\\r\\n            <button class=\\\"btn btn-primary\\\"\\r\\n                (click)=\\\"openCreateReportModal()\\\"\\r\\n            >New Order</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-6\\\">\\r\\n            <div class=\\\"row justify-content-end\\\">\\r\\n                <div class=\\\"col-6\\\">\\r\\n                    <input #searchString type=\\\"search\\\"\\r\\n                        class=\\\"form-control\\\"\\r\\n                        (keyup.enter)=\\\"onClickSearch(searchString.value)\\\"\\r\\n                        placeholder=\\\"Type to search order...\\\">\\r\\n                </div>\\r\\n                <div class=\\\"col-4\\\">\\r\\n                    <button\\r\\n                        [disabled]=\\\"searchButtonDisabled\\\"\\r\\n                        class=\\\"btn btn-info search_button\\\"\\r\\n                        (click)=\\\"onClickSearch(searchString.value)\\\"\\r\\n                    >Search</button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <br>\\r\\n    <h3 style=\\\"color: dimgray\\\" *ngIf=\\\"orders.length == 0\\\">{{ noOrdersFoundMessage }}</h3>\\r\\n    <div *ngIf=\\\"orders.length > 0\\\">\\r\\n        <list-orders\\r\\n            [orders]=\\\"orders\\\"\\r\\n        ></list-orders>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { OrderService } from 'src/app/service/order-service';\r\nimport { ModalBuilder } from 'src/app/common-components/modal-builder';\r\nimport { CreateOrderModalComponent } from 'src/app/modal/create-order-modal/create-order-modal.component';\r\nimport { AggregatedOrder } from 'src/app/model/AggregatedOrder';\r\n\r\n@Component({\r\n  selector: 'orders-manager',\r\n  templateUrl: './orders-manager.component.html',\r\n  styleUrls: ['./orders-manager.component.css']\r\n})\r\nexport class OrdersManagerComponent implements OnInit {\r\n\r\n  orders: AggregatedOrder[] = []\r\n  noOrdersFoundMessage: string\r\n  searchButtonDisabled: boolean = false\r\n  isOrderListFiltered: boolean = false\r\n\r\n  constructor(private orderService: OrderService,\r\n              private modalBuilder: ModalBuilder) { }\r\n\r\n  ngOnInit() {\r\n    this.getAllOrders()\r\n  }\r\n\r\n  onClickSearch(value: string) {\r\n    if (value.length > 0) {\r\n      this.searchButtonDisabled = true\r\n      this.isOrderListFiltered = true\r\n      this.searchOrderByIdOrName(value)\r\n    } else if (value.length == 0 && this.isOrderListFiltered) {\r\n      this.searchButtonDisabled = true\r\n      this.getAllOrders()\r\n      this.isOrderListFiltered = false\r\n    }\r\n  }\r\n\r\n  private searchOrderByIdOrName(name: string) {\r\n    this.orderService.searchOrderByIdOrName(name).subscribe(\r\n      data => {\r\n        this.orders = this.parseOrderIntoArray(data)\r\n        this.searchButtonDisabled = false\r\n      }, error => {\r\n        console.log(\"error in search : \" + error);\r\n        this.orders = [];\r\n        this.searchButtonDisabled = false\r\n      }\r\n    )\r\n  }\r\n\r\n  private getAllOrders() {\r\n    this.orderService.getAllOrders().subscribe(\r\n      data => {\r\n          this.orders = this.parseOrderIntoArray(data)\r\n          if (this.orders.length == 0) {\r\n            this.noOrdersFoundMessage = \"No order found\"\r\n          }\r\n      }\r\n    ) \r\n  }\r\n\r\n  private parseOrderIntoArray(data: any) : AggregatedOrder[] {\r\n    let orders: AggregatedOrder[] = []\r\n    for (let i = 0; i < data.length ; i++) {\r\n      let item = AggregatedOrder.fromJson(data[i]);\r\n      orders.push(item)\r\n    }\r\n    return orders\r\n  }\r\n\r\n  openCreateReportModal() {\r\n    const modalRef = this.modalBuilder.open(CreateOrderModalComponent)\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvcHJvZHVjdC9wcm9kdWN0cy1wYW5lbC9wcm9kdWN0cy1wYW5lbC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <upload-product-file-modal></upload-product-file-modal>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'products-panel',\r\n  templateUrl: './products-panel.component.html',\r\n  styleUrls: ['./products-panel.component.css']\r\n})\r\nexport class ProductsPanelComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpService } from './http-service';\r\nimport { AdminSetting } from '../model/admin/AdminSetting'\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n@Injectable()\r\nexport class AdminSettingService {\r\n\r\n    constructor(private httpApi: HttpService) {}\r\n\r\n    getAdminSetting(adminSetting: AdminSetting) : Observable<any> {\r\n        console.log(\"Get admin setting.\");\r\n        return this.httpApi.get(\"/v1/admin/setting/get\")\r\n    }\r\n\r\n    updateAdminSetting(adminSetting: AdminSetting): Observable<any> {\r\n        console.log(\"Update admin setting \" + adminSetting);\r\n        return this.httpApi.post(\"v1/admin/setting/update\", adminSetting)\r\n    }\r\n}\r\n","\r\nimport { Observable } from 'rxjs';\r\nimport { HttpService } from './http-service';\r\nimport { Injectable } from '@angular/core';\r\nimport { AddOrUpdateCustomerReq } from '../model/request/customer/AddOrUpdateCustomerReq';\r\n\r\n@Injectable()\r\nexport class CustomerService {\r\n\r\n    private url: string = \"v1/customer\";\r\n\r\n    constructor(private http: HttpService) {\r\n    }\r\n\r\n    addCustomer(req: AddOrUpdateCustomerReq): Observable<any> {\r\n        return this.http.post(this.url + \"/add\", req);\r\n    }\r\n\r\n    updateCustomer(req: AddOrUpdateCustomerReq): Observable<any> {\r\n        return this.http.post(this.url + \"/update\", req);\r\n    }\r\n\r\n    getCustomer(id: number): Observable<any> {\r\n        return this.http.get(this.url + \"/get/\" + id);\r\n    }\r\n    \r\n    getStoresOfOwner(ownerId: number): Observable<any> {\r\n        return this.http.get(this.url + \"/storesOfOwner/\" + ownerId);\r\n    }\r\n    \r\n    getAllCustomers(): Observable<any> {\r\n        return this.http.get(this.url + \"/all\");\r\n    }\r\n\r\n    getAllCustomersNoLimit(): Observable<any> {\r\n        return this.http.get(this.url + \"/allNoLimit\");\r\n    }\r\n\r\n    searchCustomerByIdOrNames(input: string): Observable<any> {\r\n        return this.http.get(this.url + \"/searchByIdOrName/\" + input);\r\n    }\r\n\r\n    getAllOwnersIdsAndNames(): Observable<any>{\r\n        return this.http.get(this.url + \"/allOwnerIdsAndNames\");\r\n    }\r\n}","import { HttpClient, HttpHeaders } from '@angular/common/http'\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class HttpService {\r\n\r\n    constructor(private http: HttpClient){}\r\n\r\n    get(url: string) : Observable<any> {\r\n        return this.http.get(url)\r\n    }\r\n\r\n    post(url: string, body: any, options?) : Observable<any> {\r\n        return this.http.post(url, body, options != null ? options : this.getHeaders());\r\n    }\r\n\r\n    delete(url: string) : Observable<any> {\r\n        return this.http.delete(url, this.getHeaders());\r\n    }\r\n\r\n    put(url: string): Observable<any> {\r\n      return this.http.put(url, this.getHeaders());\r\n    }\r\n\r\n    private getHeaders() {\r\n        let httpHeaders = new HttpHeaders()\r\n            .set('Content-Type', 'application/json')\r\n        let options = {\r\n            headers: httpHeaders\r\n        }; \r\n        return options\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpService } from './http-service';\r\nimport { Observable } from 'rxjs';\r\nimport { OrderNotificationRequest } from '../model/request/notification/OrderNotificationRequest';\r\n\r\n@Injectable()\r\nexport class NotificationService {\r\n\r\n    private url: string = \"v1/notification\";\r\n\r\n    constructor(private httpApi: HttpService) {}\r\n\r\n    notify(req: OrderNotificationRequest): Observable<any> {\r\n        let options = {\r\n            responseType: 'blob',\r\n            observe: 'response'\r\n        }; \r\n        return this.httpApi.post(this.url + \"/notify\", req, options);\r\n    }\r\n\r\n    getDocumentTypes(): Observable<any> {\r\n        return this.httpApi.get(this.url + \"/document-types\");\r\n    }\r\n} ","\r\nimport { Injectable } from '@angular/core'\r\nimport { HttpService } from './http-service'\r\nimport { Order } from \"../model/Order\";\r\nimport { Observable } from 'rxjs';\r\nimport { AddOrderItemReq } from '../model/request/order/AddOrderItemReq';\r\nimport { OrderItem } from '../model/OrderItem';\r\nimport { DeleteOrderItemsReq } from '../model/request/order/DeleteOrderItemsReq';\r\nimport { AddOrderItemByBarCodeReq } from '../model/request/order/AddOrderItemByBarCodeReq';\r\n\r\n@Injectable()\r\nexport class OrderService {\r\n\r\n    constructor(private httpApi: HttpService){}\r\n\r\n    addOrder(order: Order): Observable<any> {\r\n        const request = {\r\n            \"name\": order.name,\r\n            \"customerId\": order.customer.id,\r\n            \"comment\": order.comment\r\n        }\r\n        return this.httpApi.post(\"/v1/order/add\", request)\r\n    }\r\n\r\n    getOrder(id: number): Observable<any> {\r\n        console.log(\"Get order by id \" + id);\r\n        return this.httpApi.get(\"/v1/order/get/\" + id);\r\n    }\r\n\r\n    searchOrderByIdOrName(input: string): Observable<any> {\r\n        console.log(\"Search orders by input : \" + input);\r\n        return this.httpApi.get(\"/v1/order/searchByIdOrName/\" + input);\r\n    }\r\n\r\n    getOrdersOfCustomer(id: number): Observable<any> {\r\n        console.log(\"Get orders of customer \" + id);\r\n        return this.httpApi.get(\"/v1/order/ordersOfCustomer/\" + id);\r\n    }\r\n\r\n    addOrderItem(req: AddOrderItemReq) : Observable<any> {\r\n        console.log(\"Add order item[ \" + \", \" + req.requestedQty + \" to order \" + req.orderId);\r\n        return this.httpApi.post(\"/v1/order/addOrderItemByInfo\", req);\r\n    }\r\n\r\n    addOrderItemByBarCode(req: AddOrderItemByBarCodeReq) : Observable<any> {\r\n        console.log(\"Add order item by barCode to order \" + req.orderId + \" : \" + req.barCode);\r\n        return this.httpApi.post(\"/v1/order/addSingleOrderItemsByBarCode\", req);\r\n    }\r\n\r\n    updateStockItem(order: Order, itemToUpdate: OrderItem): Observable<any> {\r\n        console.log(\"updateProductItem order \" + order.id + \" | \" + itemToUpdate)\r\n        //return this.httpApi.post(\"/v1/order/updateProductItem\", this.toUpdateRequest(order, itemToUpdate))\r\n        return null;\r\n    }\r\n\r\n    deleteOrderItems(req: DeleteOrderItemsReq): Observable<any> {\r\n        console.log(\"Delete OrderItems from order : \" + req.orderId + \" : \" + req.orderItemsId)\r\n        return this.httpApi.post(\"/v1/order/deleteOrderItems\", req);\r\n    }\r\n\r\n    closeOrder(orderId: number): Observable<any> {\r\n        console.log(\"Close order : \" + orderId)\r\n        let request = { \"id\" : orderId }\r\n        return this.httpApi.post(\"/v1/order/close\", request);\r\n    }\r\n\r\n    getAllOrders(): Observable<any> {\r\n        console.log(\"Get all reports\")\r\n        return this.httpApi.get(\"/v1/order/all\")\r\n    } \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpService } from './http-service';\r\nimport { Observable } from 'rxjs';\r\nimport { Product } from '../model/Product';\r\n\r\n@Injectable()\r\nexport class ProductService {\r\n\r\n    constructor(private http: HttpService) {\r\n    }\r\n\r\n    get(id: number): Observable<any> {\r\n        return this.http.get(\"/v1/productItem/get/\" + id)\r\n    }\r\n\r\n    getAllProductNames(): Observable<any> {\r\n        return this.http.get(\"/v1/stock/getAllExistingProductNames\")\r\n    }\r\n\r\n    getProductStockInfo(productId: number): Observable<any> {\r\n        return this.http.get(\"/v1/stock/productStockInfo/\" + productId);\r\n    }\r\n\r\n    getProductItemByBarCode(barCode: string): Observable<Product> {\r\n        return this.http.get(\"/v1/stock/productItemByBarCode/\" + barCode);\r\n    }\r\n\r\n    confirmProductItemFileUpload(uploadId: string): Observable<any> {\r\n      return this.http.put(\"/v1/productItemFileUpload/upload-confirm/\" + uploadId);\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser'\r\nimport { FilterPipe } from './common-components/pipe/FilterPipe';\r\n\r\n@NgModule({\r\n    imports:[\r\n        BrowserModule\r\n    ],\r\n    declarations: [\r\n        FilterPipe\r\n    ],\r\n    providers:[\r\n        // service\r\n    ],\r\n    exports:[\r\n        FilterPipe\r\n    ],\r\n})\r\nexport class SharedModule {}","export class StringUtil {\r\n\r\n    static capitalFirstLetter(word: string) {\r\n        return word.charAt(0).toUpperCase() + word.slice(1);\r\n    }\r\n}","export class TypeUtil {\r\n\r\n    static toBoolean(str: string): boolean {\r\n        return str.toLowerCase() == 'true';\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}