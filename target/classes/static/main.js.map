{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/list-stock-item/list-stock-item.component.css","webpack:///./src/app/list-stock-item/list-stock-item.component.html","webpack:///./src/app/list-stock-item/list-stock-item.component.ts","webpack:///./src/app/model/Product.ts","webpack:///./src/app/model/StockItem.ts","webpack:///./src/app/reports-manager/reports-manager.component.css","webpack:///./src/app/reports-manager/reports-manager.component.html","webpack:///./src/app/reports-manager/reports-manager.component.ts","webpack:///./src/app/service/http-service.ts","webpack:///./src/app/service/stock-report-service.ts","webpack:///./src/app/stock-report/stock-report.component.css","webpack:///./src/app/stock-report/stock-report.component.html","webpack:///./src/app/stock-report/stock-report.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\n<stock-report></stock-report>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http'\nimport { AppComponent } from './app.component';\nimport { ListStockItemComponent } from './list-stock-item/list-stock-item.component';\nimport { ReportsManagerComponent } from './reports-manager/reports-manager.component';\nimport { StockReportService } from './service/stock-report-service';\nimport { StockReportComponent } from './stock-report/stock-report.component';\nimport { HttpService } from './service/http-service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ListStockItemComponent,\n    ReportsManagerComponent,\n    StockReportComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [StockReportService, HttpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xpc3Qtc3RvY2staXRlbS9saXN0LXN0b2NrLWl0ZW0uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"col-md-5 user-container\\\">\\n    <table class=\\\"table table-striped\\\">\\n        <thead>\\n        <tr>\\n          <th>ID</th>\\n          <th>Name</th>\\n          <th>Price</th>\\n          <th>Quantity</th>\\n          <th></th>\\n          <th></th>\\n          <th></th>\\n        </tr>\\n        </thead>\\n        <tbody>\\n        <tr>\\n          <td></td>\\n          <td>\\n            <input class=\\\"form-control\\\" (blur)=\\\"onBlurNewItemInput()\\\" [(ngModel)]=\\\"inputName\\\">\\n          </td>\\n          <td>\\n            <input class=\\\"form-control\\\" (blur)=\\\"onBlurNewItemInput()\\\" [(ngModel)]=\\\"inputPrice\\\">\\n          </td>\\n          <td>\\n            <input class=\\\"form-control\\\" (blur)=\\\"onBlurNewItemInput()\\\" [(ngModel)]=\\\"inputQuantity\\\">\\n          </td>\\n          <td></td>\\n          <td></td>\\n          <td>\\n            <button\\n              class=\\\"btn btn-danger\\\"\\n              style=\\\"width:150px\\\"\\n              [disabled]=\\\"! areNewStockItemFieldsSet\\\"\\n              (click)=\\\"createNewStockItem()\\\"> Add Stock Item</button>\\n          </td>\\n        </tr>\\n        <tr *ngFor=\\\"let item of stockItems\\\">\\n          <td contenteditable=\\\"true\\\">{{ item.id }}</td>\\n          <td contenteditable=\\\"true\\\">{{ item.product.name }}</td>\\n          <td contenteditable=\\\"true\\\">{{ item.product.price }}</td>\\n          <td contenteditable=\\\"true\\\">{{ item.quantity }}</td>\\n          <td></td>\\n          <td></td>\\n          <td><button (click)=\\\"deleteStockItem(item.id)\\\" class=\\\"btn btn-success\\\"> Delete</button>\\n            <button class=\\\"btn btn-success\\\" style=\\\"margin-left: 20px;\\\"> Edit</button></td>\\n        </tr>\\n        </tbody>\\n      </table>\\n    \\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { StockItem } from '../model/StockItem'\nimport { StockReportService } from '../service/stock-report-service';\nimport { Product } from '../model/Product';\n\n@Component({\n  selector: 'list-stock-item',\n  templateUrl: './list-stock-item.component.html',\n  styleUrls: ['./list-stock-item.component.css']\n})\nexport class ListStockItemComponent implements OnInit {\n\n  stockItemArray: StockItem[] = []\n  inputName: string\n  inputQuantity: number\n  inputPrice: number\n  areNewStockItemFieldsSet = false\n  @Input() stockItems: StockItem[]\n  @Input() stockReportId: number\n\n  constructor(private stockReportService: StockReportService) {}\n\n  ngOnInit() {\n  }\n\n  onBlurNewItemInput() {\n    this.areNewStockItemFieldsSet = this.inputName.trim().length > 0\n                                      && this.inputQuantity >= 0\n                                      && this.inputPrice >= 0\n  }\n\n  createNewStockItem() {\n    var stockItem = new StockItem(null, this.inputQuantity, new Product(null, this.inputName, this.inputPrice))\n    this.stockReportService.addItemToReport(this.stockReportId, stockItem)\n    this.resetNewStockitemFields()\n  }\n\n  deleteStockItem(id: number) {\n    this.stockItemArray.splice(id, 1)\n  }\n\n  resetNewStockitemFields() {\n    this.inputName = \"\"\n    this.inputQuantity = undefined\n    this.inputPrice = undefined\n    this.areNewStockItemFieldsSet = false\n  }\n\n}\n","export class Product {\n    id: number\n    name: string\n    price: number\n\n    constructor(id: number, name: string, price: number) {\n        this.id = id\n        this.name = name\n        this.price = price\n    }\n}","import { Product } from './Product';\n\nenum Type {\n    GLASSES,\n}\n\nexport class StockItem {\n\n    id: number\n    quantity: number\n    product: Product\n    type: Type = Type.GLASSES\n    \n\n    constructor(id: number, quantity: number, product: Product) {\n        this.id = id\n        this.quantity = quantity\n        this.product = product\n    }\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlcG9ydHMtbWFuYWdlci9yZXBvcnRzLW1hbmFnZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'reports-manager',\n  templateUrl: './reports-manager.component.html',\n  styleUrls: ['./reports-manager.component.css']\n})\nexport class ReportsManagerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { HttpClient } from '@angular/common/http'\nimport { HttpHeaders } from '@angular/common/http'; \nimport { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class HttpService {\n\n    constructor(private http: HttpClient){}\n\n    get(url: string) : Observable<Object> {\n        return this.http.get(url)\n    }\n\n    post(url: string, body: any) : Observable<Object> {\n        \n        return this.http.post(url, body, this.getHeaders())\n    }\n\n    private getHeaders() {\n        let httpHeaders = new HttpHeaders()\n            .set('Content-Type', 'application/json')\n        let options = {\n            headers: httpHeaders\n        }; \n        return options\n    }\n}","import { StockItem } from '../model/StockItem';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpService } from './http-service'\n\n@Injectable()\nexport class StockReportService {\n\n    constructor(private http: HttpService){}\n\n    getStockReport(id: number): Observable<any> {\n        console.log(\"Get report \" + id);\n        return this.http.get(\"/v1/stockReport/get/\" + id);\n    }\n\n    addItemToReport(idReport: number, item: StockItem) {\n        console.log(\"Add item[ \" + \", \" + item.quantity + \" to report \" + idReport)\n        var addStockItemRequest = {\n            \"id\" : idReport,\n            \"stockItem\" : item,\n            \"type\" : item.type\n        }\n        this.http.post(\"/v1/stock/update\",  addStockItemRequest)\n    }\n\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N0b2NrLXJlcG9ydC9zdG9jay1yZXBvcnQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div>\\n  <h2 style=\\\"margin: auto\\\"> {{ reportName }}</h2>\\n  <h3></h3>\\n  <list-stock-item [stockReportId]=\\\"reportId\\\" [stockItems]=\\\"stockItems\\\"></list-stock-item>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { StockReportService } from '../service/stock-report-service';\nimport { StockItem } from '../model/StockItem'\nimport { Product } from '../model/Product'\n\n@Component({\n  selector: 'stock-report',\n  templateUrl: './stock-report.component.html',\n  styleUrls: ['./stock-report.component.css']\n})\nexport class StockReportComponent implements OnInit {\n\n  reportName: string\n  reportId: number\n  stockItems: StockItem[] = []\n\n  constructor(private stockReportService: StockReportService) { }\n\n  ngOnInit() {\n    this.stockReportService.getStockReport(1).subscribe(data => {\n      this.reportId = data.id\n      this.reportName = data.name\n      for (let item of data.items) {\n        var product = new Product(item.product.id, item.product.name, item.product.price)\n        var stockItem = new StockItem(item.id, item.quantity, product)\n        this.stockItems.push(stockItem)\n      }\n    })\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}