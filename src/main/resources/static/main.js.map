{"version":3,"sources":["./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/admin/admin-panel/admin-panel.component.html","./src/app/admin/logged-users/logged-users.component.html","./src/app/app-nav-bar/app-nav-bar.component.html","./src/app/app.component.html","./src/app/authentication/login/login.component.html","./src/app/common-components/chart/bar-chart/bar-chart.component.html","./src/app/common-components/toast/toast.component.html","./src/app/customer/customer-header/customer-header.component.html","./src/app/customer/customer-info/customer-info.component.html","./src/app/customer/customer-panel/customer-panel.component.html","./src/app/customer/list-customer/list-customer.component.html","./src/app/customer/new-customer/new-customer.component.html","./src/app/customer/store/amount-orders-chart/amount-orders-chart.component.html","./src/app/customer/store/open-closed-orders-counter/open-closed-orders-counter.component.html","./src/app/customer/store/store-dashboard/store-dashboard.component.html","./src/app/customer/store/store-info/store-info.component.html","./src/app/customer/store/store-orders/store-orders.component.html","./src/app/modal/add-order-item-modal/add-order-item-modal.component.html","./src/app/modal/confirm-modal/confirm-modal-component.html","./src/app/modal/create-order-modal/create-order-modal.component.html","./src/app/modal/delete-order-items-modal/delete-order-items-modal.component.html","./src/app/modal/info-modal/info-modal.component.html","./src/app/modal/order-notification-modal/order-notification-modal.component.html","./src/app/modal/show-order-items-modal/show-order-items-modal.component.html","./src/app/modal/store/edit-store-info-modal/edit-store-info-modal.component.html","./src/app/modal/upload-product-file-modal/upload-product-file-modal.component.html","./src/app/monitoring/dashboard/dashboard.component.html","./src/app/order-panel/list-order-item/list-order-item.component.html","./src/app/order-panel/selected-order-items-list/selected-order-items-list.component.html","./src/app/order-panel/show-order-header/show-order-header.component.html","./src/app/order-panel/show-order/show-order.component.html","./src/app/orders-manager-panel/list-orders/list-orders.component.html","./src/app/orders-manager-panel/orders-manager/orders-manager.component.html","./src/app/product/products-panel/products-panel.component.html","./node_modules/tslib/tslib.es6.js","./src/$_lazy_route_resource lazy namespace object","./src/app/admin/admin-panel/admin-panel.component.css","./src/app/admin/admin-panel/admin-panel.component.ts","./src/app/admin/logged-users/logged-users.component.css","./src/app/admin/logged-users/logged-users.component.ts","./src/app/app-nav-bar/app-nav-bar.component.css","./src/app/app-nav-bar/app-nav-bar.component.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/authentication/login/login.component.css","./src/app/authentication/login/login.component.ts","./src/app/common-components/chart/bar-chart/bar-chart.component.css","./src/app/common-components/chart/bar-chart/bar-chart.component.ts","./src/app/common-components/modal-builder.ts","./src/app/common-components/pipe/FilterPipe.ts","./src/app/common-components/toast/toast-builder.ts","./src/app/common-components/toast/toast.component.css","./src/app/common-components/toast/toast.component.ts","./src/app/customer/customer-header/customer-header.component.css","./src/app/customer/customer-header/customer-header.component.ts","./src/app/customer/customer-info/customer-info.component.css","./src/app/customer/customer-info/customer-info.component.ts","./src/app/customer/customer-panel/customer-panel.component.css","./src/app/customer/customer-panel/customer-panel.component.ts","./src/app/customer/list-customer/list-customer.component.css","./src/app/customer/list-customer/list-customer.component.ts","./src/app/customer/new-customer/new-customer.component.css","./src/app/customer/new-customer/new-customer.component.ts","./src/app/customer/store/amount-orders-chart/amount-orders-chart.component.css","./src/app/customer/store/amount-orders-chart/amount-orders-chart.component.ts","./src/app/customer/store/open-closed-orders-counter/open-closed-orders-counter.component.css","./src/app/customer/store/open-closed-orders-counter/open-closed-orders-counter.component.ts","./src/app/customer/store/store-dashboard/store-dashboard.component.css","./src/app/customer/store/store-dashboard/store-dashboard.component.ts","./src/app/customer/store/store-info/store-info.component.css","./src/app/customer/store/store-info/store-info.component.ts","./src/app/customer/store/store-orders/store-orders.component.css","./src/app/customer/store/store-orders/store-orders.component.ts","./src/app/http-interceptor/HttpToHttpsInterceptor.ts","./src/app/http-interceptor/Interceptors-manager.ts","./src/app/http-interceptor/SessionTimeoutHttpInterceptor.ts","./src/app/modal/add-order-item-modal/add-order-item-modal.component.css","./src/app/modal/add-order-item-modal/add-order-item-modal.component.ts","./src/app/modal/confirm-modal/confirm-modal-component.css","./src/app/modal/confirm-modal/confirm-modal-component.ts","./src/app/modal/create-order-modal/create-order-modal.component.css","./src/app/modal/create-order-modal/create-order-modal.component.ts","./src/app/modal/delete-order-items-modal/delete-order-items-modal.component.css","./src/app/modal/delete-order-items-modal/delete-order-items-modal.component.ts","./src/app/modal/info-modal/info-modal.component.css","./src/app/modal/info-modal/info-modal.component.ts","./src/app/modal/order-notification-modal/order-notification-modal.component.css","./src/app/modal/order-notification-modal/order-notification-modal.component.ts","./src/app/modal/show-order-items-modal/show-order-items-modal.component.css","./src/app/modal/show-order-items-modal/show-order-items-modal.component.ts","./src/app/modal/store/edit-store-info-modal/edit-store-info-modal.component.css","./src/app/modal/store/edit-store-info-modal/edit-store-info-modal.component.ts","./src/app/modal/upload-product-file-modal/upload-product-file-modal.component.css","./src/app/modal/upload-product-file-modal/upload-product-file-modal.component.ts","./src/app/model/Address.ts","./src/app/model/AggregatedOrder.ts","./src/app/model/AggregatedOrderInfo.ts","./src/app/model/AggregatedOrderItem.ts","./src/app/model/DocType.ts","./src/app/model/Order.ts","./src/app/model/OrderItem.ts","./src/app/model/Owner.ts","./src/app/model/Product.ts","./src/app/model/ProductId.ts","./src/app/model/ProductItem.ts","./src/app/model/ProductStockInfo.ts","./src/app/model/ProductType.ts","./src/app/model/Store.ts","./src/app/model/UploadProductsFileResult.ts","./src/app/model/admin/AdminSetting.ts","./src/app/model/admin/user/LoggedUser.ts","./src/app/model/admin/user/SessionInfo.ts","./src/app/model/monitoring/actuator/ActuatorBasicResponse.ts","./src/app/model/monitoring/actuator/ActuatorDbHealth.ts","./src/app/model/monitoring/actuator/ActuatorElasticsearchHealth.ts","./src/app/model/request/customer/AddOrUpdateCustomerReq.ts","./src/app/model/request/login/LoginRequest.ts","./src/app/model/request/notification/NotificationRequest.ts","./src/app/model/request/notification/OrderNotificationRequest.ts","./src/app/model/request/order/AddOrderItemByBarCodeReq.ts","./src/app/model/request/order/AddOrderItemReq.ts","./src/app/model/request/order/DeleteOrderItemsReq.ts","./src/app/model/statistic/OpenClosedOrdersCounter.ts","./src/app/monitoring/dashboard/dashboard.component.css","./src/app/monitoring/dashboard/dashboard.component.ts","./src/app/order-panel/list-order-item/list-order-item.component.css","./src/app/order-panel/list-order-item/list-order-item.component.ts","./src/app/order-panel/selected-order-items-list/selected-order-items-list.component.css","./src/app/order-panel/selected-order-items-list/selected-order-items-list.component.ts","./src/app/order-panel/show-order-header/show-order-header.component.css","./src/app/order-panel/show-order-header/show-order-header.component.ts","./src/app/order-panel/show-order/show-order.component.css","./src/app/order-panel/show-order/show-order.component.ts","./src/app/orders-manager-panel/list-orders/list-orders.component.css","./src/app/orders-manager-panel/list-orders/list-orders.component.ts","./src/app/orders-manager-panel/orders-manager/orders-manager.component.css","./src/app/orders-manager-panel/orders-manager/orders-manager.component.ts","./src/app/product/products-panel/products-panel.component.css","./src/app/product/products-panel/products-panel.component.ts","./src/app/service/admin-setting-service.ts","./src/app/service/customer-service.ts","./src/app/service/http-service.ts","./src/app/service/login-service.ts","./src/app/service/monitoring-service.ts","./src/app/service/notification-service.ts","./src/app/service/order-service.ts","./src/app/service/orders-statistic-service.ts","./src/app/service/product-service.ts","./src/app/service/store-service.ts","./src/app/service/toast.service.ts","./src/app/shared.module.ts","./src/app/util/StringUtil.ts","./src/app/util/TypeUtil.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"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","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-SG\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-SG.js\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","export default \"<div class=\\\"container-fluid\\\">\\r\\n    <form [formGroup]=\\\"adminForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-check-label\\\" for=\\\"notification\\\">Notification &nbsp;</label>\\r\\n          <input type=\\\"checkbox\\\" formControlName=\\\"notification\\\" class=\\\"form-check-input\\\" (input)=\\\"settingChanged()\\\">\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"Email\\\">Email addresses\\r\\n          <span style=\\\"font-size: 80%; font-style: italic\\\">(Use comma ',' delimiter for multiple emails)</span\\r\\n        ></label>\\r\\n        <input type=\\\"text\\\" formControlName=\\\"emails\\\"\\r\\n          (input)=\\\"settingChanged()\\\"\\r\\n          class=\\\"form-control\\\"\\r\\n        />\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"itemToShow\\\">List item number to load by default</label>\\r\\n        <input type=\\\"text\\\" formControlName=\\\"itemToShow\\\"\\r\\n          (input)=\\\"settingChanged()\\\"\\r\\n          class=\\\"form-control\\\"\\r\\n        />\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"saveButtonDisabled\\\">Save</button>\\r\\n      </div>\\r\\n    </form>\\r\\n    <ngb-alert *ngIf=\\\"alertMessage\\\" type=\\\"success\\\" (close)=\\\"alertMessage = null\\\">{{ alertMessage }}</ngb-alert>\\r\\n</div>\"","export default \"<div class=\\\"container\\\">\\n  <div *ngFor=\\\"let user of loggedUsers\\\">\\n    <h5>{{ user.username }} :</h5>\\n    <table class=\\\"table table-responsive table-striped table-hover\\\">\\n      <thead>\\n      <tr>\\n        <th>#</th>\\n        <th>Session ID</th>\\n        <th>Last Login</th>\\n      </tr>\\n      </thead>\\n      <tbody>\\n      <tr *ngFor=\\\"let session of user.sessions; let i = index\\\">\\n        <td>{{ i+1 }}</td>\\n        <td>{{ session.sessionId }}</td>\\n        <td>{{ session.lastLoginDatetime }}</td>\\n      </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</div>\\n<br>\\n\"","export default \"<nav *ngIf=\\\"isLoggedIn$ | async\\\" class=\\\"navbar navbar-light navbar-expand-md fixed-top border-bottom\\\" style=\\\"background-color: white\\\">\\r\\n  <img src=\\\"../../assets/img/andybrook-logo-home.png\\\">\\r\\n  <button class=\\\"navbar-toggler hidden-sm-up\\\" type=\\\"button\\\" (click)=\\\"isNavbarCollapsed = !isNavbarCollapsed\\\" data-target=\\\"#navbarsDefault\\\" aria-controls=\\\"navbarsDefault\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n  </button>\\r\\n  <div [ngbCollapse]=\\\"isNavbarCollapsed\\\" class=\\\"collapse navbar-collapse\\\" id=\\\"navbarsDefault\\\">\\r\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\"\\r\\n            routerLink=\\\"/orders\\\"\\r\\n        >Orders</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item dropdown\\\" ngbDropdown>\\r\\n        <a class=\\\"nav-link dropdown-toggle\\\" id=\\\"id01\\\" ngbDropdownToggle>Customers</a>\\r\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"id01\\\" ngbDropdownMenu>\\r\\n          <a class=\\\"dropdown-item\\\" routerLink=\\\"/customer-dashboard\\\">Dashboard</a>\\r\\n          <a class=\\\"dropdown-item\\\" routerLink=\\\"/new-customer/-1\\\">New Customer</a>\\r\\n        </div>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\"\\r\\n            routerLink=\\\"/products\\\"\\r\\n        >Products</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\"\\r\\n            routerLink=\\\"/monitoring\\\"\\r\\n        >Monitoring</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item dropdown\\\" ngbDropdown>\\r\\n        <a class=\\\"nav-link dropdown-toggle\\\" id=\\\"admin\\\" ngbDropdownToggle>Admin</a>\\r\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"admin\\\" ngbDropdownMenu>\\r\\n          <a class=\\\"dropdown-item\\\" routerLink=\\\"/admin\\\">Dashboard</a>\\r\\n          <a class=\\\"dropdown-item\\\" routerLink=\\\"/logged-users\\\">Users</a>\\r\\n        </div>\\r\\n      </li>\\r\\n    </ul>\\r\\n    <ul class=\\\"navbar-nav\\\">\\r\\n        <li class=\\\"nav-item\\\">\\r\\n            <a (click)=\\\"onLogout()\\\">\\r\\n              <img src=\\\"../../assets/icon/account-logout.png\\\">\\r\\n            </a>\\r\\n        </li>\\r\\n      </ul>\\r\\n  </div>\\r\\n</nav>\"","export default \"<app-app-nav-bar></app-app-nav-bar>\\r\\n<br>\\r\\n<br>\\r\\n<br>\\r\\n<div class=\\\"container-fluid\\\">\\r\\n    <toast></toast>\\r\\n    <router-outlet></router-outlet>\\r\\n</div>\\r\\n\\r\\n\"","export default \"<div class=\\\"card w-75 mt-5 shadow-sm p-3 mb-5 bg-white rounded\\\" style=\\\"margin: auto; max-width: 35em;\\\">\\n  <div class=\\\"card-body\\\">\\n    <picture>\\n      <source media=\\\"(min-width: 1200px)\\\" srcset=\\\"../../../assets/img/andybrook-logo.png\\\" style=\\\"max-width: 100%\\\">\\n      <source media=\\\"(min-width: 100px)\\\" srcset=\\\"../../../assets/img/andybrook-short-logo.png\\\" style=\\\"max-width: 100%\\\">\\n      <img src=\\\"../../../assets/img/andybrook-logo.png\\\" style=\\\"max-width: 100%\\\">\\n    </picture>\\n    <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"username\\\">Username :</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"username\\\" id=\\\"username\\\" autocomplete=\\\"off\\\">\\n        <div class=\\\"error\\\" *ngIf=\\\"loginForm.controls['username'].hasError('required') && loginForm.controls['username'].touched\\\">Username is required</div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"pwd\\\">Password :</label>\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"password\\\" id=\\\"pwd\\\" autocomplete=\\\"off\\\">\\n        <div class=\\\"error\\\" *ngIf=\\\"loginForm.controls['password'].hasError('required') && loginForm.controls['password'].touched\\\">Password is required</div>\\n      </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\">\\n            <button class=\\\"btn btn-success\\\" [disabled]=\\\"loginForm.invalid\\\">Login</button>\\n          </div>\\n          <div class=\\\"col\\\">\\n            <ngb-alert *ngIf=\\\"_errorMessage\\\" type=\\\"danger\\\" [dismissible]=\\\"true\\\" (close)=\\\"_errorMessage = null\\\">{{ _errorMessage }}</ngb-alert>\\n          </div>\\n        </div>\\n    </form>\\n  </div>\\n</div>\"","export default \"<div>\\n    <div>\\n        <div *ngIf=\\\"isReady\\\" style=\\\"display: block\\\">\\n            <canvas baseChart\\n                [datasets]=\\\"barChartData\\\"\\n                [labels]=\\\"barChartLabels\\\"\\n                [options]=\\\"barChartOptions\\\"\\n                [plugins]=\\\"barChartPlugins\\\"\\n                [legend]=\\\"barChartLegend\\\"\\n                [chartType]=\\\"barChartType\\\"\\n                [colors]=\\\"barChartColors\\\"\\n                >\\n            </canvas>\\n        </div>\\n        <img *ngIf=\\\"!isReady\\\" src=\\\"../../../../assets/icon/LoadingGrey.gif\\\">\\n    </div>\\n</div>\"","export default \"<!--<ngb-toast\\n    *ngFor=\\\"let toast of toastService.toasts\\\"\\n    [header]=\\\"toast.headertext\\\"\\n    [class]=\\\"toast.classname\\\"\\n    [autohide]=\\\"toast.autohide\\\"\\n    [delay]=\\\"toast.delay || 5000\\\"\\n    (hide)=\\\"toastService.remove(toast)\\\"\\n>\\n    <ng-template [ngIf]=\\\"isTemplate(toast)\\\" [ngIfElse]=\\\"text\\\">\\n    <ng-template [ngTemplateOutlet]=\\\"toast.textOrTpl\\\"></ng-template>\\n    </ng-template>\\n\\n    <ng-template #text>{{ toast.textOrTpl }}</ng-template>\\n</ngb-toast>-->\"","export default \"\"","export default \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <h5>Store Information</h5>\\r\\n    <hr>\\r\\n    <div *ngIf=\\\"customer\\\">\\r\\n      <label>ID :</label> {{ customer.store.id }}\\r\\n      <br>\\r\\n      <label>Store :</label> {{ customer.store.name }}\\r\\n      <br>\\r\\n      <label>Address :</label> {{ customer.store.address.format() }}\\r\\n      <br>\\r\\n      <label>Phone :</label> {{ customer.store.phone }}\\r\\n      <br>\\r\\n      <label>Email :</label> {{ customer.store.email }}\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col\\\">\\r\\n    <h5>Owner Information</h5>\\r\\n    <hr>\\r\\n    <div *ngIf=\\\"customer\\\">\\r\\n      <label>ID :</label> {{ customer.store.owner.id }}\\r\\n      <br>\\r\\n      <label>Compagny :</label> {{ customer.store.owner.compagnyName }}\\r\\n      <br>\\r\\n      <label>Name :</label> {{ customer.store.owner.firstName + ' ' + customer.store.owner.lastName }}\\r\\n      <br>\\r\\n      <label>Email :</label> {{ customer.store.owner.email }}\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","export default \"<div class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <customer-header></customer-header>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <list-customer [store]=\\\"store\\\" (onStoreSelected)=\\\"onStoreSelected($event)\\\"></list-customer>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"card w-100 shadow-sm p-3 mb-5 bg-white rounded\\\">\\r\\n  <div class=\\\"card-header\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <h5>Stores</h5>\\r\\n      </div>\\r\\n      <div class=\\\"col\\\" style=\\\"float:right\\\">\\r\\n        <input #searchInput type=\\\"search\\\"\\r\\n          class=\\\"form-control form-control-sm\\\"\\r\\n          (keyup.enter)=\\\"onClickSearch(searchInput.value)\\\"\\r\\n          placeholder=\\\"Type to search a customer...\\\">\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <div class=\\\"table-responsive table-wrapper-scroll-y my-custom-scrollbar\\\">\\r\\n          <table class=\\\"table table-striped table-hover\\\">\\r\\n            <thead>\\r\\n              <tr>\\r\\n                <th>ID</th>\\r\\n                <th>Name</th>\\r\\n                <th>Owner</th>\\r\\n                <th>Address</th>\\r\\n                <th>City</th>\\r\\n                <th>Country</th>\\r\\n                <th>Phone</th>\\r\\n                <th>Email</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let store of stores\\\" (click)=\\\"onClickStore(store)\\\">\\r\\n                <td>{{ store.id }}</td>\\r\\n                <td><a [routerLink]=\\\"['/store', store.id]\\\">{{ store.name }}</a></td>\\r\\n                <td>{{ store.owner.firstName + \\\" \\\" + store.owner.lastName }}</td>\\r\\n                <td>{{ store.address.streetNumber + ', ' + store.address.streetName }}\\r\\n                <td>{{ store.address.city }}</td>\\r\\n                <td>{{ store.address.country }}</td>\\r\\n                <td>{{ store.phone }}</td>\\r\\n                <td>{{ store.email }}</td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>  \\r\\n</div>\"","export default \"<div class=\\\"card w-100 shadow-sm p-3 mb-5 bg-white rounded\\\">\\r\\n  <div class=\\\"card-header\\\">\\r\\n      <h5>Customer Information</h5>\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n      <h5>Owner</h5>\\r\\n      <hr>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col form-group\\\">\\r\\n          <label for=\\\"compagnyName\\\">Compagny Nane</label>\\r\\n          <input type=\\\"text\\\" formControlName=\\\"ownerAutoComplete\\\"\\r\\n            (blur)=\\\"onBlurOwnerAutoComplete()\\\"\\r\\n            [(ngModel)]=\\\"inputOwnerName\\\"\\r\\n            [ngbTypeahead]=\\\"search\\\"\\r\\n            class=\\\"form-control form-control-sm\\\"/>\\r\\n        </div>\\r\\n        <div class=\\\"col form-group\\\">\\r\\n            <label for=\\\"firstName\\\">FirstName</label>\\r\\n            <input type=\\\"text\\\" formControlName=\\\"ownerFirstName\\\" class=\\\"form-control form-control-sm\\\" (blur)=onBlurStringFormControl($event)/>\\r\\n        </div>\\r\\n        <div class=\\\"col form-group\\\">\\r\\n            <label for=\\\"lastName\\\">LastName</label>\\r\\n            <input type=\\\"text\\\" formControlName=\\\"ownerLastName\\\" class=\\\"form-control form-control-sm\\\" (blur)=onBlurStringFormControl($event)/>\\r\\n        </div>\\r\\n        <div class=\\\"col form-group\\\">\\r\\n            <label for=\\\"email\\\">Email</label>\\r\\n            <input type=\\\"text\\\" formControlName=\\\"ownerEmail\\\" class=\\\"form-control form-control-sm\\\" (blur)=onBlurLowcaseStringFormControl($event)/>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"storesOfSelectedOwner.length > 0\\\" class=\\\"row\\\">\\r\\n        <div class=\\\"col-5\\\">\\r\\n          <table class=\\\"table table-striped table-bordered table-sm\\\">\\r\\n            <thead>\\r\\n              <tr>\\r\\n                <th>#</th>\\r\\n                <th>Id</th>\\r\\n                <th>Name</th>\\r\\n                <th>Email</th>\\r\\n                <th>Phone</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let store of storesOfSelectedOwner; let i = index\\\">\\r\\n                <td>{{ i + 1 }}</td>\\r\\n                <td>{{ store.id }}</td>\\r\\n                <td>{{ store.name }}</td>\\r\\n                <td>{{ store.email }}</td>\\r\\n                <td>{{ store.phone }}</td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n      </div>\\r\\n      <h5>Store</h5>\\r\\n      <hr>\\r\\n      <div class=\\\"row\\\">\\r\\n          <div class=\\\"col form-group\\\">\\r\\n              <label for=\\\"name\\\">Name</label>\\r\\n              <input type=\\\"text\\\" formControlName=\\\"storeName\\\" class=\\\"form-control form-control-sm\\\" (blur)=onBlurStringFormControl($event)/>\\r\\n          </div>\\r\\n          <div class=\\\"col form-group\\\">\\r\\n            <label for=\\\"streetNumber\\\">Street Number</label>\\r\\n            <input type=\\\"text\\\" formControlName=\\\"storeStreetNumber\\\" class=\\\"form-control form-control-sm\\\"/>\\r\\n          </div>\\r\\n          <div class=\\\"col form-group\\\">\\r\\n              <label for=\\\"streetName\\\">Street</label>\\r\\n              <input type=\\\"text\\\" formControlName=\\\"storeStreetName\\\" class=\\\"form-control form-control-sm\\\"/>\\r\\n          </div>\\r\\n          <div class=\\\"col form-group\\\">\\r\\n              <label for=\\\"zipCode\\\">Zip Code</label>\\r\\n              <input type=\\\"text\\\" formControlName=\\\"storeZipCode\\\" class=\\\"form-control form-control-sm\\\"/>\\r\\n          </div>\\r\\n          <div class=\\\"col form-group\\\">\\r\\n              <label for=\\\"city\\\">City</label>\\r\\n              <input type=\\\"text\\\" formControlName=\\\"storeCity\\\" class=\\\"form-control form-control-sm\\\" (blur)=onBlurStringFormControl($event)/>\\r\\n          </div>\\r\\n          <div class=\\\"col form-group\\\">\\r\\n            <label for=\\\"country\\\">Country</label>\\r\\n            <input type=\\\"text\\\" formControlName=\\\"storeCountry\\\" class=\\\"form-control form-control-sm\\\" (blur)=onBlurStringFormControl($event)/>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n          <div class=\\\"col form-group\\\">\\r\\n              <label for=\\\"phone\\\">Phone</label>\\r\\n              <input type=\\\"text\\\" formControlName=\\\"storePhone\\\" class=\\\"form-control form-control-sm\\\"/>\\r\\n          </div>\\r\\n          <div class=\\\"col form-group\\\">\\r\\n              <label for=\\\"email\\\">Email</label>\\r\\n              <input type=\\\"text\\\" formControlName=\\\"storeEmail\\\" class=\\\"form-control form-control-sm\\\" (blur)=onBlurLowcaseStringFormControl($event)>\\r\\n          </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col\\\">\\r\\n          <button class=\\\"btn btn-primary\\\">Save</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-auto\\\">\\r\\n          <ngb-alert *ngIf=\\\"errorMessage\\\" [type]=\\\"typeAlert\\\" [dismissible]=\\\"true\\\" (close)=\\\"errorMessage = null\\\">{{ errorMessage }}</ngb-alert>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\"","export default \"<div class=\\\"card shadow-sm p-3 mb-5 bg-white rounded\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n        <div class=\\\"row justify-content-between\\\">\\r\\n            <div class=\\\"col-10\\\">\\r\\n                <h5>Last Orders Amounts</h5>\\r\\n            </div>\\r\\n            <div class=\\\"col-2\\\">\\r\\n                <form [formGroup]=\\\"lastOrdersForm\\\" (ngSubmit)=\\\"onRefresh()\\\" class=\\\"form-inline\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"Name\\\">Last</label>\\r\\n                        <input type=\\\"text\\\" formControlName=\\\"lastOrderNumber\\\" class=\\\"form-control\\\"/>\\r\\n                    </div>\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-success btn-sm\\\" style=\\\"float:right\\\">Refresh</button>\\r\\n                </form>               \\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <bar-chart [barChartLabels]=\\\"xLabels\\\" [barChartData]=\\\"yValues\\\" [withBarLegend]=\\\"false\\\"></bar-chart>\\r\\n    </div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"card shadow-sm p-3 mb-5 bg-white rounded\\\">\\n  <div class=\\\"card-header\\\">\\n      <h5>Closed Orders</h5>\\n  </div>\\n  <div class=\\\"card-body\\\">\\n    <div *ngIf=\\\"counters\\\">\\n      <ngb-progressbar type=\\\"info\\\" [value]=\\\"counters.calculatePercentOfClosedOrders()\\\"><b>{{ counters.closedOrdersCount }} of {{ counters.totalOrders() }} ({{ counters.calculatePercentOfClosedOrders() }}%)</b></ngb-progressbar>\\n    </div>  \\n    <img *ngIf=\\\"! counters\\\" class=\\\"center\\\" src=\\\"../../../../assets/icon/LoadingGrey.gif\\\">\\n  </div>\\n</div>\"","export default \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <store-info [storeId]=\\\"storeId\\\"></store-info>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <store-orders [storeId]=\\\"storeId\\\"></store-orders>\\n    </div>\\n    <div class=\\\"col\\\">\\n      <open-closed-orders-counter [storeId]=\\\"storeId\\\"></open-closed-orders-counter>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <amount-orders-chart [storeId]=\\\"storeId\\\"></amount-orders-chart>\\n    </div>\\n    <div class=\\\"col\\\"></div>\\n  </div>\\n</div>\"","export default \"<div class=\\\"card w-100 shadow-sm p-3 mb-5 bg-white rounded\\\">\\n    <div class=\\\"card-header\\\">\\n      <div class=\\\"row justify-content-between\\\">\\n        <div class=\\\"col-10\\\">\\n          <h5>Store</h5>\\n        </div>\\n        <div class=\\\"col-2\\\">\\n          <button class=\\\"btn btn-success btn-sm\\\" (click)=\\\"editStoreInfo()\\\" style=\\\"float:right\\\">Edit</button>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n          <div *ngIf=\\\"store\\\" class=\\\"table-responsive\\\">\\n            <table class=\\\"table table-striped table-hover table-sm\\\">\\n              <thead>\\n                <tr>\\n                  <th>ID</th>\\n                  <th>Name</th>\\n                  <th>Owner</th>\\n                  <th>Address</th>\\n                  <th>City</th>\\n                  <th>Country</th>\\n                  <th>Phone</th>\\n                  <th>Email</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr *ngIf=\\\"store\\\">\\n                  <td>{{ store.id }}</td>\\n                  <td>{{ store.name }}</td>\\n                  <td>{{ store.owner.getFullName() }}</td>\\n                  <td>{{ store.address.streetNumber + ' ' + store.address.streetName }}</td>\\n                  <td>{{ store.address.city }}</td>\\n                  <td>{{ store.address.country }}</td>\\n                  <td>{{ store.phone }}</td>\\n                  <td>{{ store.email }}</td>\\n                </tr>\\n              </tbody>\\n            </table>\\n          </div>\\n          <img *ngIf=\\\"! store\\\" class=\\\"center\\\" src=\\\"../../../../assets/icon/LoadingGrey.gif\\\">\\n        </div>\\n      </div>\\n    </div>  \\n  </div>\"","export default \"<div class=\\\"card shadow-sm p-3 mb-5 bg-white rounded\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n        <div class=\\\"row justify-content-between\\\">\\r\\n            <div class=\\\"col-4\\\">\\r\\n                <h5>Orders ({{ orders.length }})</h5>\\r\\n            </div>\\r\\n            <div class=\\\"col-4\\\">\\r\\n                <button class=\\\"btn btn-info btn-sm\\\" (click)=\\\"onNewOrder()\\\" style=\\\"float:right\\\">New Order</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div *ngIf=\\\"orders\\\" class=\\\"table-responsive table-wrapper-scroll-y my-custom-scrollbar\\\">\\r\\n            <table class=\\\"table table-striped table-bordered table-sm\\\">\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th>ID</th>\\r\\n                        <th>Name</th>\\r\\n                        <th>Status</th>\\r\\n                        <th>Products</th>\\r\\n                        <th>Qty</th>\\r\\n                        <th>Amount</th>\\r\\n                        <th>Creation</th>\\r\\n                        <th>Closed</th>\\r\\n                        <th></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let order of orders\\\">\\r\\n                        <td>{{ order.id }}</td>\\r\\n                        <td>{{ order.name }}</td>\\r\\n                        <td [ngClass]=\\\"order.status === 'OPEN' ? 'table-success' : 'table-danger'\\\">{{ order.status }}</td>\\r\\n                        <td>{{ order.aggregatedOrderInfo.productSize }}</td>\\r\\n                        <td>{{ order.aggregatedOrderInfo.orderItemSize }}</td>\\r\\n                        <td>{{ order.aggregatedOrderInfo.totalPrice }} €</td>\\r\\n                        <td>{{ order.createdDatetime  | date:'shortDate' }}</td>\\r\\n                        <td>{{ order.closeDatetime  | date:'shortDate' }}</td>\\r\\n                        <td>\\r\\n                            <button\\r\\n                                class=\\\"btn btn-success btn-sm\\\"\\r\\n                                [routerLink]=\\\"['/order', order.id]\\\"\\r\\n                            >See</button>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n        <img *ngIf=\\\"! orders\\\" class=\\\"center\\\" src=\\\"../../../../assets/icon/LoadingGrey.gif\\\">\\r\\n    </div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"modal-header\\\">\\r\\n    <h5 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Add order items</h5>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"onClose()\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n</div>\\r\\n<div class=\\\"modal-body\\\">\\r\\n  <form [formGroup]=\\\"addOrderItemForm\\\">\\r\\n    <div class=\\\"custom-control custom-switch\\\" style=\\\"float: right\\\">\\r\\n      <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"customSwitch1\\\" (click)=\\\"shouldEnableBarCodeMode($event)\\\" [(ngModel)]=\\\"barCodeMode\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n      <label class=\\\"custom-control-label\\\" for=\\\"customSwitch1\\\">Barcode Mode</label>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"barCodeMode\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"barCode\\\">BarCode</label>\\r\\n          <input type=\\\"text\\\" formControlName=\\\"barCode\\\"\\r\\n            (change)=\\\"onValueChange()\\\"\\r\\n            (blur)=\\\"onBlurBarCode()\\\"\\r\\n            class=\\\"form-control\\\"/>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"! barCodeMode\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"Name\\\">Product Name</label>\\r\\n        <input type=\\\"text\\\" formControlName=\\\"productName\\\"\\r\\n          [(ngModel)]=\\\"inputProductName\\\"\\r\\n          [ngbTypeahead]=\\\"search\\\"\\r\\n          (change)=\\\"onProductNameChange()\\\"\\r\\n          (blur)=\\\"onBlurProductName()\\\"\\r\\n          class=\\\"form-control\\\"/>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"quantity\\\">Quantity</label>\\r\\n        <input type=\\\"number\\\" formControlName=\\\"quantity\\\"\\r\\n          (change)=\\\"onValueChange()\\\"\\r\\n          class=\\\"form-control\\\"/>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"productStockInfo\\\">\\r\\n      <table class=\\\"table table-striped\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th>Id</th>\\r\\n            <th>Name</th>\\r\\n            <th>Initial Qty</th>\\r\\n            <th>Free Qty</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr>\\r\\n            <td>{{ productStockInfo.product.id }}</td>\\r\\n            <td>{{ productStockInfo.product.name }}</td>\\r\\n            <td>{{ productStockInfo.createdQuantity }}</td>\\r\\n            <td>{{ productStockInfo.createdQuantity - productStockInfo.usedQuantity }}</td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"productItem\\\">\\r\\n      <table class=\\\"table table-striped\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th>Id</th>\\r\\n            <th>Name</th>\\r\\n            <th>Free</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr>\\r\\n            <td>{{ productItem.id }}</td>\\r\\n            <td>{{ productItem.product.name }}</td>\\r\\n            <td>{{ productItem.orderItemId ? 'No' : 'Yes' }}</td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n<div class=\\\"modal-footer\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col\\\">\\r\\n          <button class=\\\"btn btn-outline-dark\\\" type=\\\"button\\\" [disabled]=\\\"isAddButtonDisabled\\\" (click)=\\\"onSubmit(true)\\\" style=\\\"float:left\\\">\\r\\n              <span *ngIf=\\\"addOrderItemInProgress\\\" class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\" aria-hidden=\\\"true\\\"></span>\\r\\n            Add Another</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-auto\\\">\\r\\n            <ngb-alert *ngIf=\\\"errorMessage\\\" type=\\\"danger\\\" [dismissible]=\\\"true\\\" (close)=\\\"errorMessage = null\\\">{{ errorMessage }}</ngb-alert>\\r\\n        </div>\\r\\n        <div class=\\\"col\\\">\\r\\n          <button class=\\\"btn btn-outline-dark\\\" type=\\\"button\\\" [disabled]=\\\"isAddButtonDisabled\\\" (click)=\\\"onSubmit(false)\\\" style=\\\"float:right\\\">\\r\\n              <span *ngIf=\\\"addOrderItemInProgress\\\" class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\" aria-hidden=\\\"true\\\"></span>\\r\\n            Add</button>\\r\\n        </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","export default \"<div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">{{ title }}</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"onClickClose()\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n</div>\\r\\n<div class=\\\"modal-body\\\">\\r\\n    <p>{{ message }}</p>\\r\\n</div>\\r\\n<div class=\\\"modal-footer\\\">\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"onClickClose()\\\">No</button>\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onClickYes()\\\">Yes</button>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"modal-header\\\">\\r\\n  <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">New Order</h4>\\r\\n  <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"onClose()\\\">\\r\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n  </button>\\r\\n</div>\\r\\n<form [formGroup]=\\\"createOrderForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"modal-body\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"Name\\\">Name</label>\\r\\n        <input type=\\\"text\\\" formControlName=\\\"name\\\"\\r\\n          class=\\\"form-control\\\"/>\\r\\n          <label *ngIf=\\\"isFormSubmitted && createOrderForm.get('name').invalid\\\" class=\\\"text-danger\\\">A name is required.</label>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"comment\\\">Comment/Description</label>\\r\\n        <input type=\\\"text\\\" formControlName=\\\"comment\\\"\\r\\n          class=\\\"form-control\\\"/>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"store\\\">Store</label>\\r\\n        <select type=\\\"text\\\" formControlName=\\\"stores\\\"\\r\\n          class=\\\"form-control\\\">\\r\\n          <option *ngFor=\\\"let store of storesArray\\\"\\r\\n            [ngValue]=\\\"store\\\">{{ store.id }} | {{ store.name }} | {{ store.owner.firstName }} {{ store.owner.lastName }}</option>\\r\\n        </select>\\r\\n        <label *ngIf=\\\"isFormSubmitted && createOrderForm.controls['stores'].invalid\\\" class=\\\"text-danger\\\">A store is required.</label>\\r\\n      </div>\\r\\n      \\r\\n      <div>\\r\\n          <ngb-alert *ngIf=\\\"errorMessage\\\" type=\\\"danger\\\" [dismissible]=\\\"false\\\" (close)=\\\"errorMessage = null\\\">{{ errorMessage }}</ngb-alert>\\r\\n      </div>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-outline-dark\\\">Create</button>\\r\\n  </div>\\r\\n</form>\"","export default \"<div class=\\\"modal-header\\\">\\r\\n  <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">{{ title }}</h4>\\r\\n  <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"onClickClose()\\\">\\r\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n  </button>\\r\\n</div>\\r\\n<div class=\\\"modal-body\\\">\\r\\n  <div class=\\\"table-wrapper-scroll-y my-custom-scrollbar\\\">\\r\\n    <table class=\\\"table table-striped\\\">\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th>#</th>\\r\\n          <th>Id</th>\\r\\n          <th>Product Name</th>\\r\\n          <th>BarCode</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let item of orderItems; let i = index\\\">\\r\\n          <td>{{ i+1 }}</td>\\r\\n          <td>{{ item.productItem.id }}</td>\\r\\n          <td>{{ item.productItem.product.name }}</td>\\r\\n          <td>{{ item.productItem.barCode }}</td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"modal-footer\\\">\\r\\n<button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"onClickClose()\\\">No</button>\\r\\n<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onClickYes()\\\">Yes</button>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"modal-header\\\">\\r\\n  <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">{{ title }}</h4>\\r\\n  <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"onClickClose()\\\">\\r\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n  </button>\\r\\n</div>\\r\\n<div class=\\\"modal-body\\\">\\r\\n  <p>{{ message }}</p>\\r\\n</div>\\r\\n<div class=\\\"modal-footer\\\">\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"onClickClose()\\\">OK</button>\\r\\n</div>\\r\\n\"","export default \"<div>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h3 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Order Notification Setting</h3>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"onClose()\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <form [formGroup]=\\\"form\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"notifType\\\">Notification Type</label>\\r\\n        <select formControlName=\\\"docTypesSelect\\\" class=\\\"custom-select\\\" (change)=\\\"onChangeType($event)\\\" required>\\r\\n            <option *ngFor=\\\"let type of docTypesMapByName.keys()\\\" [ngValue]=\\\"type\\\">{{ type }}</option>\\r\\n        </select>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\" *ngIf=\\\"selectedType\\\">\\r\\n        <label for=\\\"formats\\\">Formats</label>\\r\\n        <div class=\\\"form-inline\\\">\\r\\n          <div formArrayName=\\\"formats\\\" *ngFor=\\\"let format of form.get('formats').controls; let i = index;\\\">\\r\\n            <label class=\\\"checkbox-inline\\\" style=\\\"margin-right:25px\\\" for=\\\"format\\\">{{ selectedType.supportedFormats[i] }}&nbsp;\\r\\n              <input formControlName=\\\"format\\\" type=\\\"checkbox\\\">\\r\\n            </label>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"dateDocument\\\">Document's Date</label>\\r\\n        <div class=\\\"input-group\\\">\\r\\n          <input formControlName=\\\"dateDocument\\\" class=\\\"form-control\\\" placeholder=\\\"yyyy-mm-dd\\\" name=\\\"dp\\\" ngbDatepicker #dp=\\\"ngbDatepicker\\\">\\r\\n          <div class=\\\"input-group-append\\\">\\r\\n            <button class=\\\"btn btn-outline-secondary calendar\\\" (click)=\\\"dp.toggle()\\\" type=\\\"button\\\"></button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary btn-sm\\\" (click)=\\\"addEmailInput()\\\" style=\\\"float:right\\\">\\r\\n        <span class=\\\"glyphicon glyphicon-plus\\\"></span>+\\r\\n      </button>\\r\\n      <div formArrayName=\\\"emailInputs\\\" *ngFor=\\\"let input of form.get('emailInputs').controls; let i = index;\\\">\\r\\n        <div [formGroupName]=\\\"i\\\">\\r\\n          <label for=\\\"email\\\">Email {{ i + 1 }} </label>\\r\\n          <input formControlName=\\\"email\\\" class=\\\"form-control\\\" style=\\\"margin-bottom: 6px\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"onSubmit()\\\" [disabled]=\\\"! form.valid\\\">Notify</button>\\r\\n  </div>\\r\\n</div>\"","export default \"<div class=\\\"modal-header\\\">\\r\\n  <h5 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Order Items</h5>\\r\\n  <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"onClose()\\\">\\r\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n  </button>\\r\\n</div>\\r\\n<div class=\\\"modal-body\\\">\\r\\n  <table class=\\\"table table-striped\\\">\\r\\n    <thead>\\r\\n      <tr>\\r\\n        <th>#</th>\\r\\n        <th>Id</th>\\r\\n        <th>Name</th>\\r\\n        <th>Price</th>\\r\\n        <th>Creation Date</th>\\r\\n        <th>Last Modified Date</th>\\r\\n        <th>BarCode</th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n      <tr *ngFor=\\\"let item of orderItems; let i = index\\\">\\r\\n        <td>{{ i+1 }}</td>\\r\\n        <td>{{ item.productItem.id }}</td>\\r\\n        <td>{{ item.productItem.product.name }}</td>\\r\\n        <td>{{ item.productItem.product.price }} €</td>\\r\\n        <td>{{ item.createdDatetime }}</td>\\r\\n        <td>{{ item.lastModifiedDatetime }}</td>\\r\\n        <td>{{ item.productItem.barCode }}</td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n</div>\\r\\n<div class=\\\"modal-footer\\\">\\r\\n  <button class=\\\"btn btn-outline-dark\\\" (click)=\\\"onClose()\\\">Close</button>\\r\\n</div>\"","export default \"<form [formGroup]=\\\"form\\\" (submit)=\\\"onSave()\\\">\\n  <div class=\\\"modal-header\\\">\\n      <h5 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Edit Store</h5>\\n      <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"onClose(false)\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n      <div class=\\\"form-row\\\">\\n      <div class=\\\"form-group col-md-12\\\">\\n          <label for=\\\"Name\\\">Name</label>\\n          <input type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"form-control\\\" (blur)=onBlurStringFormControl($event)/>\\n        </div>\\n      </div>\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-md-3\\\">\\n          <label for=\\\"streetNumber\\\">Street Number</label>\\n          <input type=\\\"text\\\" formControlName=\\\"streetNumber\\\" class=\\\"form-control\\\"/>\\n        </div>\\n        <div class=\\\"form-group col-md-9\\\">\\n          <label for=\\\"street\\\">Street</label>\\n          <input type=\\\"text\\\" formControlName=\\\"streetName\\\" class=\\\"form-control\\\"/>\\n        </div>\\n      </div>\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-md-2\\\">\\n          <label for=\\\"zipCode\\\">Zip Code</label>\\n          <input type=\\\"text\\\" formControlName=\\\"zipCode\\\" class=\\\"form-control\\\"/>\\n        </div>\\n        <div class=\\\"form-group col-md-7\\\">\\n          <label for=\\\"city\\\">City</label>\\n          <input type=\\\"text\\\" formControlName=\\\"city\\\" class=\\\"form-control\\\" (blur)=onBlurStringFormControl($event)/>\\n        </div>\\n        <div class=\\\"form-group col-md-3\\\">\\n          <label for=\\\"country\\\">Country</label>\\n          <input type=\\\"text\\\" formControlName=\\\"country\\\" class=\\\"form-control\\\" (blur)=onBlurStringFormControl($event)/>\\n        </div>\\n      </div>\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-md-6\\\">\\n          <label for=\\\"phone\\\">Phone</label>\\n          <input type=\\\"text\\\" formControlName=\\\"phone\\\" class=\\\"form-control\\\"/>\\n        </div>\\n        <div class=\\\"form-group col-md-6\\\">\\n          <label for=\\\"email\\\">Email</label>\\n          <input type=\\\"text\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\"/>\\n        </div>\\n      </div>\\n\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-auto\\\">\\n        <ngb-alert *ngIf=\\\"errorMessage\\\" type=\\\"error\\\" [dismissible]=\\\"true\\\" (close)=\\\"errorMessage = null\\\">{{ errorMessage }}</ngb-alert>\\n      </div>\\n      <div class=\\\"col\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-info\\\">\\n            <span *ngIf=\\\"editInProgress\\\" class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\" aria-hidden=\\\"true\\\"></span>\\n          Save</button>\\n      </div>\\n      <div class=\\\"col\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"onClose(false)\\\">Cancel</button>\\n      </div>\\n    </div>\\n  </div>\\n</form>\"","export default \"<div>\\r\\n  <input #fileInput type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\"/>\\r\\n \\r\\n  <div class=\\\"drop-box\\\" ng2FileDrop\\r\\n       [ngClass]=\\\"{'dragover': isDropOver}\\\"\\r\\n       [uploader]=\\\"uploader\\\"\\r\\n       (fileOver)=\\\"fileOverAnother($event)\\\"\\r\\n       (click)=\\\"fileClicked()\\\">\\r\\n    <span class=\\\"drag-in-title\\\">Import or drag file here</span>\\r\\n    <span class=\\\"drag-over-title\\\">Drop the file</span>\\r\\n  </div>\\r\\n  <br>\\r\\n  <div *ngIf=\\\"result\\\">\\r\\n    <p>Upload ID : {{ result.id }}</p>\\r\\n    <p> | </p>\\r\\n    <p>Rows in file : {{ result.rowsInFile }}</p>\\r\\n    <p> | </p>\\r\\n    <p>Rows Processed : {{ result.rowsProcessed }}</p>\\r\\n    <p> | </p>\\r\\n    <p>Total Product Items : {{ result.productItems.length }}</p>\\r\\n    <div class=\\\"table-wrapper-scroll-y my-custom-scrollbar\\\">\\r\\n      <table class=\\\"table table-sm table-striped\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th class=\\\"th-sm\\\">Name</th>\\r\\n            <th class=\\\"th-sm\\\">Price</th>\\r\\n            <th class=\\\"th-sm\\\">BarCode</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let productItem of result.productItems\\\">\\r\\n            <td>{{ productItem.product.name }}</td>\\r\\n            <td>{{ productItem.product.price }} €</td>\\r\\n            <td>{{ productItem.barCode }}</td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n    <br>\\r\\n    <div class=\\\"row\\\" style=\\\"float:right\\\">\\r\\n      <div class=\\\"col-md-auto\\\">\\r\\n        <p>Are you sure you want to add the {{ result.productItems.length }} product items to the stock ?</p>\\r\\n      </div>\\r\\n      <div class=\\\"col col-lg-1\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onClickYes()\\\">Yes</button>\\r\\n      </div>\\r\\n      <div class=\\\"col col-lg-1\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"onClickNo()\\\">No</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n\\n    <div class=\\\"col\\\">\\n      <div class=\\\"card w-50 h-100 bg-light shadow-sm mb-3\\\">\\n        <div class=\\\"card-header\\\">Mysql Database Health</div>\\n        <div class=\\\"card-body py-1\\\">\\n          <div class=\\\"center\\\">\\n            <h5 *ngIf=\\\"dbHealth\\\" class=\\\"card-title\\\">\\n              <img *ngIf=\\\"dbHealth.isUp\\\" src=\\\"../../../assets/icon/statusGreen.png\\\">\\n              <img *ngIf=\\\"! dbHealth.isUp\\\" src=\\\"../../../assets/icon/statusRed.png\\\">\\n            </h5>\\n            <img *ngIf=\\\"! dbHealth\\\" src=\\\"../../../assets/icon/loadingGrey.gif\\\">\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"col\\\">\\n      <div class=\\\"card w-50 h-100 bg-light shadow-sm mb-3\\\">\\n        <div class=\\\"card-header\\\">Elasticsearch Health</div>\\n        <div class=\\\"card-body py-1\\\">\\n          <div class=\\\"center\\\">\\n            <img *ngIf=\\\"! elasticsearchHealth\\\" src=\\\"../../../assets/icon/loadingGrey.gif\\\">\\n            <h5 *ngIf=\\\"elasticsearchHealth\\\" class=\\\"card-title center\\\">\\n              <img *ngIf=\\\"getElasticsearchStatus() == 'G'\\\" src=\\\"../../../assets/icon/statusGreen.png\\\">\\n              <img *ngIf=\\\"getElasticsearchStatus() == 'Y'\\\" src=\\\"../../../assets/icon/statusYellow.png\\\">\\n              <img *ngIf=\\\"getElasticsearchStatus() == 'R'\\\" src=\\\"../../../assets/icon/statusRed.png\\\">\\n            </h5>\\n          </div>\\n          <div *ngIf=\\\"elasticsearchHealth\\\">\\n            <p *ngIf=\\\"elasticsearchHealth.clusterName\\\" style=\\\"font-size: 0.6em\\\" class=\\\"card-text\\\">Cluster Name : {{ elasticsearchHealth.clusterName }} <br> Number of Nodes : {{ elasticsearchHealth.nodesNb }} <br> Number of Data Nodes : {{ elasticsearchHealth.dataNodesNb }} <br> Primary Active Shards : {{ elasticsearchHealth.activePrimaryShardsNb }} <br> Active Shards : {{ elasticsearchHealth.activeShardsNb }} <br> Pending Tasks : {{ elasticsearchHealth.pendingTaskNb }}</p>\\n            <p *ngIf=\\\"elasticsearchHealth.error\\\" style=\\\"font-size: 0.6em\\\" class=\\\"card-text\\\">Error : {{ elasticsearchHealth.error }}</p>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"col\\\">\\n      <div class=\\\"card w-50 h-100 bg-light shadow-sm mb-3\\\">\\n        <div class=\\\"card-header\\\">System CPU count</div>\\n        <div class=\\\"card-body py-1\\\">\\n          <h1 *ngIf=\\\"cpuSystemCount\\\" class=\\\"card-title\\\">{{ cpuSystemCount.values[0] }}</h1>\\n          <img *ngIf=\\\"! cpuSystemCount\\\" class=\\\"center\\\" src=\\\"../../../assets/icon/loadingGrey.gif\\\">\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!--<div *ngIf=\\\"jvmMemoryMax\\\" class=\\\"col\\\">\\n      <div class=\\\"card w-50 h-75 bg-light shadow-sm mb-3\\\">\\n        <div class=\\\"card-header\\\">JVM Max Memory</div>\\n        <div class=\\\"card-body py-1\\\">\\n          <h1 class=\\\"card-title\\\">{{ (jvmMemoryMax.values[0] / 1000000).toFixed(0) }} MB</h1>\\n        </div>\\n      </div>\\n    </div>-->\\n\\n  </div>\\n  \\n  <div class=\\\"row mt-2\\\">\\n    \\n    <div class=\\\"col\\\">\\n      <div [ngClass]=\\\"(cpuUsage && cpuUsage.values[0] >= cpuUsageWarningLimit) ? 'card w-50 h-100 text-white bg-danger shadow-sm mb-3' : 'card w-50 h-100 bg-light shadow-sm mb-3'\\\">\\n        <div class=\\\"card-header\\\">Process CPU Usage</div>\\n        <div class=\\\"card-body py-1\\\">\\n          <h1 *ngIf=\\\"cpuUsage\\\" class=\\\"card-title\\\">{{ getPercentOfCpuUsage() }} %</h1>\\n          <img *ngIf=\\\"! cpuUsage\\\" class=\\\"center\\\" src=\\\"../../../assets/icon/loadingGrey.gif\\\">\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"col\\\">\\n      <div [ngClass]=\\\"(jvmMemoryUsed.values[0] >= memoryUsageWarningLimit) ? 'card w-50 h-100 text-white bg-danger shadow-sm mb-3' : 'card w-50 h-100 bg-light shadow-sm mb-3'\\\">\\n        <div class=\\\"card-header\\\">JVM Memory Used</div>\\n        <div class=\\\"card-body py-1\\\">\\n          <div *ngIf=\\\"jvmMemoryUsed && memoryUsageWarningLimit\\\">\\n            <h1 class=\\\"card-title\\\">{{ getPercentOfMemoryUsed() }} %</h1>\\n            <h3 class=\\\"card-subtitle\\\">{{ getMemoryUsedInMb() }} MB</h3>\\n          </div>\\n          <img *ngIf=\\\"! (jvmMemoryUsed && memoryUsageWarningLimit)\\\" class=\\\"center\\\" src=\\\"../../../assets/icon/loadingGrey.gif\\\">\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"col\\\">\\n      <div class=\\\"card w-50 h-100 bg-light shadow-sm mb-3\\\">\\n        <div class=\\\"card-header\\\">JVM Live Threads</div>\\n        <div class=\\\"card-body py-1\\\">\\n          <h1 *ngIf=\\\"jvmThreadLive\\\" class=\\\"card-title center\\\">{{ jvmThreadLive.values[0] }}</h1>\\n          <img *ngIf=\\\"! jvmThreadLive\\\" class=\\\"center\\\" src=\\\"../../../assets/icon/loadingGrey.gif\\\">\\n        </div>\\n      </div>\\n    </div>\\n    \\n  </div>\\n  \\n  <div class=\\\"row mt-2\\\">\\n    <div class=\\\"col\\\">\\n      <div class=\\\"card w-100 bg-light shadow-sm mb-3\\\">\\n        <div class=\\\"card-header\\\">Andybrook Log\\n          <button class=\\\"btn btn-outline-dark\\\" style=\\\"float:right\\\" (click)=\\\"getLogFile()\\\">GET</button>\\n        </div>\\n        <div *ngIf=\\\"logFile\\\" class=\\\"card-body\\\">\\n          <p class=\\\"card-text\\\">{{ logFile }}</p>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","export default \"<div class=\\\"table-responsive table-wrapper-scroll-y my-custom-scrollbar\\\">\\r\\n  <table class=\\\"table table-striped table-hover\\\">\\r\\n    <thead>\\r\\n      <tr>\\r\\n        <th>#</th>\\r\\n        <th>Name</th>\\r\\n        <th>Price</th>\\r\\n        <th>Qty</th>\\r\\n        <th>Total Price</th>\\r\\n        <th>Last Modified Date</th>\\r\\n        <th></th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n      <tr *ngFor=\\\"let item of orderItems | filter : 'name' : searchString; let i = index\\\"\\r\\n      (click)=\\\"setSelectedRow(i); onClickShowSelectedOrderItems(item.orderItems)\\\"\\r\\n        [class.active]=\\\"i == selectedRow\\\">\\r\\n        <td>{{ i+1 }}</td>\\r\\n        <td>{{ item.product.name }}</td>\\r\\n        <td>{{ item.product.price }} €</td>\\r\\n        <td\\r\\n          contenteditable=\\\"order.status !== 'CLOSED'\\\"\\r\\n          (blur)=\\\"onChangeOrderItemQuantity(item, $event)\\\">\\r\\n          {{ item.quantity }}\\r\\n        </td>\\r\\n        <td>{{ item.ttlPrice }} €</td>\\r\\n        <td>{{ item.lastModifiedDatetime | date:'medium' }}</td>\\r\\n        <td>\\r\\n          <button *ngIf=\\\"order.status !== 'CLOSED'\\\"\\r\\n          (click)=\\\"onClickDeleteOrderItemButton(i, item.orderItems)\\\"\\r\\n          [disabled]=\\\"deleteOrderItemInProgressArray[i]\\\"\\r\\n          class=\\\"btn btn-danger btn-sm\\\">\\r\\n              <span *ngIf=\\\"deleteOrderItemInProgressArray[i]\\\" class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\" aria-hidden=\\\"true\\\"></span>\\r\\n            Delete</button>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n</div>\\r\\n<br>\\r\\n<selected-order-items-list\\r\\n  [selectedOrderItems]=\\\"selectedOrderItems\\\"\\r\\n  [order]=\\\"order\\\"\\r\\n  (onDeleteOrderItemEvent)=\\\"deleteSingleOrderItem($event)\\\"\\r\\n></selected-order-items-list>\\r\\n\"","export default \"<div class=\\\"table-responsive table-wrapper-scroll-y my-custom-scrollbar\\\">\\r\\n  <table class=\\\"table table-striped table-hover table-sm\\\">\\r\\n    <thead>\\r\\n      <tr>\\r\\n        <th>#</th>\\r\\n        <th>Id</th>\\r\\n        <th>BarCode</th>\\r\\n        <th>Created Date</th>\\r\\n        <th>Last Modified Date</th>\\r\\n        <th></th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n      <tr *ngFor=\\\"let item of selectedOrderItems.values(); let i = index\\\">\\r\\n        <td>{{ i+1 }}</td>\\r\\n        <td>{{ item.productItem.id }}</td>\\r\\n        <td>{{ item.productItem.barCode }}</td>\\r\\n        <td>{{ item.createdDatetime }}</td>\\r\\n        <td>{{ item.lastModifiedDatetime }}</td>\\r\\n        <td>\\r\\n          <button\\r\\n          (click)=\\\"onClickDeleteOrderItemButton(i, item)\\\"\\r\\n          [disabled]=\\\"deleteOrderItemInProgressArray[i]\\\"\\r\\n          class=\\\"btn btn-danger btn-sm\\\">\\r\\n          <span *ngIf=\\\"deleteOrderItemInProgressArray[i]\\\" class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\" aria-hidden=\\\"true\\\"></span>\\r\\n            Delete</button>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n</div>\"","export default \"<div class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <h5>{{ order.aggregatedOrderInfo.name }}</h5>\\r\\n    </div>\\r\\n    <div class=\\\"col\\\">\\r\\n      <p>Comment : {{ order.aggregatedOrderInfo.comment }}</p>\\r\\n    </div>\\r\\n    <div class=\\\"col\\\">\\r\\n      <div style=\\\"overflow: hidden;\\\">\\r\\n        <p style=\\\"float: left\\\">Store : &nbsp;</p>\\r\\n        <p style=\\\"float: left; font-weight: bold\\\"> {{ order.aggregatedOrderInfo.store.name }}</p>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col\\\">\\r\\n      <div style=\\\"overflow: hidden;\\\">\\r\\n        <p style=\\\"float: left;\\\">Status :&nbsp;</p>\\r\\n        <p style=\\\"float: left; font-weight: bold\\\"> {{ order.aggregatedOrderInfo.status }}</p>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <div class=\\\"row justify-content-between\\\">\\r\\n          <div class=\\\"col-4\\\">\\r\\n              <button\\r\\n                class=\\\"btn btn-outline-primary\\\"\\r\\n                (click)=\\\"onClickAddOrderItem()\\\"\\r\\n                [disabled]=\\\"order.status === 'CLOSED'\\\"\\r\\n              >Add Order Item</button>\\r\\n          </div>\\r\\n          <div class=\\\"col-4\\\">\\r\\n              <button\\r\\n                style=\\\"float: right\\\"\\r\\n                class=\\\"btn btn-outline-info\\\"\\r\\n                (click)=\\\"onClickCloseOrder()\\\"\\r\\n                [disabled]=\\\"order.status === 'CLOSED'\\\"\\r\\n              >Close the order</button>\\r\\n          </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>    \\r\\n  <br>\\r\\n</div>\"","export default \"<div>\\r\\n  <show-order-header\\r\\n    [order]=\\\"order\\\"\\r\\n    (onCloseOrderEvent)=\\\"onCloseOrder()\\\"\\r\\n    (onAddOrderItemEvent)=\\\"onOrderItemAdded()\\\"\\r\\n  ></show-order-header>\\r\\n  <div class=\\\"card w-100 shadow-sm p-3 mb-5 bg-white rounded\\\">\\r\\n    <list-order-item *ngIf=\\\"order\\\"\\r\\n      [order]=\\\"order\\\"\\r\\n      [orderItems]=\\\"order.aggregatedOrderItems.values()\\\"\\r\\n      (onCreateOrderItemEvent)=\\\"onNewOrderItem($event)\\\"\\r\\n      (onChangeOrderItemEvent)=\\\"onChangeOrderItem($event)\\\"\\r\\n      (onDeleteOrderItemEvent)=\\\"onDeleteOrderItem($event)\\\"\\r\\n    ></list-order-item>\\r\\n  </div>\\r\\n  <div class=\\\"container=fluid\\\">\\r\\n    <button class=\\\"btn btn-primary\\\"\\r\\n        (click)=\\\"onClickBack()\\\"\\r\\n        style=\\\"float: right\\\"\\r\\n    >Back</button>\\r\\n  </div>\\r\\n</div>\"","export default \"<div class=\\\"table-responsive\\\">\\r\\n    <table class=\\\"table table-striped\\\">\\r\\n        <thead>\\r\\n            <tr>\\r\\n                <th>ID</th>\\r\\n                <th>Name</th>\\r\\n                <th>Store</th>\\r\\n                <th>Status</th>\\r\\n                <th>Total Product</th>\\r\\n                <th>Total Qty</th>\\r\\n                <th>Total Price</th>\\r\\n                <th>Creation Date</th>\\r\\n                <th>Last Modified Date</th>\\r\\n                <th>Close Date</th>\\r\\n                <th></th>\\r\\n                <th></th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n            <tr *ngFor=\\\"let order of ordersArray\\\">\\r\\n                <td>{{ order.id }}</td>\\r\\n                <td>{{ order.name }}</td>\\r\\n                <td>{{ order.store.name }}</td>\\r\\n                <td>{{ order.status }}</td>\\r\\n                <td>{{ order.productSize }}</td>\\r\\n                <td>{{ order.orderItemSize }}</td>\\r\\n                <td>{{ order.totalPrice }} €</td>\\r\\n                <td>{{ order.createdDatetime  | date:'medium' }}</td>\\r\\n                <td>{{ order.lastModifiedDatetime  | date:'medium' }}</td>\\r\\n                <td>{{ order.closeDatetime  | date:'medium' }}</td>\\r\\n                <td><button\\r\\n                    class=\\\"btn btn-success\\\"\\r\\n                    [routerLink]=\\\"['/order', order.id]\\\"\\r\\n                    >See</button>\\r\\n                </td>\\r\\n                <td><button\\r\\n                    *ngIf=\\\"order.status !== 'CLOSED'\\\"\\r\\n                    class=\\\"btn btn-info\\\"\\r\\n                    (click)=\\\"onClickCloseOrder(order)\\\"\\r\\n                    >Close Order</button>\\r\\n                    <button\\r\\n                        *ngIf=\\\"order.status === 'CLOSED'\\\"\\r\\n                        class=\\\"btn btn-primary\\\"\\r\\n                        (click)=\\\"onClickNotify(order)\\\"\\r\\n                    >Notify</button>\\r\\n                </td>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n</div>\\r\\n<div class=\\\"row justify-content-between\\\">\\r\\n    <div class=\\\"col-4\\\">\\r\\n        <ngb-pagination [collectionSize]=\\\"collectionSize\\\" [(page)]=\\\"page\\\" [pageSize]=\\\"pageSize\\\"></ngb-pagination>\\r\\n    </div>\\r\\n    <div class=\\\"col-2\\\">\\r\\n        <select class=\\\"custom-select\\\" [(ngModel)]=\\\"pageSize\\\">\\r\\n            <option [ngValue]=\\\"5\\\">5 items per page</option>\\r\\n            <option [ngValue]=\\\"10\\\">10 items per page</option>\\r\\n            <option [ngValue]=\\\"20\\\">20 items per page</option>\\r\\n        </select>\\r\\n    </div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"content-fluid\\\">\\r\\n    <div class=\\\"row justify-content-between\\\">\\r\\n        <div class=\\\"col-4\\\">\\r\\n            <button class=\\\"btn btn-primary\\\"\\r\\n                (click)=\\\"openCreateReportModal()\\\"\\r\\n            >New Order</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-6\\\">\\r\\n            <div class=\\\"row justify-content-end\\\">\\r\\n                <div class=\\\"col-6\\\">\\r\\n                    <input #searchString type=\\\"search\\\"\\r\\n                        class=\\\"form-control\\\"\\r\\n                        (keyup.enter)=\\\"onClickSearch(searchString.value)\\\"\\r\\n                        placeholder=\\\"Type to search order...\\\">\\r\\n                </div>\\r\\n                <div class=\\\"col-4\\\">\\r\\n                    <button\\r\\n                        [disabled]=\\\"searchButtonDisabled\\\"\\r\\n                        class=\\\"btn btn-info search_button\\\"\\r\\n                        (click)=\\\"onClickSearch(searchString.value)\\\"\\r\\n                    >Search</button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <br>\\r\\n    <h3 style=\\\"color: dimgray\\\" *ngIf=\\\"orders.length == 0\\\">{{ noOrdersFoundMessage }}</h3>\\r\\n    <div *ngIf=\\\"orders.length > 0\\\" class=\\\"card w-100 shadow-sm p-3 mb-5 bg-white rounded\\\">\\r\\n        <list-orders\\r\\n            [orders]=\\\"orders\\\"\\r\\n        ></list-orders>\\r\\n    </div>\\r\\n</div>\"","export default \"<div class=\\\"container\\\">\\r\\n  <upload-product-file-modal></upload-product-file-modal>\\r\\n</div>\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvYWRtaW4vYWRtaW4tcGFuZWwvYWRtaW4tcGFuZWwuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { AdminSettingService } from '../../service/admin-setting-service'\r\nimport { AdminSetting } from 'src/app/model/admin/AdminSetting';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Subject } from 'rxjs'\r\nimport { debounceTime } from 'rxjs/operators'\r\nimport { RGB } from 'src/app/model/RGB';\r\n\r\n@Component({\r\n  selector: 'admin-panel',\r\n  templateUrl: './admin-panel.component.html',\r\n  styleUrls: ['./admin-panel.component.css']\r\n})\r\nexport class AdminPanelComponent implements OnInit {\r\n\r\n  private _success = new Subject<string>()\r\n  private adminSetting: AdminSetting\r\n  private headerTableBackgroundColor: RGB\r\n  private headerTableTextColor: RGB\r\n  adminForm: FormGroup;\r\n  submitted = false;\r\n  saveButtonDisabled = true\r\n  alertMessage: string\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n              private adminSettingService: AdminSettingService) { }\r\n\r\n  ngOnInit() {\r\n    this.adminForm = this.formBuilder.group({\r\n      notification: [],\r\n      itemToShow: ['', Validators.min(1)],\r\n      emails: ['', [Validators.required]]\r\n    });\r\n\r\n    this.adminSetting = new AdminSetting()\r\n    this.adminSettingService.getAdminSetting(this.adminSetting)\r\n        .subscribe(data => {\r\n          this.adminSetting.emails = data.emails;\r\n          this.adminSetting.itemToShow = data.loadItemsLimit;\r\n          this.adminSetting.notifyOnCloseReport = data.notificationPolicy.onCloseReport;\r\n\r\n          this.adminForm.setValue({\r\n            notification: this.adminSetting.notifyOnCloseReport,\r\n            emails: this.adminSetting.emails.join(),\r\n            itemToShow: this.adminSetting.itemToShow\r\n      })\r\n    })\r\n\r\n    this._success.subscribe((msg) => this.alertMessage = msg);\r\n    this._success.pipe(debounceTime(5000)).subscribe(() => this.alertMessage = null);\r\n  }\r\n\r\n  public changeAlertMessage() {\r\n    this._success.next(\"Setting saved successully\")\r\n  }\r\n\r\n  settingChanged() {\r\n    this.saveButtonDisabled = false\r\n  }\r\n\r\n  settingSaved(successfully: boolean) {\r\n    this.saveButtonDisabled = true\r\n    this.changeAlertMessage()\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() { return this.adminForm.controls; }\r\n\r\n  onSubmit() {\r\n      this.submitted = true;\r\n      if (this.adminForm.invalid) {\r\n          return;\r\n      }\r\n      let values = this.adminForm.value;\r\n      this.adminSetting.emails = values.emails.split(\",\");\r\n      this.adminSetting.itemToShow = values.itemToShow;\r\n      this.adminSetting.notifyOnCloseReport = values.notification;\r\n      this.adminSettingService.updateAdminSetting(this.adminSetting).subscribe(data => {\r\n        this.adminSetting.emails = data.emails;\r\n        this.adminSetting.itemToShow = data.loadItemsLimit;\r\n        this.adminSetting.notifyOnCloseReport = data.notificationPolicy.onCloseReport;\r\n        this.settingSaved(true);\r\n    })\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvYWRtaW4vbG9nZ2VkLXVzZXJzL2xvZ2dlZC11c2Vycy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from '../../service/login-service';\nimport {LoggedUser} from \"../../model/admin/user/LoggedUser\"\nimport {ModalBuilder} from \"../../common-components/modal-builder\"\nimport {InfoModalComponent} from \"../../modal/info-modal/info-modal.component\"\n\n@Component({\n  selector: 'logged-users',\n  templateUrl: './logged-users.component.html',\n  styleUrls: ['./logged-users.component.css']\n})\nexport class LoggedUsersComponent implements OnInit {\n\n  private loggedUsers: LoggedUser[] = []\n\n  constructor(private loginService: LoginService, private modalBuilder: ModalBuilder) { }\n\n  ngOnInit() {\n    this.getLoggedUsers();\n\n  }\n\n  private getLoggedUsers(): void {\n    this.loginService.getLoggedUsers().subscribe(\n      data => {\n        alert(JSON.stringify(data))\n        for (let user of data) {\n          this.loggedUsers.push(LoggedUser.fromJson(user));\n        }\n      }, error => {\n        let modalRef = this.modalBuilder.open(InfoModalComponent)\n        modalRef.componentInstance.title = 'Error';\n        modalRef.componentInstance.message = 'Cannot load the logged users : ' + JSON.stringify(error);\n      }\n    )\n  }\n\n}\n","export default \"a {\\r\\n color: gray\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9hcHAtbmF2LWJhci9hcHAtbmF2LWJhci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0NBQ0M7QUFDRCIsImZpbGUiOiJhcHAvYXBwLW5hdi1iYXIvYXBwLW5hdi1iYXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImEge1xyXG4gY29sb3I6IGdyYXlcclxufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { LoginService } from '../service/login-service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-app-nav-bar',\r\n  templateUrl: './app-nav-bar.component.html',\r\n  styleUrls: ['./app-nav-bar.component.css']\r\n})\r\nexport class AppNavBarComponent implements OnInit {\r\n\r\n  isNavbarCollapsed = true;\r\n  isLoggedIn$: Observable<boolean>;     \r\n\r\n  constructor(private loginService: LoginService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.isLoggedIn$ = this.loginService.getUserLoggedObservable();\r\n  }\r\n\r\n  onLogout() {\r\n    this.loginService.logout().subscribe(\r\n      data => alert(JSON.stringify(data)),\r\n      error => {\r\n        alert(JSON.stringify(error))\r\n      }\r\n    )\r\n    this.router.navigateByUrl('/');\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvYXBwLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  \r\n}\r\n\r\n\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http'\r\nimport { Routes, RouterModule } from '@angular/router'\r\nimport { BrowserAnimationsModule, NoopAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AppComponent } from './app.component';\r\nimport { ListOrderItemComponent } from './order-panel/list-order-item/list-order-item.component';\r\nimport { OrdersManagerComponent } from './orders-manager-panel/orders-manager/orders-manager.component';\r\nimport { ShowOrderComponent } from './order-panel/show-order/show-order.component';\r\nimport { OrderService } from './service/order-service';\r\nimport { HttpService } from './service/http-service';\r\nimport { AdminSettingService } from './service/admin-setting-service';\r\nimport { OrderHeaderComponent } from './order-panel/show-order-header/show-order-header.component';\r\nimport { ListOrdersComponent } from './orders-manager-panel/list-orders/list-orders.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\r\nimport { SharedModule } from './shared.module';\r\nimport { CustomerPanelComponent } from './customer/customer-panel/customer-panel.component';\r\nimport { NotificationService } from './service/notification-service';\r\nimport { AppNavBarComponent } from './app-nav-bar/app-nav-bar.component';\r\nimport { ConfirmModalComponent } from './modal/confirm-modal/confirm-modal-component';\r\nimport { ModalBuilder } from './common-components/modal-builder';\r\nimport { CreateOrderModalComponent } from './modal/create-order-modal/create-order-modal.component';\r\nimport { CustomerService } from './service/customer-service';\r\nimport { InfoModalComponent } from './modal/info-modal/info-modal.component';\r\nimport { ProductService } from './service/product-service';\r\nimport { ShowOrderItemsModalComponent } from './modal/show-order-items-modal/show-order-items-modal.component';\r\nimport { SelectedOrderItemsListComponent } from './order-panel/selected-order-items-list/selected-order-items-list.component';\r\nimport { DeleteOrderItemsModalComponent } from './modal/delete-order-items-modal/delete-order-items-modal.component';\r\nimport { AddOrderItemModalComponent } from './modal/add-order-item-modal/add-order-item-modal.component';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { ListCustomerComponent } from './customer/list-customer/list-customer.component';\r\nimport { CustomerInfoComponent } from './customer/customer-info/customer-info.component';\r\nimport { CustomerHeaderComponent } from './customer/customer-header/customer-header.component';\r\nimport { NewCustomerComponent } from './customer/new-customer/new-customer.component';\r\nimport { FileUploadModule } from 'ng2-file-upload';\r\nimport { OrderNotificationModalComponent } from './modal/order-notification-modal/order-notification-modal.component';\r\nimport { UploadProductFileModalComponent } from './modal/upload-product-file-modal/upload-product-file-modal.component';\r\nimport { ProductsPanelComponent } from './product/products-panel/products-panel.component';\r\nimport { LoginComponent } from './authentication/login/login.component';\r\nimport { LoginService } from './service/login-service';\r\nimport { httpInterceptorProviders } from './http-interceptor/Interceptors-manager';\r\nimport { DashboardComponent } from './monitoring/dashboard/dashboard.component';\r\nimport { MonitoringService } from './service/monitoring-service';\r\nimport { StoreDashboardComponent } from './customer/store/store-dashboard/store-dashboard.component';\r\nimport { StoreService } from './service/store-service';\r\nimport { StoreOrdersComponent } from './customer/store/store-orders/store-orders.component';\r\nimport { StoreInfoComponent } from './customer/store/store-info/store-info.component';\r\nimport { OrdersStatisticService } from './service/orders-statistic-service';\r\nimport { OpenClosedOrdersCounterComponent } from './customer/store/open-closed-orders-counter/open-closed-orders-counter.component';\r\nimport { EditStoreInfoModalComponent } from './modal/store/edit-store-info-modal/edit-store-info-modal.component';\r\nimport { ToastComponent } from './common-components/toast/toast.component';\r\nimport { ToastBuilder } from './common-components/toast/toast-builder';\r\nimport { ChartsModule } from 'ng2-charts';\r\nimport { BarChartComponent } from './common-components/chart/bar-chart/bar-chart.component';\r\nimport { AmountOrdersChartComponent } from './customer/store/amount-orders-chart/amount-orders-chart.component';\r\nimport { LoggedUsersComponent } from './admin/logged-users/logged-users.component';\r\n\r\nconst appRoutes: Routes = [\r\n  { path: '', component: LoginComponent},\r\n  { path: 'login', component: LoginComponent},\r\n  { path: 'logged-users', component: LoggedUsersComponent},\r\n  { path: 'orders', component: OrdersManagerComponent},\r\n  { path: 'order/:id', component: ShowOrderComponent },\r\n  { path: 'admin', component: AdminPanelComponent },\r\n  { path: 'new-customer/:id', component: NewCustomerComponent },\r\n  { path: 'customer-dashboard', component: CustomerPanelComponent },\r\n  { path: 'store/:id', component: StoreDashboardComponent},\r\n  { path: 'products', component: ProductsPanelComponent },\r\n  { path: 'monitoring', component: DashboardComponent}\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ListOrderItemComponent,\r\n    OrdersManagerComponent,\r\n    ShowOrderComponent,\r\n    OrderHeaderComponent,\r\n    ListOrdersComponent,\r\n    AdminPanelComponent,\r\n    CustomerPanelComponent,\r\n    AppNavBarComponent,\r\n    ConfirmModalComponent,\r\n    CreateOrderModalComponent,\r\n    InfoModalComponent,\r\n    ShowOrderItemsModalComponent,\r\n    SelectedOrderItemsListComponent,\r\n    DeleteOrderItemsModalComponent,\r\n    AddOrderItemModalComponent,\r\n    ListCustomerComponent,\r\n    StoreOrdersComponent,\r\n    CustomerInfoComponent,\r\n    CustomerHeaderComponent,\r\n    NewCustomerComponent,\r\n    OrderNotificationModalComponent,\r\n    UploadProductFileModalComponent,\r\n    ProductsPanelComponent,\r\n    LoginComponent,\r\n    DashboardComponent,\r\n    StoreDashboardComponent,\r\n    StoreInfoComponent,\r\n    OpenClosedOrdersCounterComponent,\r\n    EditStoreInfoModalComponent,\r\n    ToastComponent,\r\n    BarChartComponent,\r\n    AmountOrdersChartComponent,\r\n    LoggedUsersComponent\r\n  ],\r\n  entryComponents: [\r\n    CreateOrderModalComponent,\r\n    ConfirmModalComponent,\r\n    InfoModalComponent,\r\n    ShowOrderItemsModalComponent,\r\n    DeleteOrderItemsModalComponent,\r\n    AddOrderItemModalComponent,\r\n    EditStoreInfoModalComponent,\r\n    OrderNotificationModalComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n    NoopAnimationsModule,\r\n    ReactiveFormsModule,\r\n    NgbModule,\r\n    ChartsModule,\r\n    SharedModule,\r\n    FileUploadModule,\r\n    RouterModule.forRoot(appRoutes)\r\n  ],\r\n  providers: [\r\n    OrderService,\r\n    OrdersStatisticService,\r\n    HttpService,\r\n    AdminSettingService,\r\n    NotificationService,\r\n    ModalBuilder,\r\n    ToastBuilder,\r\n    CustomerService,\r\n    StoreService,\r\n    ProductService,\r\n    CookieService,\r\n    LoginService,\r\n    MonitoringService,\r\n    httpInterceptorProviders,\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvYXV0aGVudGljYXRpb24vbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators, FormControl, FormArray } from '@angular/forms';\nimport { LoginRequest } from '../../model/request/login/LoginRequest';\nimport { LoginService } from '../../service/login-service';\nimport { Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n@Component({\n  selector: 'login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n  invalidLogin: boolean = false;\n  private _errorMessage: string\n  private _error = new Subject<string>()\n  constructor(private formBuilder: FormBuilder, private router: Router, private loginService: LoginService) { }\n\n  ngOnInit() {\n    this._error.subscribe((msg) => this._errorMessage = msg);\n    this._error.pipe(debounceTime(2000)).subscribe(() => this._errorMessage = null);\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.compose([Validators.required])],\n      password: ['', Validators.required]\n    });\n  }\n\n  onSubmit() {\n    if (this.loginForm.valid) {\n      let username = this.loginForm.get(\"username\").value;\n      let loginRequest = new LoginRequest(username, this.loginForm.get(\"password\").value)\n      this.loginService.authenticate(loginRequest).subscribe(\n        data => {\n          this.router.navigateByUrl('/orders');\n          this.loginService.setUserLoggedIn(true, username);  \n        },\n        error => {\n          this.changeErrorMessage(\"Invalid credentials\");\n        }\n      )\n    }\n  }\n\n  private changeErrorMessage(errorMessage: string) {\n    this._error.next(errorMessage);\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvY29tbW9uLWNvbXBvbmVudHMvY2hhcnQvYmFyLWNoYXJ0L2Jhci1jaGFydC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { ChartOptions, ChartType, ChartDataSets } from 'chart.js';\nimport { Label } from 'ng2-charts';\nimport * as pluginDataLabels from 'chartjs-plugin-datalabels';\n\n@Component({\n  selector: 'bar-chart',\n  templateUrl: './bar-chart.component.html',\n  styleUrls: ['./bar-chart.component.css']\n})\nexport class BarChartComponent implements OnChanges {\n\n  //public barChartLabels: Label[] = ['2006', '2007', '2008', '2009', '2010', '2011', '2012'];\n  @Input() barChartLabels: Label[] = [];\n  @Input() barChartData: ChartDataSets[] = []\n  @Input() withBarLegend: boolean = false\n  private isReady: boolean = false\n\n  constructor() { }\n\n  ngOnChanges() {\n    this.isReady = true\n  }\n\n  public barChartOptions: ChartOptions = {\n    responsive: true,\n    // We use these empty structures as placeholders for dynamic theming.\n    scales: { xAxes: [{}], yAxes: [{}] },\n    plugins: {\n      datalabels: {\n        anchor: 'end',\n        align: 'end',\n      }\n    }\n  };\n\n  public barChartColors: Array<any> = [\n    {\n      backgroundColor: ['DarkTurquoise']\n    }\n]\n  \n  public barChartType: ChartType = 'bar';\n  public barChartLegend = this.withBarLegend;\n  public barChartPlugins = [pluginDataLabels];\n\n  /*public barChartData: ChartDataSets[] = [\n    { data: [65, 59, 80, 81, 56, 55, 40], label: 'Series A' },\n    { data: [28, 48, 40, 19, 86, 27, 90], label: 'Series B' }\n  ];*/\n\n  // events\n  public chartClicked({ event, active }: { event: MouseEvent, active: {}[] }): void {\n    console.log(event, active);\n  }\n\n  public chartHovered({ event, active }: { event: MouseEvent, active: {}[] }): void {\n    console.log(event, active);\n  }\n}\n","import { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Component } from '@angular/compiler/src/core';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class ModalBuilder {\r\n\r\n    constructor(private modalService: NgbModal) {\r\n\r\n    }\r\n\r\n    open(component: any): NgbModalRef  {\r\n        return this.modalService.open(component)\r\n    }\r\n\r\n    openCenteredLargeModal(component: any): NgbModalRef {\r\n        return this.modalService.open(component, {size: 'lg', centered: true})\r\n    }\r\n\r\n    openCenteredModal(component: any): NgbModalRef {\r\n        return this.modalService.open(component, {centered: true})\r\n    }\r\n}","import {Pipe, PipeTransform, Injectable } from '@angular/core'\r\n\r\n@Pipe({\r\n    name: 'filter',\r\n})\r\n@Injectable()\r\nexport class FilterPipe implements PipeTransform {\r\n\r\n    transform(items: IterableIterator<any>, field: string, value: string): Array<any> {\r\n        if (!items) {\r\n            return new Array[0]\r\n        }\r\n        let array = Array.from(items)\r\n        if (!field || !value) {\r\n            return array\r\n        }\r\n        return array.filter(\r\n            singleTerm => singleTerm['product'][field].toLowerCase().includes(value.toLowerCase())\r\n        )\r\n    }\r\n}","import { ToastService } from \"../../service/toast.service\";\r\nimport { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\r\nexport class ToastBuilder {\r\n\r\n    title = 'ng-bootstrap-demo';\r\n\r\n    constructor(private toastService: ToastService) {}\r\n \r\n    showStandard() {\r\n        this.toastService.show('I am a standard toast', {\r\n            delay: 2000,\r\n            autohide: true\r\n        });\r\n    }\r\n\r\n    showSuccess() {\r\n        this.toastService.show('I am a success toast', {\r\n            classname: 'bg-success text-light',\r\n            delay: 2000 ,\r\n            autohide: true,\r\n            headertext: 'Toast Header'\r\n        });\r\n    }\r\n\r\n    showError() {\r\n        this.toastService.show('I am a success toast', {\r\n            classname: 'bg-danger text-light',\r\n            delay: 2000 ,\r\n            autohide: true,\r\n            headertext: 'Error!!!'\r\n        });\r\n    }\r\n\r\n    showCustomToast(customTpl) {\r\n        this.toastService.show(customTpl, {\r\n            classname: 'bg-info text-light',\r\n            delay: 3000,\r\n            autohide: true\r\n        });\r\n    }\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvY29tbW9uLWNvbXBvbmVudHMvdG9hc3QvdG9hc3QuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, TemplateRef } from '@angular/core';\nimport { ToastService } from '../../service/toast.service';\n\n@Component({\n  selector: 'toast',\n  templateUrl: './toast.component.html',\n  styleUrls: ['./toast.component.css'],\n  host: {'[class.ngb-toasts]': 'true'}\n})\nexport class ToastComponent {\n\n  constructor(public toastService: ToastService) {}\n \n  isTemplate(toast) {\n    return toast.textOrTpl instanceof TemplateRef;\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvY3VzdG9tZXIvY3VzdG9tZXItaGVhZGVyL2N1c3RvbWVyLWhlYWRlci5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'customer-header',\r\n  templateUrl: './customer-header.component.html',\r\n  styleUrls: ['./customer-header.component.css']\r\n})\r\nexport class CustomerHeaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \"label {\\r\\n    font-weight: bold;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9jdXN0b21lci9jdXN0b21lci1pbmZvL2N1c3RvbWVyLWluZm8uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGlCQUFpQjtBQUNyQiIsImZpbGUiOiJhcHAvY3VzdG9tZXIvY3VzdG9tZXItaW5mby9jdXN0b21lci1pbmZvLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJsYWJlbCB7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxufSJdfQ== */\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Store } from '../../model/Store';\r\n\r\n@Component({\r\n  selector: 'customer-info',\r\n  templateUrl: './customer-info.component.html',\r\n  styleUrls: ['./customer-info.component.css']\r\n})\r\nexport class CustomerInfoComponent implements OnInit {\r\n\r\n  @Input() store: Store\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvY3VzdG9tZXIvY3VzdG9tZXItcGFuZWwvY3VzdG9tZXItcGFuZWwuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { AggregatedOrder } from 'src/app/model/AggregatedOrder';\r\nimport { OrderService } from 'src/app/service/order-service';\r\nimport { CustomerService } from 'src/app/service/customer-service';\r\nimport { Store } from '../../model/Store';\r\n\r\n@Component({\r\n  selector: 'customer-panel',\r\n  templateUrl: './customer-panel.component.html',\r\n  styleUrls: ['./customer-panel.component.css']\r\n})\r\nexport class CustomerPanelComponent implements OnInit {\r\n\r\n  store: Store\r\n  orders: AggregatedOrder[] = []\r\n\r\n  constructor(private customerService: CustomerService) { }\r\n\r\n  ngOnInit() {\r\n    \r\n  }\r\n\r\n  onStoreSelected(event) {\r\n    this.store = event;\r\n  }\r\n\r\n  onUpdateStore(event) {\r\n    this.customerService.getCustomer(event.id).subscribe(\r\n      data => {\r\n        this.store = Store.fromJson(data);\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","export default \"/* Scroll Bar customer list table */\\r\\n.my-custom-scrollbar {\\r\\n    position: relative;\\r\\n    max-height: 750px;\\r\\n    overflow: auto;\\r\\n  }\\r\\n.table-wrapper-scroll-y {\\r\\n    display: block;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9jdXN0b21lci9saXN0LWN1c3RvbWVyL2xpc3QtY3VzdG9tZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxtQ0FBbUM7QUFDbkM7SUFDSSxrQkFBa0I7SUFDbEIsaUJBQWlCO0lBQ2pCLGNBQWM7RUFDaEI7QUFFQTtJQUNFLGNBQWM7RUFDaEIiLCJmaWxlIjoiYXBwL2N1c3RvbWVyL2xpc3QtY3VzdG9tZXIvbGlzdC1jdXN0b21lci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyogU2Nyb2xsIEJhciBjdXN0b21lciBsaXN0IHRhYmxlICovXHJcbi5teS1jdXN0b20tc2Nyb2xsYmFyIHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIG1heC1oZWlnaHQ6IDc1MHB4O1xyXG4gICAgb3ZlcmZsb3c6IGF1dG87XHJcbiAgfVxyXG4gIFxyXG4gIC50YWJsZS13cmFwcGVyLXNjcm9sbC15IHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gIH0iXX0= */\"","import { Component, OnInit, EventEmitter, Output, Input } from '@angular/core';\r\nimport { CustomerService } from 'src/app/service/customer-service';\r\nimport { Store } from '../../model/Store';\r\n\r\n@Component({\r\n  selector: 'list-customer',\r\n  templateUrl: './list-customer.component.html',\r\n  styleUrls: ['./list-customer.component.css']\r\n})\r\nexport class ListCustomerComponent implements OnInit {\r\n\r\n  @Output() onStoreSelected = new EventEmitter<Store>()\r\n  @Input() store: Store\r\n  stores: Store[] = [];\r\n\r\n  constructor(private customerService: CustomerService) { }\r\n\r\n  ngOnInit() {\r\n    this.getStoresList(null);\r\n  }\r\n\r\n  private getStoresList(searchInput: string) {\r\n    let obs;\r\n    this.stores = [];\r\n    if (searchInput === null || searchInput.length == 0) {\r\n      obs = this.customerService.getAllCustomers();\r\n    } else {\r\n      obs = this.customerService.searchCustomerByIdOrNames(searchInput);\r\n    }\r\n    obs.subscribe(\r\n      data => {\r\n        for (let store of data) {\r\n          this.stores.push(Store.fromJson(store));\r\n        }\r\n      },\r\n      error => {\r\n        this.stores = [];\r\n      }\r\n    )\r\n  }\r\n\r\n  onClickStore(store: Store) {\r\n    this.onStoreSelected.emit(store);\r\n  }\r\n\r\n  onClickSearch(value: string) {\r\n    this.getStoresList(value.trim());\r\n  }\r\n}\r\n","export default \".ng-invalid:not(form)  {\\r\\n    border-left: 5px solid #a94442; /* red */\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9jdXN0b21lci9uZXctY3VzdG9tZXIvbmV3LWN1c3RvbWVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSw4QkFBOEIsRUFBRSxRQUFRO0FBQzVDIiwiZmlsZSI6ImFwcC9jdXN0b21lci9uZXctY3VzdG9tZXIvbmV3LWN1c3RvbWVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubmctaW52YWxpZDpub3QoZm9ybSkgIHtcclxuICAgIGJvcmRlci1sZWZ0OiA1cHggc29saWQgI2E5NDQ0MjsgLyogcmVkICovXHJcbn0iXX0= */\"","import { Component, OnInit, Input, OnChanges, SimpleChanges, Output, EventEmitter } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { CustomerService } from 'src/app/service/customer-service';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, map } from 'rxjs/operators';\r\nimport { AddOrUpdateCustomerReq } from 'src/app/model/request/customer/AddOrUpdateCustomerReq';\r\nimport { ModalBuilder } from 'src/app/common-components/modal-builder';\r\nimport { InfoModalComponent } from 'src/app/modal/info-modal/info-modal.component';\r\nimport { StringUtil } from 'src/app/util/StringUtil';\r\nimport { Address } from 'src/app/model/Address';\r\nimport { Store } from '../../model/Store';\r\n\r\n@Component({\r\n  selector: 'new-customer',\r\n  templateUrl: './new-customer.component.html',\r\n  styleUrls: ['./new-customer.component.css']\r\n})\r\nexport class NewCustomerComponent implements OnInit, OnChanges {\r\n\r\n  @Input() store: Store\r\n  @Output() onUpdateStoreEvent = new EventEmitter<number>();\r\n\r\n  form: FormGroup\r\n  inputOwnerName: string\r\n  ownerNames: string[] = []\r\n  ownerIdMapByName: Map<string, number>\r\n  errorMessage: string\r\n  storesOfSelectedOwner: Store[] = []\r\n  typeAlert: string = 'success'\r\n  private _error = new Subject<string>()\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n              private modalBuilder: ModalBuilder,\r\n              private customerService: CustomerService) {\r\n    this.ownerIdMapByName = new Map();\r\n    this.initForm();\r\n    this._error.subscribe((msg) => this.errorMessage = msg);\r\n    this._error.pipe(debounceTime(4000)).subscribe(() => this.errorMessage = null);\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (this.store != null) {\r\n      this.fillForm();\r\n    }\r\n  }\r\n\r\n  private initForm() {\r\n    this.loadOwners();\r\n    this.form = this.formBuilder.group({\r\n      ownerAutoComplete: '',\r\n      ownerFirstName: '',\r\n      ownerLastName: '',\r\n      ownerEmail: ['', Validators.email],\r\n      storeName: ['', Validators.required],\r\n      storeStreetNumber: '',\r\n      storeStreetName: '',\r\n      storeZipCode: '',\r\n      storeCity: '',\r\n      storeCountry: '',\r\n      storePhone: '',\r\n      storeEmail: ['', Validators.email]\r\n    });\r\n    if (this.store != null) {\r\n      this.fillForm();\r\n    }\r\n  }\r\n\r\n  private fillForm() {\r\n    const store = this.store;\r\n    this.form.setValue({\r\n      ownerAutoComplete: this.getStringValue(store.owner.compagnyName),\r\n      ownerFirstName: this.getStringValue(store.owner.firstName),\r\n      ownerLastName: this.getStringValue(store.owner.lastName),\r\n      ownerEmail: this.getStringValue(store.owner.email),\r\n      storeName: this.getStringValue(store.name),\r\n      storeStreetNumber: this.getStringValue(store.address.streetNumber),\r\n      storeStreetName: this.getStringValue(store.address.streetName),\r\n      storeZipCode: this.getNumericValue(store.address.zipCode),\r\n      storeCity: this.getStringValue(store.address.city),\r\n      storeCountry: this.getStringValue(store.address.country),\r\n      storePhone: this.getStringValue(store.phone),\r\n      storeEmail: this.getStringValue(store.email)\r\n    })\r\n  }\r\n\r\n  private getStringValue(value: string): string {\r\n    return value.length > 0 || value == 'null' ? value : \"\";\r\n  }\r\n\r\n  private getNumericValue(value: number): string {\r\n    return value <= 0 ? \"\" : value.toString();\r\n  }\r\n\r\n  private loadOwners() {\r\n    this.customerService.getAllOwnersIdsAndNames().subscribe(\r\n      data => {\r\n        for (let owner of data) {\r\n          this.ownerIdMapByName.set(owner.second, owner.first);\r\n          this.ownerNames.push(owner.second);\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  onBlurStringFormControl(event) {\r\n    event.srcElement.value = StringUtil.capitalFirstLetter(event.srcElement.value);\r\n  }\r\n\r\n  onBlurLowcaseStringFormControl(event) {\r\n    event.srcElement.value = event.srcElement.value.toLowerCase();\r\n  }\r\n\r\n  search = (text$: Observable<string>) =>\r\n    text$.pipe(\r\n      debounceTime(200),\r\n      distinctUntilChanged(),\r\n      map(term => term.length < 1 ? []\r\n        : this.ownerNames.filter(v => v.toLowerCase().indexOf(term.toLowerCase()) > -1).slice(0, 10))\r\n  )\r\n\r\n  onBlurOwnerAutoComplete() {\r\n    let ownerNameSelected = this.form.controls.ownerAutoComplete.value;\r\n    let ownerId = this.ownerIdMapByName.get(ownerNameSelected);\r\n    if (ownerId != null) {\r\n      this.customerService.getStoresOfOwner(ownerId).subscribe(\r\n        data => {\r\n          for (let store of data) {\r\n            this.storesOfSelectedOwner.push(Store.fromJson(store));\r\n          }\r\n        }, error => {\r\n          const modalRef = this.modalBuilder.open(InfoModalComponent);\r\n          modalRef.componentInstance.title = '';\r\n          modalRef.componentInstance.message = 'Cannot load the stores of the owner : ' + ownerNameSelected; \r\n        }\r\n      )\r\n    } else {\r\n      this.storesOfSelectedOwner = [];\r\n    }\r\n  }\r\n\r\n  private changeAlertMessage(type: string, errorMessage: string) {\r\n    this.typeAlert = type;\r\n    this._error.next(errorMessage);\r\n  }\r\n\r\n  onSubmit() {\r\n    let controls = this.form.controls;\r\n    if (this.form.valid) {\r\n      let ownerId = this.ownerIdMapByName.get(controls.ownerAutoComplete.value);\r\n      let req = new AddOrUpdateCustomerReq(ownerId, controls.storeName.value);\r\n      if (this.store != null) {\r\n        req.storeId = this.store.id;\r\n      }\r\n      req.ownerCompagnyName = controls.ownerAutoComplete.value;\r\n      req.ownerFirstName = controls.ownerFirstName.value;\r\n      req.ownerLastName = controls.ownerLastName.value;\r\n      req.ownerEmail = controls.ownerEmail.value;\r\n      req.storeName = controls.storeName.value;\r\n      req.storeEmail = controls.storeEmail.value;\r\n      req.storePhone = controls.storePhone.value;\r\n      req.storeAddress = new Address(controls.storeStreetNumber.value, controls.storeStreetName.value,\r\n                                controls.storeZipCode.value, controls.storeCity.value, controls.storeCountry.value);\r\n\r\n      this.sendCustomerRequest(req, this.store != null)\r\n    } else {\r\n      this.changeAlertMessage(\"danger\", \"Form not valid.\");\r\n    }\r\n  }\r\n\r\n  private sendCustomerRequest(req: AddOrUpdateCustomerReq, isUpdateRequest: boolean) {\r\n    let observable = isUpdateRequest ? this.customerService.updateCustomer(req) : this.customerService.addCustomer(req); \r\n    observable.subscribe(\r\n      data => {\r\n        this.changeAlertMessage(\"success\", \"Store successfully saved\");\r\n        this.onUpdateStoreEvent.emit(this.store.id);\r\n      },\r\n      error => {\r\n        this.changeAlertMessage(\"danger\", error.error);\r\n      }\r\n    );\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvY3VzdG9tZXIvc3RvcmUvYW1vdW50LW9yZGVycy1jaGFydC9hbW91bnQtb3JkZXJzLWNoYXJ0LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { OrdersStatisticService } from '../../../service/orders-statistic-service';\r\nimport { Label } from 'ng2-charts';\r\nimport { ChartDataSets } from 'chart.js';\r\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'amount-orders-chart',\r\n  templateUrl: './amount-orders-chart.component.html',\r\n  styleUrls: ['./amount-orders-chart.component.css']\r\n})\r\nexport class AmountOrdersChartComponent implements OnInit {\r\n\r\n  @Input() storeId: number\r\n\r\n  private xLabels: Label[] = []\r\n  private yValues: ChartDataSets[] = []\r\n  private lastOrdersNb: number = 10\r\n  lastOrdersForm: FormGroup\r\n\r\n  constructor(private ordersStatisticService: OrdersStatisticService, private formBuilder: FormBuilder) { }\r\n\r\n/*public barChartData: ChartDataSets[] = [\r\n    { data: [65, 59, 80, 81, 56, 55, 40], label: 'Series A' },\r\n    { data: [28, 48, 40, 19, 86, 27, 90], label: 'Series B' }\r\n  ];*/\r\n\r\n  ngOnInit() {\r\n    this.initForm()\r\n    this.loadData(10)\r\n  }\r\n\r\n  initForm(): void {\r\n    this.lastOrdersForm = this.formBuilder.group({\r\n      lastOrderNumber: [10, [Validators.min(1)]]\r\n    });\r\n  }\r\n\r\n  loadData(ordersToLoadNb: number): void {\r\n    let amounts: number[] = []\r\n    this.ordersStatisticService.getLastOrdersOfStore(this.storeId, ordersToLoadNb).subscribe(\r\n      d => {\r\n        for (let item of d.items) {\r\n          this.xLabels.push(item.orderName)\r\n          amounts.push(item.amount)\r\n        }\r\n        this.yValues = [\r\n          { data: amounts, label: 'Amount'},\r\n        ]\r\n      }, error => {\r\n        console.log(JSON.stringify(error))\r\n        alert(JSON.stringify(error))\r\n      }\r\n    )\r\n  }\r\n\r\n  onRefresh(): void {\r\n    alert('OnRefresh')\r\n    this.loadData(this.lastOrdersForm.get(\"lastOrderNumber\").value)\r\n  }\r\n}\r\n","export default \".center {\\r\\n    display: block;\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9jdXN0b21lci9zdG9yZS9vcGVuLWNsb3NlZC1vcmRlcnMtY291bnRlci9vcGVuLWNsb3NlZC1vcmRlcnMtY291bnRlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksY0FBYztJQUNkLGlCQUFpQjtJQUNqQixrQkFBa0I7QUFDdEIiLCJmaWxlIjoiYXBwL2N1c3RvbWVyL3N0b3JlL29wZW4tY2xvc2VkLW9yZGVycy1jb3VudGVyL29wZW4tY2xvc2VkLW9yZGVycy1jb3VudGVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2VudGVyIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XHJcbn0iXX0= */\"","import { Component, OnInit, OnChanges, Input } from '@angular/core';\nimport { OrdersStatisticService } from '../../../service/orders-statistic-service';\nimport { OpenClosedOrdersCounter } from '../../../model/statistic/OpenClosedOrdersCounter';\nimport {NgbProgressbarConfig} from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'open-closed-orders-counter',\n  templateUrl: './open-closed-orders-counter.component.html',\n  styleUrls: ['./open-closed-orders-counter.component.css'],\n})\nexport class OpenClosedOrdersCounterComponent implements OnChanges {\n\n  @Input() private storeId: number\n  private counters: OpenClosedOrdersCounter\n\n  constructor(private ordersStatisticService: OrdersStatisticService, config: NgbProgressbarConfig) {\n    config.max = 100\n    config.showValue = false\n    config.striped = false\n    config.animated = false\n    config.type = 'success'\n    config.height = '50px'\n  }\n\n  ngOnChanges() {\n    if (this.storeId != null) {\n      this.ordersStatisticService.getOpenClosedOrdersOfStore(this.storeId).subscribe(\n        data => {\n          this.counters = OpenClosedOrdersCounter.fromJson(data)\n        }, error => {\n          alert(JSON.stringify(error))\n        }\n      )\n    }\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvY3VzdG9tZXIvc3RvcmUvc3RvcmUtZGFzaGJvYXJkL3N0b3JlLWRhc2hib2FyZC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Store } from '../../../model/Store';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { StoreService } from '../../../service/store-service';\n\n@Component({\n  selector: 'app-store-dashboard',\n  templateUrl: './store-dashboard.component.html',\n  styleUrls: ['./store-dashboard.component.css']\n})\nexport class StoreDashboardComponent implements OnInit {\n\n  private storeId: number\n  \n  constructor(private route: ActivatedRoute) {}\n\n  ngOnInit() {\n    this.storeId = parseInt(this.route.snapshot.paramMap.get('id'));\n  }\n\n}\n","export default \".center {\\r\\n    display: block;\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9jdXN0b21lci9zdG9yZS9zdG9yZS1pbmZvL3N0b3JlLWluZm8uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGNBQWM7SUFDZCxpQkFBaUI7SUFDakIsa0JBQWtCO0FBQ3RCIiwiZmlsZSI6ImFwcC9jdXN0b21lci9zdG9yZS9zdG9yZS1pbmZvL3N0b3JlLWluZm8uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jZW50ZXIge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcclxuICAgIG1hcmdpbi1yaWdodDogYXV0bztcclxufSJdfQ== */\"","import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { Store } from '../../../model/Store';\nimport { ModalBuilder } from '../../../common-components/modal-builder';\nimport { StoreService } from '../../../service/store-service';\nimport { EditStoreInfoModalComponent } from '../../../modal/store/edit-store-info-modal/edit-store-info-modal.component';\n\n@Component({\n  selector: 'store-info',\n  templateUrl: './store-info.component.html',\n  styleUrls: ['./store-info.component.css']\n})\nexport class StoreInfoComponent implements OnChanges {\n\n  @Input()\n  private storeId: number\n  private store: Store\n  \n  constructor(private storeService: StoreService, private modalBuilder: ModalBuilder) { }\n\n  \n  ngOnChanges() {\n    if (this.storeId != null) {\n      this.refresh()\n    }\n  }\n\n  private refresh(): void {\n    this.store = null\n    this.storeService.get(this.storeId).subscribe(\n      data => {\n        this.store = Store.fromJson(data)\n      }\n    )\n  }\n\n  editStoreInfo(): void {\n    let modal = this.modalBuilder.openCenteredModal(EditStoreInfoModalComponent)\n    modal.componentInstance.store = this.store\n    modal.result.then((response) => {\n      if (response) {\n        this.refresh()\n      }\n    })\n  }\n\n}\n","export default \"/* Scroll Bar Aggregated Order Item table */\\r\\n.my-custom-scrollbar {\\r\\n    position: relative;\\r\\n    max-height: 300px;\\r\\n    overflow: auto;\\r\\n  }\\r\\n.table-wrapper-scroll-y {\\r\\n  display: block;\\r\\n}\\r\\n.center {\\r\\n  display: block;\\r\\n  margin-left: auto;\\r\\n  margin-right: auto;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9jdXN0b21lci9zdG9yZS9zdG9yZS1vcmRlcnMvc3RvcmUtb3JkZXJzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsMkNBQTJDO0FBQzNDO0lBQ0ksa0JBQWtCO0lBQ2xCLGlCQUFpQjtJQUNqQixjQUFjO0VBQ2hCO0FBRUY7RUFDRSxjQUFjO0FBQ2hCO0FBRUE7RUFDRSxjQUFjO0VBQ2QsaUJBQWlCO0VBQ2pCLGtCQUFrQjtBQUNwQiIsImZpbGUiOiJhcHAvY3VzdG9tZXIvc3RvcmUvc3RvcmUtb3JkZXJzL3N0b3JlLW9yZGVycy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyogU2Nyb2xsIEJhciBBZ2dyZWdhdGVkIE9yZGVyIEl0ZW0gdGFibGUgKi9cclxuLm15LWN1c3RvbS1zY3JvbGxiYXIge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgbWF4LWhlaWdodDogMzAwcHg7XHJcbiAgICBvdmVyZmxvdzogYXV0bztcclxuICB9XHJcbiAgXHJcbi50YWJsZS13cmFwcGVyLXNjcm9sbC15IHtcclxuICBkaXNwbGF5OiBibG9jaztcclxufVxyXG5cclxuLmNlbnRlciB7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xyXG59Il19 */\"","import { Component, OnInit, Input, OnChanges } from '@angular/core';\r\nimport { OrderService } from '../../../service/order-service';\r\nimport { AggregatedOrder } from '../../../model/AggregatedOrder';\r\nimport { ModalBuilder } from '../../../common-components/modal-builder';\r\nimport { CreateOrderModalComponent } from '../../../modal/create-order-modal/create-order-modal.component';\r\nimport { StoreService } from '../../../service/store-service';\r\nimport { Store } from '../../../model/Store';\r\n\r\n@Component({\r\n  selector: 'store-orders',\r\n  templateUrl: './store-orders.component.html',\r\n  styleUrls: ['./store-orders.component.css']\r\n})\r\nexport class StoreOrdersComponent implements OnChanges {\r\n\r\n  @Input() storeId: number\r\n  private orders: AggregatedOrder[] = []\r\n\r\n  constructor(private orderService: OrderService, private storeService: StoreService, private modalBuilder: ModalBuilder) { }\r\n\r\n  ngOnChanges() {\r\n    this.loadOrders()\r\n  }\r\n\r\n  private loadOrders() {\r\n    if (this.storeId != null) {\r\n      this.orderService.getOrdersOfStore(this.storeId).subscribe(\r\n        data => {\r\n          let arr: AggregatedOrder[] = [];\r\n          for (let order of data) {\r\n            arr.push(AggregatedOrder.fromJson(order));\r\n          }\r\n          this.orders = arr;\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  private onNewOrder(): void {\r\n    const modalRef = this.modalBuilder.open(CreateOrderModalComponent)\r\n    modalRef.componentInstance.storeForOrder = this.findStore()\r\n  }\r\n\r\n  private findStore(): Store {\r\n    let store\r\n    if (this.orders.length > 0) {\r\n      store = this.orders[0].aggregatedOrderInfo.store\r\n    } else {\r\n      store = this.storeService.get(this.storeId)\r\n    }\r\n    return store\r\n  }\r\n}\r\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpErrorResponse } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\r\nexport class HttpToHttpsInterceptor implements HttpInterceptor {\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        const secureReq = req.clone({\r\n            url: req.url.replace('http://', 'https://')\r\n          });\r\n          return next.handle(secureReq);\r\n    }    \r\n}","import { HTTP_INTERCEPTORS } from \"@angular/common/http\";\r\nimport { SessionTimeoutHttpInterceptor } from \"./SessionTimeoutHttpInterceptor\";\r\nimport { HttpToHttpsInterceptor } from \"./HttpToHttpsInterceptor\";\r\n\r\nexport const httpInterceptorProviders = [\r\n    { provide: HTTP_INTERCEPTORS, useClass: SessionTimeoutHttpInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: HttpToHttpsInterceptor, multi: true}\r\n]","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpErrorResponse } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\nimport { ModalBuilder } from \"../common-components/modal-builder\";\r\nimport { tap, catchError } from \"rxjs/operators\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { InfoModalComponent } from \"../modal/info-modal/info-modal.component\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Injectable()\r\nexport class SessionTimeoutHttpInterceptor implements HttpInterceptor {\r\n\r\n    constructor(private modalBuilder: ModalBuilder, private router: Router) {}\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n      if (req.url.includes('/user')) {\r\n        return next.handle(req)\r\n      }\r\n\r\n      return next.handle(req).pipe(\r\n        catchError(\r\n          err =>\r\n            new Observable<HttpEvent<any>>(observer => {\r\n              if (err instanceof HttpErrorResponse) {\r\n                const errResp = <HttpErrorResponse>err;\r\n                if (errResp.status === 401 || err.status === 403) {\r\n                  this.showModalLogoutMsg(errResp.status)\r\n                }\r\n              }\r\n              observer.error(err);\r\n              observer.complete();\r\n            })\r\n        )\r\n      );\r\n    }\r\n\r\n    private showModalLogoutMsg(errorStatus: number) {\r\n      const modalRef = this.modalBuilder.openCenteredLargeModal(InfoModalComponent)\r\n      modalRef.componentInstance.title = \"Error \" + errorStatus;\r\n      modalRef.componentInstance.message = 'Session expired. You are going to be redirected to loggin again'\r\n      modalRef.result.then((response) => {\r\n        this.router.navigateByUrl(\"/\");\r\n      })\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvbW9kYWwvYWRkLW9yZGVyLWl0ZW0tbW9kYWwvYWRkLW9yZGVyLWl0ZW0tbW9kYWwuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { OrderService } from 'src/app/service/order-service';\r\nimport { AddOrderItemReq } from 'src/app/model/request/order/AddOrderItemReq';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ProductService } from 'src/app/service/product-service';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, map } from 'rxjs/operators';\r\nimport { ProductStockInfo } from 'src/app/model/ProductStockInfo';\r\nimport { AddOrderItemByBarCodeReq } from 'src/app/model/request/order/AddOrderItemByBarCodeReq';\r\nimport { TypeUtil } from 'src/app/util/TypeUtil';\r\nimport { ProductItem } from 'src/app/model/ProductItem';\r\n\r\n@Component({\r\n  selector: 'add-order-item-modal',\r\n  templateUrl: './add-order-item-modal.component.html',\r\n  styleUrls: ['./add-order-item-modal.component.css']\r\n})\r\nexport class AddOrderItemModalComponent implements OnInit {\r\n\r\n  @Output() addOrderItemEvent = new EventEmitter<string>();\r\n  @Input() orderId: number\r\n\r\n  addOrderItemForm: FormGroup\r\n  addOrderItemInProgress: boolean\r\n  isAddButtonDisabled: boolean\r\n  barCodeMode: boolean\r\n  productNames: string[] = []\r\n  productIdMapByName: Map<string, number> = new Map()\r\n  inputProductName: string\r\n  productStockInfo: ProductStockInfo\r\n  productItem: ProductItem\r\n  errorMessage: string\r\n  private _error = new Subject<string>()\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n              private modal: NgbActiveModal,\r\n              private cookieService: CookieService,\r\n              private productService: ProductService,\r\n              private orderService: OrderService) {}\r\n\r\n  ngOnInit() {\r\n    this.initBarCodeMode();\r\n    this.initForm();\r\n    this.getAllCustomers();\r\n    this._error.subscribe((msg) => this.errorMessage = msg);\r\n    this._error.pipe(debounceTime(4000)).subscribe(() => this.errorMessage = null);\r\n  }\r\n\r\n  search = (text$: Observable<string>) =>\r\n    text$.pipe(\r\n      debounceTime(200),\r\n      distinctUntilChanged(),\r\n      map(term => term.length < 1 ? []\r\n        : this.productNames.filter(v => v.toLowerCase().indexOf(term.toLowerCase()) > -1).slice(0, 10))\r\n  )\r\n\r\n  onProductNameChange() {\r\n    this.onValueChange();\r\n    this.productStockInfo = null;\r\n  }\r\n\r\n  onValueChange() {\r\n    this.errorMessage = null;\r\n  }\r\n\r\n  initForm() {\r\n    if (this.barCodeMode) {\r\n      this.disableAddButton(false);\r\n    }\r\n    this.addOrderItemForm = this.formBuilder.group({\r\n      barCode: [''],\r\n      productName: [''],\r\n      productId: [''],\r\n      quantity: ['', Validators.min(1)]\r\n    });\r\n  }\r\n\r\n  private initBarCodeMode() {\r\n    this.barCodeMode = this.cookieService.check(\"barCodeMode\") ? TypeUtil.toBoolean(this.cookieService.get(\"barCodeMode\")) : true;\r\n  }\r\n\r\n  shouldEnableBarCodeMode(event) {\r\n    this.resetForm();\r\n    this.cookieService.set(\"barCodeMode\", String(event.currentTarget.checked));\r\n  }\r\n\r\n  private resetForm() {\r\n    this.addOrderItemForm.reset();\r\n    this.productStockInfo = null;\r\n    this.productItem = null;\r\n    this.changeErrorMessage(null);\r\n  }\r\n\r\n  getAllCustomers() {\r\n    this.productService.getAllProductNames().subscribe(\r\n      data => {\r\n        for (let idAndNameProduct of data) {\r\n          this.productIdMapByName.set(idAndNameProduct.second, idAndNameProduct.first)\r\n          this.productNames.push(idAndNameProduct.second);\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  onBlurProductName() {\r\n    this.productItem = null;\r\n    let productName = this.addOrderItemForm.get(\"productName\").value;\r\n    if (productName != null) {\r\n      let productId = this.productIdMapByName.get(productName);\r\n      if (productId != null) {\r\n        this.productService.getProductStockInfo(productId).subscribe(\r\n          data => {\r\n            this.productStockInfo = ProductStockInfo.fromJson(data);\r\n          },\r\n          error => {\r\n            this.changeErrorMessage(error.error);\r\n            this.productStockInfo = null;\r\n          }\r\n        )\r\n      }\r\n    } \r\n  }\r\n\r\n  onBlurBarCode() {\r\n    this.productStockInfo = null;\r\n    let barCode = this.addOrderItemForm.get(\"barCode\").value;\r\n    if (barCode != null) {\r\n      this.productService.getProductItemByBarCode(barCode).subscribe(\r\n        data => {\r\n          this.productItem = ProductItem.fromJson(data);\r\n          this.disableAddButton(false);\r\n        },\r\n        error => {\r\n          this.changeErrorMessage(error.error);\r\n          this.productItem = null;\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  onSubmit(addAnother: boolean) {\r\n    if (this.barCodeMode) {\r\n      this.onSubmitBarCodeMode(addAnother);\r\n    } else {\r\n      this.onSubmitNoBarCodeMode(addAnother);\r\n    }\r\n  }\r\n  \r\n  private onSubmitBarCodeMode(addAnother: boolean) {\r\n    let barCode = this.addOrderItemForm.get(\"barCode\").value;\r\n    if (barCode == null || barCode.length == 0) {\r\n      this.changeErrorMessage(\"Please enter a barcode.\")\r\n    } else {\r\n      this.addInProgress(true);\r\n      let request = new AddOrderItemByBarCodeReq(this.orderId, barCode);\r\n      this.orderService.addOrderItemByBarCode(request).subscribe(\r\n        data => {\r\n          this.addOrderItemEvent.emit();\r\n          if (addAnother) {\r\n            this.resetModal();\r\n          } else {\r\n            this.modal.close(true);\r\n          }\r\n          \r\n        },\r\n        error => {\r\n          this.changeErrorMessage(error.error);\r\n          this.addInProgress(false);\r\n        });\r\n      this.errorMessage = null;\r\n    }\r\n  }\r\n\r\n  private onSubmitNoBarCodeMode(addAnother: boolean) {\r\n    let productName = this.addOrderItemForm.get(\"productName\").value;\r\n    let productId = this.productIdMapByName.get(productName);\r\n    const qty = this.addOrderItemForm.get(\"quantity\").value;\r\n    if (this.productStockInfo === null) {\r\n      this.changeErrorMessage('Please select a product from the auto-complete list.');\r\n    } else if (this.isNoFreeQuantity()) {\r\n      this.changeErrorMessage('There is no available quantity for this product item');\r\n    } else if (! this.isValidQuantity(qty)) {\r\n      this.changeErrorMessage('Please choose a quantity between 1 to ' + this.productStockInfo.getFreeQuantity());\r\n    } else {\r\n      this.addInProgress(true);\r\n      let request = new AddOrderItemReq(this.orderId, productId, qty);\r\n      this.orderService.addOrderItem(request).subscribe(\r\n        data => {\r\n          this.addOrderItemEvent.emit();\r\n          if (addAnother) {\r\n            this.resetModal();\r\n          } else {\r\n            this.modal.close(true);\r\n          }\r\n        },\r\n        error => {\r\n          this.changeErrorMessage(error.error);\r\n          this.addInProgress(false);\r\n        });\r\n      this.errorMessage = null;\r\n    }\r\n  }\r\n\r\n  private addInProgress(isInProgress: boolean) {\r\n    this.addOrderItemInProgress = isInProgress;\r\n  }\r\n\r\n  private changeErrorMessage(errorMessage: string) {\r\n    this._error.next(errorMessage);\r\n  }\r\n\r\n  private isNoFreeQuantity(): boolean {\r\n    return this.productStockInfo.getFreeQuantity() == 0\r\n  }\r\n\r\n  private isValidQuantity(qty: number): boolean {\r\n    return qty > 0 && qty <= this.productStockInfo.getFreeQuantity();\r\n  }\r\n\r\n  private disableAddButton(disabled: boolean) {\r\n    this.isAddButtonDisabled = disabled;\r\n  }\r\n\r\n  private resetModal() {\r\n    this.addOrderItemForm.reset();\r\n    this.addInProgress(false);\r\n    this.productStockInfo = null;\r\n  }\r\n  \r\n\r\n  onClose() {\r\n    this.modal.close(false)\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvbW9kYWwvY29uZmlybS1tb2RhbC9jb25maXJtLW1vZGFsLWNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'confirm-modal',\r\n  templateUrl: './confirm-modal-component.html',\r\n  styleUrls: ['./confirm-modal-component.css']\r\n})\r\nexport class ConfirmModalComponent implements OnInit {\r\n\r\n  @Input() title: string\r\n  @Input() message: string\r\n\r\n  constructor(public modal: NgbActiveModal) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onClickYes() {\r\n    this.modal.close(true)\r\n  }\r\n\r\n  onClickClose() {\r\n    this.modal.close(false)\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvbW9kYWwvY3JlYXRlLW9yZGVyLW1vZGFsL2NyZWF0ZS1vcmRlci1tb2RhbC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, Input, OnChanges } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\nimport { Store } from '../../model/Store';\r\nimport { Order } from '../../model/Order';\r\nimport { OrderService } from '../../service/order-service';\r\nimport { CustomerService } from '../../service/customer-service';\r\n\r\n@Component({\r\n  selector: 'app-create-order-modal',\r\n  templateUrl: './create-order-modal.component.html',\r\n  styleUrls: ['./create-order-modal.component.css']\r\n})\r\nexport class CreateOrderModalComponent implements OnInit {\r\n\r\n  @Input() storeForOrder: Store\r\n\r\n  createOrderForm: FormGroup\r\n  storesArray: Store[] = []\r\n  isFormSubmitted: boolean = false\r\n  errorMessage: string\r\n  private _error = new Subject<string>()\r\n\r\n  constructor(private modal: NgbActiveModal,\r\n              private customerService: CustomerService,\r\n              private orderService: OrderService,\r\n              private router: Router,\r\n              private formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit() {\r\n    this.storesArray = (this.storeForOrder == null) ? [] : [this.storeForOrder]\r\n    this.createOrderForm = this.formBuilder.group({\r\n      name: ['', [Validators.required]],\r\n      stores: [[], [Validators.required]],\r\n      comment: ['']\r\n    });\r\n\r\n    if (this.storesArray.length == 0) {\r\n      this.customerService.getAllCustomersNoLimit().subscribe(data => {\r\n        for (let i = 0; i < data.length; i++) {\r\n          this.storesArray.push(Store.fromJson(data[i]))\r\n        }\r\n        this.setOrderForm('', '', this.storesArray)\r\n      })\r\n    } else {\r\n      this.createOrderForm.controls['stores'].setValue(this.storeForOrder)\r\n    }\r\n\r\n    this._error.subscribe((msg) => this.errorMessage = msg)\r\n    this._error.pipe(debounceTime(5000)).subscribe(() => this.errorMessage = null)\r\n  }\r\n\r\n  private setOrderForm(name: string, comment: string, stores: Store[]) {\r\n    this.createOrderForm.setValue({\r\n      name: name,\r\n      comment: comment,\r\n      stores: stores\r\n    })\r\n  }\r\n\r\n  public changeErrorMessage(errorMessage: string) {\r\n    this._error.next(\"Order not created : \" + errorMessage)\r\n  }\r\n\r\n  onSubmit() {\r\n    this.isFormSubmitted = true\r\n    const store = this.createOrderForm.get(\"stores\").value\r\n    const orderName = this.createOrderForm.get(\"name\").value\r\n    const comment = this.createOrderForm.get(\"comment\").value\r\n    const order = new Order()\r\n    order.name = orderName\r\n    order.comment = comment\r\n    order.store = store\r\n    this.orderService.addOrder(order).subscribe(\r\n      data => {\r\n        this.modal.close(true)\r\n        this.router.navigate(['/order', data.id])\r\n      },\r\n      error => {\r\n        this.changeErrorMessage(error.error);\r\n      })\r\n  }\r\n\r\n  onClose() {\r\n    this.modal.close(false)\r\n  }\r\n\r\n}\r\n","export default \".my-custom-scrollbar {\\r\\n    position: relative;\\r\\n    max-height: 500px;\\r\\n    overflow: auto;\\r\\n}\\r\\n\\r\\n.table-wrapper-scroll-y {\\r\\n    display: block;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9tb2RhbC9kZWxldGUtb3JkZXItaXRlbXMtbW9kYWwvZGVsZXRlLW9yZGVyLWl0ZW1zLW1vZGFsLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxrQkFBa0I7SUFDbEIsaUJBQWlCO0lBQ2pCLGNBQWM7QUFDbEI7O0FBRUE7SUFDSSxjQUFjO0FBQ2xCIiwiZmlsZSI6ImFwcC9tb2RhbC9kZWxldGUtb3JkZXItaXRlbXMtbW9kYWwvZGVsZXRlLW9yZGVyLWl0ZW1zLW1vZGFsLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubXktY3VzdG9tLXNjcm9sbGJhciB7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBtYXgtaGVpZ2h0OiA1MDBweDtcclxuICAgIG92ZXJmbG93OiBhdXRvO1xyXG59XHJcblxyXG4udGFibGUtd3JhcHBlci1zY3JvbGwteSB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxufSJdfQ== */\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { OrderItem } from 'src/app/model/OrderItem';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-delete-order-items-modal',\r\n  templateUrl: './delete-order-items-modal.component.html',\r\n  styleUrls: ['./delete-order-items-modal.component.css']\r\n})\r\nexport class DeleteOrderItemsModalComponent implements OnInit {\r\n\r\n  @Input() title: string\r\n  @Input() orderItems: OrderItem[]\r\n\r\n  constructor(public modal: NgbActiveModal) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onClickYes() {\r\n    this.modal.close(true);\r\n  }\r\n\r\n  onClickClose() {\r\n    this.modal.close(false);\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvbW9kYWwvaW5mby1tb2RhbC9pbmZvLW1vZGFsLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-info-modal',\r\n  templateUrl: './info-modal.component.html',\r\n  styleUrls: ['./info-modal.component.css']\r\n})\r\nexport class InfoModalComponent implements OnInit {\r\n\r\n  @Input() title: string\r\n  @Input() message: string\r\n\r\n  constructor(public modal: NgbActiveModal) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onClickClose() {\r\n    this.modal.close(false)\r\n  }\r\n}\r\n","export default \".ng-invalid:not(form)  {\\r\\n    border-left: 5px solid #a94442; /* red */\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9tb2RhbC9vcmRlci1ub3RpZmljYXRpb24tbW9kYWwvb3JkZXItbm90aWZpY2F0aW9uLW1vZGFsLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSw4QkFBOEIsRUFBRSxRQUFRO0FBQzVDIiwiZmlsZSI6ImFwcC9tb2RhbC9vcmRlci1ub3RpZmljYXRpb24tbW9kYWwvb3JkZXItbm90aWZpY2F0aW9uLW1vZGFsLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubmctaW52YWxpZDpub3QoZm9ybSkgIHtcclxuICAgIGJvcmRlci1sZWZ0OiA1cHggc29saWQgI2E5NDQ0MjsgLyogcmVkICovXHJcbn0iXX0= */\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormGroup, FormBuilder, Validators, FormArray } from '@angular/forms';\r\nimport { NotificationService } from 'src/app/service/notification-service';\r\nimport { OrderNotificationRequest } from 'src/app/model/request/notification/OrderNotificationRequest';\r\nimport * as fileSaver from 'file-saver'\r\nimport { DocType } from 'src/app/model/DocType';\r\n\r\n@Component({\r\n  selector: 'app-order-notification-modal',\r\n  templateUrl: './order-notification-modal.component.html',\r\n  styleUrls: ['./order-notification-modal.component.css']\r\n})\r\nexport class OrderNotificationModalComponent implements OnInit {\r\n\r\n  @Input() orderId: number\r\n  form: FormGroup\r\n  docTypesMapByName: Map<string, DocType> = new Map();\r\n  selectedType: DocType;\r\n  formatsOfSelectedType: string[];\r\n\r\n  constructor(private modal: NgbActiveModal,\r\n              private formBuilder: FormBuilder,\r\n              private notificationService: NotificationService) {}\r\n\r\n  ngOnInit() {\r\n    this.initDocTypes();\r\n    this.form = this.formBuilder.group({\r\n      docTypesSelect: [[], [Validators.required]],\r\n      formats: this.formBuilder.array([]),\r\n      dateDocument: [],\r\n      emailInputs: this.formBuilder.array([])\r\n    });\r\n    const emailInputs = this.form.controls.emailInputs as FormArray;\r\n    emailInputs.push(this.createEmailInput());\r\n  }\r\n\r\n  private initDocTypes() {\r\n    this.notificationService.getDocumentTypes().subscribe(\r\n      data => {\r\n        for (let i = 0; i < data.length; i++) {\r\n          let docType = DocType.fromJson(data[i]);\r\n          this.docTypesMapByName.set(docType.type, docType);\r\n        }\r\n      },\r\n      error => {\r\n        console.log(\"Error : Cannot get the notification types : \" + error);  \r\n      }\r\n    )\r\n  }\r\n\r\n  private createEmailInput(): FormGroup {\r\n    return this.formBuilder.group({\r\n      email: ['', Validators.email]\r\n    });\r\n  }\r\n\r\n  private createFormatCheckbox(): FormGroup {\r\n    return this.formBuilder.group({\r\n      format: []\r\n    });\r\n  }\r\n\r\n  addFormatCheckbox() {\r\n    let formats = this.form.get('formats') as FormArray;\r\n    formats.push(this.createFormatCheckbox());\r\n  }\r\n\r\n  addEmailInput() {\r\n    let emailInputs = this.form.get('emailInputs') as FormArray;\r\n    emailInputs.push(this.createEmailInput());\r\n  }\r\n\r\n  onChangeType(event: any) {\r\n    let selectedTypeName = event.target.selectedOptions[0].text;\r\n    if (selectedTypeName != null) {\r\n      this.selectedType = this.docTypesMapByName.get(selectedTypeName);\r\n      if (this.selectedType != null) {\r\n        this.formatsOfSelectedType = this.selectedType.supportedFormats;\r\n        for (let i = 0; i < this.formatsOfSelectedType.length; i++) {\r\n          this.addFormatCheckbox()\r\n        }\r\n      } else {\r\n        console.log(\"Unknown selected type name \" + selectedTypeName + \". Known types : \" + JSON.stringify(this.docTypesMapByName));\r\n      }\r\n    }\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.form.valid) {\r\n      let dp = this.form.controls.dateDocument.value;\r\n      let type = this.form.controls.docTypesSelect.value;\r\n      let req = new OrderNotificationRequest(type, this.orderId);\r\n      if (dp != null) {\r\n        req.dateDocument = new Date(dp.year, dp.month - 1, dp.day + 1).getTime();\r\n      }\r\n      req.emails = this.getEmailsFromInputs();\r\n      this.notificationService.notify(req).subscribe(\r\n        response => {\r\n          this.saveFile(response.body, response.headers.get('filename'), response.headers.get('Content-type'));\r\n          this.modal.close();\r\n        },\r\n        error => {\r\n         alert(JSON.stringify(error));\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  saveFile(data: any, filename?: string, contentType?: string) {\r\n    const blob = new Blob([data], {type: contentType});\r\n    fileSaver.saveAs(blob, filename);\r\n  }\r\n\r\n  private getEmailsFromInputs(): string[] {\r\n    let emails: string[] = [];\r\n    let array = this.form.controls.emailInputs as FormArray;\r\n    for (let i = 0; i < array.length; i++) {\r\n      let emailObjValue = array.at(i).value;\r\n      if (emailObjValue.email.length > 0) {\r\n        emails.push(emailObjValue.email);\r\n      }\r\n    }\r\n    return emails;\r\n  }\r\n\r\n  onClose() {\r\n    this.modal.close(false);\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvbW9kYWwvc2hvdy1vcmRlci1pdGVtcy1tb2RhbC9zaG93LW9yZGVyLWl0ZW1zLW1vZGFsLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { OrderItem } from 'src/app/model/OrderItem';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-show-order-items-modal',\r\n  templateUrl: './show-order-items-modal.component.html',\r\n  styleUrls: ['./show-order-items-modal.component.css']\r\n})\r\nexport class ShowOrderItemsModalComponent implements OnInit {\r\n\r\n  @Input() orderItems: OrderItem[];\r\n\r\n  constructor(private modal: NgbActiveModal) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onClose() {\r\n    this.modal.close(false)\r\n  }\r\n}\r\n","export default \".ng-invalid:not(form)  {\\r\\n    border-left: 5px solid #a94442;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9tb2RhbC9zdG9yZS9lZGl0LXN0b3JlLWluZm8tbW9kYWwvZWRpdC1zdG9yZS1pbmZvLW1vZGFsLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSw4QkFBOEI7QUFDbEMiLCJmaWxlIjoiYXBwL21vZGFsL3N0b3JlL2VkaXQtc3RvcmUtaW5mby1tb2RhbC9lZGl0LXN0b3JlLWluZm8tbW9kYWwuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5uZy1pbnZhbGlkOm5vdChmb3JtKSAge1xyXG4gICAgYm9yZGVyLWxlZnQ6IDVweCBzb2xpZCAjYTk0NDQyO1xyXG59Il19 */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Store } from '../../../model/Store';\nimport { StringUtil } from '../../../util/StringUtil';\nimport { StoreService } from '../../../service/store-service';\nimport { Address } from '../../../model/Address';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'edit-store-info-modal',\n  templateUrl: './edit-store-info-modal.component.html',\n  styleUrls: ['./edit-store-info-modal.component.css']\n})\nexport class EditStoreInfoModalComponent implements OnInit {\n\n  @Input() store: Store\n  private form: FormGroup\n  private editInProgress: boolean = false\n  private errorMessage: string\n  private _error = new Subject<string>()\n\n\n  constructor(private modal: NgbActiveModal,\n              private storeService: StoreService,\n              private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.initForm()\n  }\n\n  private initForm(): void {\n    this.form = this.formBuilder.group({\n      name: [this.store.name, Validators.required],\n      streetNumber: [this.store.address.streetNumber],\n      streetName: [this.store.address.streetName],\n      zipCode: [this.store.address.zipCode, [Validators.min(1), Validators.max(999999)]],\n      city: [this.store.address.city],\n      country: [this.store.address.country],\n      phone: [this.store.phone],\n      email: [this.store.email, Validators.email]\n    })\n  }\n\n  onBlurStringFormControl(event) {\n    event.srcElement.value = StringUtil.capitalFirstLetter(event.srcElement.value);\n  }\n\n  private changeAlertMessage(errorMessage: string) {\n    this.errorMessage = errorMessage\n    this._error.next(errorMessage);\n  }\n\n  onSave(): void {\n    if (this.form.valid) {\n      this.editInProgress = true\n      this.storeService.update(this.createStoreFromForm()).subscribe(\n        data => {\n          this.onClose(true)\n        },\n        error => {\n          this.editInProgress = false\n          this.changeAlertMessage(error.message)\n        }\n      )\n    }\n  }\n\n  private createStoreFromForm(): Store {\n    let controls = this.form.controls\n    let store = new Store()\n    store.id = this.store.id\n    store.owner = this.store.owner\n    store.address = this.createAddress()\n    store.name = controls.name.value\n    store.email = controls.email.value\n    store.phone = controls.phone.value\n    return store\n  }\n\n  private createAddress(): Address {\n    let controls = this.form.controls\n    return new Address(controls.streetNumber.value,\n                      controls.streetName.value,\n                      controls.zipCode.value,\n                      controls.city.value,\n                      controls.country.value)\n  }\n\n  onClose(success: boolean): void {\n    this.modal.close(success)\n  }\n}\n","export default \".my-custom-scrollbar {\\r\\n  position: relative;\\r\\n  height: 450px;\\r\\n  overflow: auto;\\r\\n}\\r\\n\\r\\n.table-wrapper-scroll-y {\\r\\n  display: block;\\r\\n}\\r\\n\\r\\n.drop-box {\\r\\n  cursor: pointer;\\r\\n  background: #F8F8F8;\\r\\n  border: 5px dashed #DDD;\\r\\n  text-align: center;\\r\\n  padding: 40px;\\r\\n}\\r\\n\\r\\n.drag-over-title {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n.drop-box.dragover {\\r\\n  opacity: 0.6;\\r\\n}\\r\\n\\r\\n.drop-box.dragover .drag-over-title {\\r\\n  display: block;\\r\\n}\\r\\n\\r\\n.drop-box.dragover .drag-in-title {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\ninput[type='file'] {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\np { display: inline }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9tb2RhbC91cGxvYWQtcHJvZHVjdC1maWxlLW1vZGFsL3VwbG9hZC1wcm9kdWN0LWZpbGUtbW9kYWwuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGtCQUFrQjtFQUNsQixhQUFhO0VBQ2IsY0FBYztBQUNoQjs7QUFFQTtFQUNFLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsbUJBQW1CO0VBQ25CLHVCQUF1QjtFQUN2QixrQkFBa0I7RUFDbEIsYUFBYTtBQUNmOztBQUVBO0VBQ0UsYUFBYTtBQUNmOztBQUVBO0VBQ0UsWUFBWTtBQUNkOztBQUVBO0VBQ0UsY0FBYztBQUNoQjs7QUFFQTtFQUNFLGFBQWE7QUFDZjs7QUFFQTtFQUNFLGFBQWE7QUFDZjs7QUFFQSxJQUFJLGdCQUFnQiIsImZpbGUiOiJhcHAvbW9kYWwvdXBsb2FkLXByb2R1Y3QtZmlsZS1tb2RhbC91cGxvYWQtcHJvZHVjdC1maWxlLW1vZGFsLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubXktY3VzdG9tLXNjcm9sbGJhciB7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIGhlaWdodDogNDUwcHg7XHJcbiAgb3ZlcmZsb3c6IGF1dG87XHJcbn1cclxuXHJcbi50YWJsZS13cmFwcGVyLXNjcm9sbC15IHtcclxuICBkaXNwbGF5OiBibG9jaztcclxufVxyXG5cclxuLmRyb3AtYm94IHtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgYmFja2dyb3VuZDogI0Y4RjhGODtcclxuICBib3JkZXI6IDVweCBkYXNoZWQgI0RERDtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgcGFkZGluZzogNDBweDtcclxufVxyXG4gIFxyXG4uZHJhZy1vdmVyLXRpdGxlIHtcclxuICBkaXNwbGF5OiBub25lO1xyXG59XHJcbiAgXHJcbi5kcm9wLWJveC5kcmFnb3ZlciB7XHJcbiAgb3BhY2l0eTogMC42O1xyXG59XHJcbiAgXHJcbi5kcm9wLWJveC5kcmFnb3ZlciAuZHJhZy1vdmVyLXRpdGxlIHtcclxuICBkaXNwbGF5OiBibG9jaztcclxufVxyXG4gIFxyXG4uZHJvcC1ib3guZHJhZ292ZXIgLmRyYWctaW4tdGl0bGUge1xyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbn1cclxuICBcclxuaW5wdXRbdHlwZT0nZmlsZSddIHtcclxuICBkaXNwbGF5OiBub25lO1xyXG59XHJcblxyXG5wIHsgZGlzcGxheTogaW5saW5lIH0iXX0= */\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { FileUploader, FileItem, ParsedResponseHeaders } from 'ng2-file-upload';\r\nimport { UploadProductsFileResult } from 'src/app/model/UploadProductsFileResult';\r\nimport { ProductService } from '../../service/product-service';\r\n\r\n@Component({\r\n  selector: 'upload-product-file-modal',\r\n  templateUrl: './upload-product-file-modal.component.html',\r\n  styleUrls: ['./upload-product-file-modal.component.css']\r\n})\r\nexport class UploadProductFileModalComponent implements OnInit {\r\n\r\n  @ViewChild('fileInput', {static: false}) fileInput: ElementRef;\r\n\r\n  private result: UploadProductsFileResult\r\n \r\n  uploader: FileUploader;\r\n  isDropOver: boolean;\r\n  showConfirmUploadButton: boolean = false;\r\n\r\n  constructor(private productService: ProductService){}\r\n \r\n  ngOnInit(): void {\r\n    const headers = [{name: 'Accept', value: 'application/json'}];\r\n    this.uploader = new FileUploader({\r\n      url: 'v1/productItemFileUpload/upload',\r\n      autoUpload: true,\r\n      headers: headers\r\n    });\r\n    this.uploader.onErrorItem = (item, response, status, headers) => this.onErrorItem(item, response, status, headers);\r\n    this.uploader.onSuccessItem = (item, response, status, headers) => this.onSuccessItem(item, response, status, headers);\r\n  }\r\n\r\n  onSuccessItem(item: FileItem, response: string, status: number, headers: ParsedResponseHeaders) {\r\n    this.result = UploadProductsFileResult.fromJson(JSON.parse(response));\r\n    this.showConfirmUploadButton = true;\r\n  }\r\n  onErrorItem(item: FileItem, response: string, status: number, headers: ParsedResponseHeaders){\r\n      alert('Error : ' + JSON.stringify(response)); //error server response\r\n      this.showConfirmUploadButton = false;\r\n  }\r\n \r\n  fileOverAnother(e: any): void {\r\n    this.reset();\r\n    this.isDropOver = e;\r\n  }\r\n \r\n  fileClicked() {\r\n    this.fileInput.nativeElement.click();\r\n  }\r\n\r\n  onClickYes() {\r\n    this.productService.confirmProductItemFileUpload(this.result.id).subscribe(\r\n      data => {\r\n        this.reset();\r\n      }\r\n     )\r\n\r\n  }\r\n\r\n  onClickNo() {\r\n    alert('no');\r\n  }\r\n\r\n  private reset() {\r\n    this.result = null;\r\n  }\r\n\r\n}\r\n","export class Address {\r\n\r\n    streetNumber: string\r\n    streetName: string\r\n    city: string\r\n    country: string\r\n    zipCode: number\r\n\r\n    constructor(streetNumber: string, streetName: string, zipCode: number, city: string, country: string) {\r\n        this.streetNumber = streetNumber;\r\n        this.streetName = streetName;\r\n        this.zipCode = zipCode;\r\n        this.city = city;\r\n        this.country = country;\r\n    }\r\n\r\n    static fromJson(data: any): Address {\r\n        return new Address(data.streetNumber, data.streetName, data.zipCode, data.city, data.country);\r\n    }\r\n\r\n    format(): string {\r\n        return this.streetNumber + ', ' + this.streetName + ' - ' + this.zipCode + ' ' + this.city + ' - ' + this.country;\r\n    }\r\n}","import { AggregatedOrderInfo } from './AggregatedOrderInfo';\r\nimport { AggregatedOrderItem } from './AggregatedOrderItem';\r\n\r\nexport class AggregatedOrder {\r\n    aggregatedOrderInfo: AggregatedOrderInfo;\r\n    aggregatedOrderItems: AggregatedOrderItem[] = [];\r\n\r\n    constructor() {}\r\n\r\n    static fromJson(data: any): AggregatedOrder {\r\n        console.debug()\r\n        let order = new AggregatedOrder();\r\n        order.aggregatedOrderInfo = AggregatedOrderInfo.fromJson(data.aggregatedOrderInfo);\r\n        for (let item of data.aggregatedOrderItems) {\r\n            order.aggregatedOrderItems.push(AggregatedOrderItem.fromJson(item));\r\n        }\r\n        return order;\r\n    }\r\n}","import { Store } from \"./Store\";\r\n\r\nexport class AggregatedOrderInfo {\r\n    \r\n    id: number;\r\n    name: string;\r\n    comment: string;\r\n    store: Store;\r\n    status: string;\r\n    createdDatetime: Date;\r\n    lastModifiedDatetime: Date;\r\n    closeDatetime: Date;\r\n    orderItemSize: number;\r\n    productSize: number;\r\n    totalPrice: number;\r\n\r\n    constructor() {}\r\n\r\n    static fromJson(data: any) : AggregatedOrderInfo {\r\n        let order = new AggregatedOrderInfo();\r\n        order.id = data.id;\r\n        order.name = data.name;\r\n        order.store = Store.fromJson(data.store);\r\n        order.status = data.status;\r\n        order.comment = data.comment;\r\n        order.createdDatetime = data.createdDatetime;\r\n        order.lastModifiedDatetime = data.lastModifiedDatetime;\r\n        order.closeDatetime = data.closeDatetime;\r\n        order.orderItemSize = data.orderItemSize;\r\n        order.productSize = data.productSize;\r\n        order.totalPrice = data.totalPrice;\r\n        return order;\r\n    }\r\n}","import { Product } from './Product';\r\nimport { OrderItem } from './OrderItem';\r\n\r\nexport class AggregatedOrderItem {\r\n    quantity: number;\r\n    ttlPrice: number;\r\n    lastModifiedDatetime: Date;\r\n    product: Product;\r\n    orderItems: OrderItem[] = [];\r\n\r\n    constructor() {}\r\n\r\n    static fromJson(data: any): AggregatedOrderItem {\r\n        let orderItem = new AggregatedOrderItem();\r\n        orderItem.quantity = data.quantity;\r\n        orderItem.ttlPrice = data.ttlPrice;\r\n        orderItem.lastModifiedDatetime = data.lastModifiedDatetime;\r\n        orderItem.product = Product.fromJson(data.product);\r\n        for (let item of data.orderItems) {\r\n            orderItem.orderItems.push(OrderItem.fromJson(item));\r\n        }\r\n        return orderItem;\r\n    }\r\n}","export class DocType {\r\n\r\n    type: string\r\n    supportedFormats: string[]\r\n\r\n    constructor() {}\r\n\r\n    static fromJson(data: any): DocType {\r\n        let notif = new DocType();\r\n        notif.type = data.type;\r\n        notif.supportedFormats = data.supportedFormats;\r\n        return notif;\r\n    }\r\n}","import { OrderItem } from './OrderItem'\r\nimport { Store } from './Store'\r\n\r\nexport class Order {\r\n    \r\n    id: number\r\n    name: string\r\n    comment: string\r\n    status: string\r\n    store: Store = new Store()\r\n    createDatetime: Date\r\n    closeDatetime: Date\r\n    items: Map<number, OrderItem> = new Map()\r\n    nbProduct: number\r\n    totalItemQty: number\r\n    totalPrice: number\r\n\r\n    constructor() {\r\n    }\r\n\r\n    static fromJson(data: any) : Order {\r\n        let itemsQty = data.items.reduce((sum, item) => sum + item.quantity, 0);\r\n        let totalPrice = this.getTotalPrice(data.items)\r\n        let sr = new Order()\r\n        sr.id = data.id\r\n        sr.name = data.name\r\n        sr.store = data.store\r\n        sr.status = data.status,\r\n        sr.nbProduct = data.items.length\r\n        sr.createDatetime = data.createdDateTime\r\n        sr.closeDatetime = data.closeDateTime\r\n        sr.comment = data.comment\r\n        sr.totalItemQty = itemsQty\r\n        sr.totalPrice = totalPrice\r\n        return sr\r\n    }\r\n\r\n    private static getTotalPrice(items: any) {\r\n        let total = 0\r\n        for (let i = 0; i < items.length; i++) {\r\n            total += items[i].productItem.product.price * items[i].quantity;\r\n        }\r\n        return total\r\n    }\r\n}","import { ProductItem } from './ProductItem';\r\n\r\nenum Type {\r\n    GLASSES = \"GLASSES\",\r\n}\r\n\r\nexport class OrderItem {\r\n\r\n    id: number\r\n    productItem: ProductItem\r\n    type: Type = Type.GLASSES\r\n    createdDatetime: Date\r\n    lastModifiedDatetime: Date\r\n    \r\n    constructor() {}\r\n\r\n    static fromJson(data: any): OrderItem {\r\n        let orderItem = new OrderItem();\r\n        orderItem.id = data.id;\r\n        orderItem.productItem = ProductItem.fromJson(data.productItem);\r\n        orderItem.createdDatetime = data.createdDatetime;\r\n        orderItem.lastModifiedDatetime = data.lastModifiedDatetime;\r\n        return orderItem;\r\n    }\r\n}","export class Owner {\r\n    id: number\r\n    compagnyName: string\r\n    firstName: string\r\n    lastName: string\r\n    email: string\r\n\r\n    constructor() {\r\n    }\r\n\r\n    static fromJson(data: any) : Owner {\r\n        let owner = new Owner();\r\n        owner.id = data.id;\r\n        owner.compagnyName = data.compagnyName;\r\n        owner.firstName = data.firstName;\r\n        owner.lastName = data.lastName;\r\n        owner.email = data.email;\r\n        return owner;\r\n    }\r\n\r\n    getFullName(): string {\r\n        return this.firstName + ' ' + this.lastName \r\n    }\r\n}","import { ProductId } from \"./ProductId\"\r\nimport { ProductType } from \"./ProductType\"\r\n\r\nexport class Product {\r\n    id: ProductId\r\n    name: string\r\n    price: number\r\n\r\n    constructor(id: ProductId, name: string, price: number) {\r\n        this.id = id\r\n        this.name = name\r\n        this.price = price\r\n    }\r\n\r\n    static fromJson(data: any): Product {\r\n        const productId = new ProductId(data.id, ProductType.GLASSES);\r\n        const productName = data.name;\r\n        const productPrice = data.price;\r\n        return new Product(productId, productName, productPrice)\r\n    }\r\n}","import { ProductType } from './ProductType';\r\n\r\nexport class ProductId {\r\n\r\n  id: String\r\n  productType: ProductType;\r\n\r\n  constructor(id: String, productType: ProductType) {\r\n    this.id = id\r\n    this.productType = productType;\r\n  }\r\n\r\n  static fromJson(data: any): ProductId {\r\n    return new ProductId(data.id, data.productType)\r\n  }\r\n}\r\n","import { Product } from './Product';\r\nimport {ProductId} from \"./ProductId\";\r\n\r\nexport class ProductItem {\r\n\r\n    id: ProductId\r\n    product: Product\r\n    barCode: string\r\n    orderItemId : boolean\r\n    createdDatetime: Date\r\n    lastModifiedDatetime: Date\r\n\r\n    constructor() {}\r\n\r\n    static fromJson(data: any): ProductItem {\r\n        let productItem = new ProductItem();\r\n        productItem.id = ProductId.fromJson(data.id);\r\n        productItem.orderItemId = data.orderItemId;\r\n        productItem.product = Product.fromJson(data.product);\r\n        productItem.createdDatetime = data.createdDatetime;\r\n        productItem.lastModifiedDatetime = data.lastModifiedDatetime;\r\n        if (data.barCode != undefined) {\r\n            productItem.barCode = data.barCode.id;\r\n        }\r\n        return productItem;\r\n    }\r\n\r\n}\r\n","import { Product } from './Product';\r\n\r\nexport class ProductStockInfo {\r\n    product: Product\r\n    createdQuantity: number;\r\n    usedQuantity: number;\r\n\r\n    constructor() {}\r\n\r\n    static fromJson(data: any): ProductStockInfo {\r\n        let stockInfo = new ProductStockInfo();\r\n        stockInfo.product = Product.fromJson(data.product);\r\n        stockInfo.createdQuantity = data.quantityCreated;\r\n        stockInfo.usedQuantity = data.quantityUsed;\r\n        return stockInfo;\r\n    }\r\n\r\n    getFreeQuantity(): number {\r\n        return this.createdQuantity - this.usedQuantity;\r\n    }\r\n}","export enum ProductType {\r\n\r\n    GLASSES\r\n}\r\n","import { Owner } from './Owner';\r\nimport { Address } from './Address';\r\n\r\nexport class Store {\r\n\r\n    id: number\r\n    name: string\r\n    email: string\r\n    phone: string\r\n    address: Address\r\n    owner: Owner\r\n\r\n    constructor() {\r\n    }\r\n\r\n    static fromJson(data: any): Store {\r\n        let store = new Store();\r\n        store.id = data.id;\r\n        store.name = data.name;\r\n        store.email = data.email;\r\n        store.phone = data.phone;\r\n        store.address = Address.fromJson(data.address);\r\n        store.owner = Owner.fromJson(data.owner);\r\n        return store\r\n    }\r\n}","import { ProductItem } from './ProductItem';\r\n\r\nexport class UploadProductsFileResult {\r\n\r\n    id: string;\r\n    rowsInFile: number;\r\n    rowsProcessed: number;\r\n    productItems: ProductItem[] = [];\r\n\r\n    constructor() {}\r\n\r\n    public static fromJson(data: any) : UploadProductsFileResult {\r\n        let result = new UploadProductsFileResult();\r\n        result.id = data.id;\r\n        result.rowsInFile = data.rowsInFile;\r\n        result.rowsProcessed = data.rowsProcessed;\r\n        let products: ProductItem[] = [];\r\n        for (let item of data.productItems) {\r\n            products.push(ProductItem.fromJson(item));\r\n        }\r\n        result.productItems = products;\r\n        return result;\r\n    }\r\n}\r\n","export class AdminSetting {\r\n\r\n    emails: string[]\r\n    itemToShow: number\r\n    notifyOnCloseReport: boolean\r\n\r\n    constructor() {}\r\n}","import {SessionInfo} from \"./SessionInfo\"\r\n\r\nexport class LoggedUser {\r\n  username: string\r\n  sessions: SessionInfo[] = []\r\n\r\n  constructor() {}\r\n\r\n  static fromJson(data: any): LoggedUser {\r\n    let loggedUser = new LoggedUser()\r\n    loggedUser.username = data.username\r\n    for (let sessionInfo of data.sessionsInfo) {\r\n      loggedUser.sessions.push(SessionInfo.fromJson(sessionInfo));\r\n    }\r\n    return loggedUser\r\n  }\r\n}\r\n","export class SessionInfo {\r\n\r\n  sessionId: string\r\n  lastLoginDatetime: Date\r\n\r\n  constructor() {}\r\n\r\n  static fromJson(data: any) {\r\n    let session = new SessionInfo()\r\n    session.sessionId = data.sessionId\r\n    session.lastLoginDatetime = new Date(data.lastLoginDatetime)\r\n    return session\r\n  }\r\n}\r\n","export class ActuatorBasicResponse {\r\n    \r\n    name: string\r\n    baseUnit: string\r\n    values: string[] = []\r\n    description: string\r\n\r\n    constructor() {}\r\n\r\n    static fromJson(data: any): ActuatorBasicResponse {\r\n        let res = new ActuatorBasicResponse()\r\n        res.name = data.name\r\n        res.baseUnit = data.baseUnit != null ? data.baseUnit : \"\"\r\n        res.description = data.description\r\n        for (const val of data.measurements) {\r\n            res.values.push(val.value)\r\n        }\r\n        return res\r\n    }\r\n\r\n}","export class ActuatorDbHealth {\r\n\r\n    isUp: boolean\r\n    dbName: string\r\n    error: string\r\n\r\n    constructor() {}\r\n\r\n    static fromJson(data: any): ActuatorDbHealth {\r\n        let health = new ActuatorDbHealth()\r\n        health.isUp = data.status == 'UP'\r\n        health.dbName = data.details.database == null ? '' : data.details.database\r\n        health.error = data.details.error\r\n        return health\r\n    }\r\n}","import { debug } from \"util\"\r\n\r\nexport class ActuatorElasticsearchHealth {\r\n\r\n    isUp: boolean\r\n    clusterName: string\r\n    elasticsearchStatus: string\r\n    nodesNb: number\r\n    dataNodesNb: number\r\n    activePrimaryShardsNb: number\r\n    activeShardsNb: number\r\n    pendingTaskNb: number\r\n    error: string\r\n\r\n    constructor() {}\r\n\r\n    static fromJson(data: any): ActuatorElasticsearchHealth {\r\n        let health = new ActuatorElasticsearchHealth()\r\n        health.isUp = data.status == 'UP'\r\n        health.clusterName = data.details.cluster_name\r\n        health.elasticsearchStatus = data.details.status\r\n        health.nodesNb = data.details.number_of_nodes\r\n        health.dataNodesNb = data.details.number_of_data_nodes\r\n        health.activePrimaryShardsNb = data.details.active_primary_shards\r\n        health.activeShardsNb = data.details.active_shards\r\n        health.pendingTaskNb = data.details.number_of_pending_tasks\r\n        health.error = data.error\r\n        return health\r\n    }\r\n}","import { Address } from '../../Address';\r\n\r\nexport class AddOrUpdateCustomerReq {\r\n\r\n    storeId: number\r\n    ownerId: number\r\n    ownerCompagnyName: string\r\n    ownerFirstName: number\r\n    ownerLastName: number\r\n    ownerEmail: string\r\n    storeName: string\r\n    storePhone: string\r\n    storeEmail: string\r\n    storeAddress: Address\r\n\r\n    constructor(ownerId: number, storeName: string) {\r\n        this.ownerId = ownerId;\r\n        this.storeName = storeName;\r\n    }\r\n}","export class LoginRequest {\r\n\r\n    username: string\r\n    password: string\r\n\r\n    constructor(username: string, password: string) {\r\n        this.username = username\r\n        this.password = password\r\n    }\r\n}","export class NotificationRequest {\r\n\r\n    docType: string\r\n    emails: string[] = []\r\n\r\n    constructor(docType: string) {\r\n        this.docType = docType;\r\n    }\r\n}","import { NotificationRequest } from './NotificationRequest';\r\n\r\nexport class OrderNotificationRequest extends NotificationRequest {\r\n\r\n    orderId: number\r\n    dateDocument: number = new Date().getTime();\r\n\r\n    constructor(type: string, orderId: number) {\r\n        super(type);\r\n        this.orderId = orderId;\r\n    }\r\n}","export class AddOrderItemByBarCodeReq {\r\n\r\n    orderId: number\r\n    barCode: string\r\n\r\n    constructor(orderId: number, barCode: string) {\r\n        this.orderId = orderId;\r\n        this.barCode = barCode;\r\n    }\r\n}","export class AddOrderItemReq {\r\n\r\n    orderId: number;\r\n    requestedQty: number;\r\n    productId: number;\r\n\r\n    constructor(orderId: number, productId: number, requestedQty: number) {\r\n        this.orderId = orderId;\r\n        this.productId = productId;\r\n        this.requestedQty = requestedQty;\r\n    }\r\n}","export class DeleteOrderItemsReq {\r\n\r\n    orderId: number\r\n    orderItemsId: number[]\r\n\r\n    constructor(orderId: number, orderItemsId: number[]) {\r\n        this.orderId = orderId;\r\n        this.orderItemsId = orderItemsId;\r\n    }\r\n}","export class OpenClosedOrdersCounter {\r\n\r\n    openOrdersCount: number\r\n    closedOrdersCount: number\r\n\r\n    constructor() {}\r\n\r\n    static fromJson(data: any): OpenClosedOrdersCounter {\r\n        let counters = new OpenClosedOrdersCounter()\r\n        counters.openOrdersCount = data.counters.OPEN != null ? data.counters.OPEN : 0 \r\n        counters.closedOrdersCount = data.counters.CLOSED != null ? data.counters.CLOSED : 0\r\n        return counters\r\n    }\r\n\r\n    calculatePercentOfClosedOrders(): string {\r\n        let result = '0'\r\n        const total = this.totalOrders();\r\n        if (total > 0) {\r\n            result = ((this.closedOrdersCount / this.totalOrders()) * 100).toFixed(1)\r\n        }\r\n        return  result\r\n    }\r\n\r\n    totalOrders(): number {\r\n        return this.openOrdersCount + this.closedOrdersCount;\r\n    }\r\n}","export default \".center {\\r\\n    display: block;\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    width: 50%;\\r\\n}\\r\\n\\r\\nh1 {\\r\\n    font-size: 400%;\\r\\n    text-align: center\\r\\n}\\r\\n\\r\\nh4 {\\r\\n    text-align: center\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9tb25pdG9yaW5nL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGNBQWM7SUFDZCxpQkFBaUI7SUFDakIsa0JBQWtCO0lBQ2xCLFVBQVU7QUFDZDs7QUFFQTtJQUNJLGVBQWU7SUFDZjtBQUNKOztBQUNBO0lBQ0k7QUFDSiIsImZpbGUiOiJhcHAvbW9uaXRvcmluZy9kYXNoYm9hcmQvZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2VudGVyIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XHJcbiAgICB3aWR0aDogNTAlO1xyXG59XHJcblxyXG5oMSB7XHJcbiAgICBmb250LXNpemU6IDQwMCU7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXJcclxufVxyXG5oNCB7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXJcclxufSJdfQ== */\"","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { interval, Observable, timer} from 'rxjs';\nimport { MonitoringService } from '../../service/monitoring-service';\nimport { ActuatorBasicResponse } from '../../model/monitoring/actuator/ActuatorBasicResponse';\nimport { ActuatorDbHealth } from '../../model/monitoring/actuator/ActuatorDbHealth';\nimport { ActuatorElasticsearchHealth } from '../../model/monitoring/actuator/ActuatorElasticsearchHealth';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit, OnDestroy {\n\n  private cpuUsage: ActuatorBasicResponse\n  private cpuSystemCount: ActuatorBasicResponse\n  private elasticsearchHealth: ActuatorElasticsearchHealth\n  private jvmThreadLive: ActuatorBasicResponse\n  private jvmMemoryUsed: ActuatorBasicResponse\n  private jvmMemoryMax: ActuatorBasicResponse\n  private dbHealth: ActuatorDbHealth\n  private logFile: string\n  private cpuUsageWarningLimit: number = 0.85\n  private memoryUsageWarningLimit: number\n\n  private timer: Observable<number> = timer(0, 5000);\n  private timerSubscription\n\n  constructor(private monitoringService: MonitoringService) { }\n\n  ngOnInit() {\n    this.timerSubscription = this.timer.subscribe(\n      event => {\n        this.getCpuUsage()\n        this.getSystemCpuCount()\n        this.getJvmThreadsLive()\n        this.getJvmMemoryMax()\n        this.getJvmMemoryUsed()\n        this.getElasticsearchHealth()\n        this.getDatabaseHealth()\n      }\n    ) \n  }\n\n  ngOnDestroy() {\n    this.timerSubscription.unsubscribe()\n  }\n\n  private getDatabaseHealth(): void {\n    this.monitoringService.getDatabaseHealth().subscribe(\n      res => {\n        this.dbHealth = ActuatorDbHealth.fromJson(res)\n      },\n      error => {\n        this.dbHealth = ActuatorDbHealth.fromJson(error.error)\n      }\n    )\n  }\n\n  private getElasticsearchHealth(): void {\n    this.monitoringService.getElasticsearchHealth().subscribe(\n      res => {\n        this.elasticsearchHealth = ActuatorElasticsearchHealth.fromJson(res)\n      },\n      error => {\n        this.elasticsearchHealth = ActuatorElasticsearchHealth.fromJson(error.error)\n      }\n    )\n  }\n\n  private getLogFile(): void {\n    this.monitoringService.getServerLogFile().subscribe(\n      res => {\n        this.logFile = res\n      }\n    )\n  }\n\n  private getJvmMemoryUsed(): void {\n    this.monitoringService.getJvmMemoryUsed().subscribe(\n      res => {\n        this.jvmMemoryUsed = ActuatorBasicResponse.fromJson(res)\n      }\n    )\n  }\n\n  private getJvmMemoryMax(): void {\n    this.monitoringService.getJvmMemoryMax().subscribe(\n      res => {\n        this.jvmMemoryMax = ActuatorBasicResponse.fromJson(res)\n        this.memoryUsageWarningLimit = Number(this.jvmMemoryMax.values[0]) * 0.85\n      }\n    )\n  }\n\n  private getJvmThreadsLive(): void {\n    this.monitoringService.getJvmThreadsLive().subscribe(\n      res => {\n        this.jvmThreadLive = ActuatorBasicResponse.fromJson(res)\n      }\n    )\n  }\n\n  private getCpuUsage(): void {\n    this.monitoringService.getCpuUsage().subscribe(\n      res => {\n        this.cpuUsage = ActuatorBasicResponse.fromJson(res)\n      }\n    )\n  }\n\n  private getSystemCpuCount(): void {\n    this.monitoringService.getSystemCpuCount().subscribe(\n      res => {\n        this.cpuSystemCount = ActuatorBasicResponse.fromJson(res)\n      }\n    )\n  }\n\n  private getElasticsearchStatus(): string {\n    let status;\n    if (this.elasticsearchHealth.elasticsearchStatus == 'yellow') {\n      status = 'Y'\n    } else if (this.elasticsearchHealth.elasticsearchStatus == 'green') {\n      status = 'G'\n    } else {\n      status = 'R'\n    }\n    return status\n  } \n\n  private getPercentOfCpuUsage(): string {\n    return (Number(this.cpuUsage.values[0]) * 100).toFixed(2)\n  }\n\n  private getPercentOfMemoryUsed(): string {\n    return (((Number(this.jvmMemoryUsed.values[0]) / 1000000) / (Number(this.jvmMemoryMax.values[0]) / 1000000)) * 100).toFixed(2)\n  }\n\n  private getMemoryUsedInMb(): string {\n    return (Number(this.jvmMemoryUsed.values[0]) / 1000000).toFixed(0)\n  }\n}\n","export default \".table tr.active td {\\r\\n    background-color:#275e94 !important;\\r\\n    color: white;\\r\\n    font-weight: bold;\\r\\n    white-space: nowrap;\\r\\n  }\\r\\n\\r\\n.table table-striped tr td {\\r\\n  padding: 1.5%;\\r\\n}\\r\\n\\r\\n/* Scroll Bar Aggregated Order Item table */\\r\\n\\r\\n.my-custom-scrollbar {\\r\\n  position: relative;\\r\\n  max-height: 450px;\\r\\n  overflow: auto;\\r\\n}\\r\\n\\r\\n.table-wrapper-scroll-y {\\r\\n  display: block;\\r\\n}\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9vcmRlci1wYW5lbC9saXN0LW9yZGVyLWl0ZW0vbGlzdC1vcmRlci1pdGVtLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxtQ0FBbUM7SUFDbkMsWUFBWTtJQUNaLGlCQUFpQjtJQUNqQixtQkFBbUI7RUFDckI7O0FBRUY7RUFDRSxhQUFhO0FBQ2Y7O0FBRUEsMkNBQTJDOztBQUMzQztFQUNFLGtCQUFrQjtFQUNsQixpQkFBaUI7RUFDakIsY0FBYztBQUNoQjs7QUFFQTtFQUNFLGNBQWM7QUFDaEIiLCJmaWxlIjoiYXBwL29yZGVyLXBhbmVsL2xpc3Qtb3JkZXItaXRlbS9saXN0LW9yZGVyLWl0ZW0uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi50YWJsZSB0ci5hY3RpdmUgdGQge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjojMjc1ZTk0ICFpbXBvcnRhbnQ7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcbiAgfVxyXG5cclxuLnRhYmxlIHRhYmxlLXN0cmlwZWQgdHIgdGQge1xyXG4gIHBhZGRpbmc6IDEuNSU7XHJcbn1cclxuXHJcbi8qIFNjcm9sbCBCYXIgQWdncmVnYXRlZCBPcmRlciBJdGVtIHRhYmxlICovXHJcbi5teS1jdXN0b20tc2Nyb2xsYmFyIHtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgbWF4LWhlaWdodDogNDUwcHg7XHJcbiAgb3ZlcmZsb3c6IGF1dG87XHJcbn1cclxuXHJcbi50YWJsZS13cmFwcGVyLXNjcm9sbC15IHtcclxuICBkaXNwbGF5OiBibG9jaztcclxufVxyXG5cclxuIl19 */\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { OrderItem } from '../../model/OrderItem'\r\nimport { OrderService } from 'src/app/service/order-service';\r\nimport { ModalBuilder } from 'src/app/common-components/modal-builder';\r\nimport { InfoModalComponent } from 'src/app/modal/info-modal/info-modal.component';\r\nimport { ProductService } from 'src/app/service/product-service';\r\nimport { Observable } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, map } from 'rxjs/operators';\r\nimport { ModifyOrderItemReq } from 'src/app/model/request/order/ModifyOrderItemReq';\r\nimport { AggregatedOrder } from 'src/app/model/AggregatedOrder';\r\nimport { AggregatedOrderItem } from 'src/app/model/AggregatedOrderItem';\r\nimport { DeleteOrderItemsModalComponent } from 'src/app/modal/delete-order-items-modal/delete-order-items-modal.component';\r\nimport { DeleteOrderItemsReq } from 'src/app/model/request/order/DeleteOrderItemsReq';\r\n\r\n@Component({\r\n  selector: 'list-order-item',\r\n  templateUrl: './list-order-item.component.html',\r\n  styleUrls: ['./list-order-item.component.css']\r\n})\r\nexport class ListOrderItemComponent implements OnInit {\r\n\r\n  @Input() orderItems: IterableIterator<AggregatedOrderItem>\r\n  @Input() order: AggregatedOrder\r\n\r\n  @Output() onCreateOrderItemEvent = new EventEmitter<OrderItem>()\r\n  @Output() onChangeOrderItemEvent = new EventEmitter<ModifyOrderItemReq>()\r\n  @Output() onDeleteOrderItemEvent = new EventEmitter<number[]>()\r\n  \r\n  inputId: number\r\n  inputBarCode: string\r\n  inputName: string\r\n  inputQuantity: number\r\n  inputPrice: number\r\n  selectedRow: number\r\n  areNewOrderItemFieldsSet = false\r\n  searchString: string\r\n  selectedOrderItems: Map<number, OrderItem> = new Map();\r\n  productNames: string[] = []\r\n  deleteOrderItemInProgressArray: boolean[] = [];\r\n  productIdMapByName: Map<string, number> = new Map()\r\n  \r\n  search = (text$: Observable<string>) =>\r\n    text$.pipe(\r\n      debounceTime(200),\r\n      distinctUntilChanged(),\r\n      map(term => term.length < 1 ? []\r\n        : this.productNames.filter(v => v.toLowerCase().indexOf(term.toLowerCase()) > -1).slice(0, 10))\r\n    )\r\n\r\n  constructor(private orderService: OrderService,\r\n              private modalBuilder: ModalBuilder) {}\r\n\r\n  ngOnInit() {\r\n    this.initDeleteOrderItemButtonStatus();\r\n  }\r\n\r\n  private initDeleteOrderItemButtonStatus() {\r\n    for (let i = 0; i < this.deleteOrderItemInProgressArray.length; i++) {\r\n      this.deleteOrderItemInProgressArray.push(false);\r\n    }\r\n  }\r\n\r\n  checkInputFieldSet() {\r\n    this.areNewOrderItemFieldsSet = this.inputName.trim().length > 0\r\n                                      && this.inputQuantity > 0\r\n                                      && this.inputPrice > 0\r\n  }\r\n\r\n  deleteSingleOrderItem(orderItem: OrderItem) {\r\n    const orderItems: OrderItem[] = [orderItem];\r\n    this.deleteOrderItem(orderItems);\r\n    this.selectedOrderItems.delete(orderItem.id);\r\n  }\r\n\r\n  deleteOrderItem(orderItems: OrderItem[]) {\r\n    const ids = orderItems.map(item => item.id);\r\n    const req = new DeleteOrderItemsReq(this.order.aggregatedOrderInfo.id, ids);\r\n    this.orderService.deleteOrderItems(req).subscribe(\r\n      data => {\r\n          this.onDeleteOrderItemEvent.emit(ids);\r\n          this.deleteFromSelectedOrderItem(ids);\r\n      },\r\n      error => {\r\n        const modalRef = this.modalBuilder.open(InfoModalComponent)\r\n        modalRef.componentInstance.title = \"Error : Failed to delete the order items.\";\r\n        modalRef.componentInstance.message = error.error\r\n      }\r\n    )\r\n  }\r\n\r\n  private deleteFromSelectedOrderItem(ids: number[]) {\r\n    for(let id of ids) {\r\n      this.selectedOrderItems.delete(id);\r\n    }\r\n  }\r\n\r\n  onClickDeleteOrderItemButton(rowTableIndex: number, orderItems: OrderItem[]) {\r\n    this.setDeleteOrderItemButtonStatus(rowTableIndex, true);\r\n    this.displayDeletionConfirmationModal(rowTableIndex, orderItems);\r\n  }\r\n\r\n  displayDeletionConfirmationModal(rowTableIndex:number, orderItems: OrderItem[]) {\r\n    const modalRef = this.modalBuilder.openCenteredLargeModal(DeleteOrderItemsModalComponent)\r\n    modalRef.componentInstance.title = \"Are you sure you want to delete the following order items ?\"\r\n    modalRef.componentInstance.orderItems = orderItems;\r\n    modalRef.result.then((response) => {\r\n      if (response) {\r\n        this.deleteOrderItem(orderItems);\r\n      }\r\n      this.setDeleteOrderItemButtonStatus(rowTableIndex, false);\r\n    })\r\n  }\r\n\r\n  onChangeOrderItemQuantity(orderItem: OrderItem, event: any) {\r\n    /*let newQuantity = event.target.textContent\r\n    if (orderItem.quantity != newQuantity) {\r\n      let req = new ModifyOrderItemReq(orderItem.id, newQuantity);\r\n      // Must send Http request.\r\n      this.onChangeOrderItemEvent.emit(req)\r\n    } */\r\n  }\r\n\r\n  setSelectedRow(index: number) {\r\n    this.selectedRow = index\r\n  }\r\n\r\n  onClickShowSelectedOrderItems(selectedOrderItems: OrderItem[]) {\r\n    let tmp = new Map<number, OrderItem>();\r\n    for (let orderItem of selectedOrderItems) {\r\n      tmp.set(orderItem.id, orderItem);\r\n    }\r\n    this.selectedOrderItems = tmp;\r\n  }\r\n\r\n  setDeleteOrderItemButtonStatus(index: number, isInProgress: boolean) {\r\n      this.deleteOrderItemInProgressArray[index] = isInProgress;\r\n  }\r\n}\r\n","export default \"/* Scroll Bar Aggregated Order Item table */\\r\\n.my-custom-scrollbar {\\r\\n    position: relative;\\r\\n    max-height: 200px;\\r\\n    overflow: auto;\\r\\n  }\\r\\n.table-wrapper-scroll-y {\\r\\n    display: block;\\r\\n  }\\r\\n  \\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9vcmRlci1wYW5lbC9zZWxlY3RlZC1vcmRlci1pdGVtcy1saXN0L3NlbGVjdGVkLW9yZGVyLWl0ZW1zLWxpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSwyQ0FBMkM7QUFDM0M7SUFDSSxrQkFBa0I7SUFDbEIsaUJBQWlCO0lBQ2pCLGNBQWM7RUFDaEI7QUFFQTtJQUNFLGNBQWM7RUFDaEIiLCJmaWxlIjoiYXBwL29yZGVyLXBhbmVsL3NlbGVjdGVkLW9yZGVyLWl0ZW1zLWxpc3Qvc2VsZWN0ZWQtb3JkZXItaXRlbXMtbGlzdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyogU2Nyb2xsIEJhciBBZ2dyZWdhdGVkIE9yZGVyIEl0ZW0gdGFibGUgKi9cclxuLm15LWN1c3RvbS1zY3JvbGxiYXIge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgbWF4LWhlaWdodDogMjAwcHg7XHJcbiAgICBvdmVyZmxvdzogYXV0bztcclxuICB9XHJcbiAgXHJcbiAgLnRhYmxlLXdyYXBwZXItc2Nyb2xsLXkge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgfVxyXG4gICJdfQ== */\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { OrderItem } from 'src/app/model/OrderItem';\r\nimport { DeleteOrderItemsModalComponent } from 'src/app/modal/delete-order-items-modal/delete-order-items-modal.component';\r\nimport { ModalBuilder } from 'src/app/common-components/modal-builder';\r\nimport { AggregatedOrder } from 'src/app/model/AggregatedOrder';\r\nimport { DeleteOrderItemsReq } from 'src/app/model/request/order/DeleteOrderItemsReq';\r\nimport { OrderService } from 'src/app/service/order-service';\r\nimport { InfoModalComponent } from 'src/app/modal/info-modal/info-modal.component';\r\n\r\n@Component({\r\n  selector: 'selected-order-items-list',\r\n  templateUrl: './selected-order-items-list.component.html',\r\n  styleUrls: ['./selected-order-items-list.component.css']\r\n})\r\nexport class SelectedOrderItemsListComponent implements OnInit {\r\n\r\n  @Input() selectedOrderItems: Map<number, OrderItem> = new Map();\r\n  @Input() order: AggregatedOrder;\r\n\r\n  @Output() onDeleteOrderItemEvent = new EventEmitter<OrderItem>();\r\n  deleteOrderItemInProgressArray: boolean[] = [];\r\n\r\n  constructor(private modalBuilder: ModalBuilder,\r\n              private orderService: OrderService) { }\r\n\r\n  ngOnInit() {\r\n    this.initDeleteOrderItemButtonStatus();\r\n  }\r\n\r\n  private initDeleteOrderItemButtonStatus() {\r\n    for (let i = 0; i < this.deleteOrderItemInProgressArray.length; i++) {\r\n      this.deleteOrderItemInProgressArray.push(false);\r\n    }\r\n  }\r\n\r\n  onClickDeleteOrderItemButton(rowTableIndex: number, orderItem: OrderItem) {\r\n    this.setDeleteOrderItemButtonStatus(rowTableIndex, true);\r\n    this.displayDeletionConfirmationModal(rowTableIndex, orderItem);\r\n  }\r\n\r\n  displayDeletionConfirmationModal(rowTableIndex:number, orderItem: OrderItem) {\r\n    const modalRef = this.modalBuilder.openCenteredLargeModal(DeleteOrderItemsModalComponent)\r\n    modalRef.componentInstance.title = \"Are you sure you want to delete the following order item ?\";\r\n    let orderItemToDelete = [];\r\n    orderItemToDelete.push(orderItem);\r\n    modalRef.componentInstance.orderItems = orderItemToDelete;\r\n    modalRef.result.then((response) => {\r\n      if (response) {\r\n        this.onDeleteOrderItemEvent.emit(orderItem);\r\n        //this.deleteOrderItem(orderItem);\r\n      }\r\n      this.setDeleteOrderItemButtonStatus(rowTableIndex, false);\r\n    })\r\n  }\r\n\r\n  deleteOrderItem(orderItem: OrderItem) {\r\n    const id: number[] = [orderItem.id];\r\n    const req = new DeleteOrderItemsReq(this.order.aggregatedOrderInfo.id, id);\r\n    this.orderService.deleteOrderItems(req).subscribe(\r\n      data => {\r\n          this.selectedOrderItems.delete(orderItem.id);\r\n      },\r\n      error => {\r\n        const modalRef = this.modalBuilder.open(InfoModalComponent)\r\n        modalRef.componentInstance.title = \"Error : Failed to delete the order items.\";\r\n        modalRef.componentInstance.message = error.error\r\n      }\r\n    )\r\n  }\r\n\r\n  setDeleteOrderItemButtonStatus(index: number, isInProgress: boolean) {\r\n    this.deleteOrderItemInProgressArray[index] = isInProgress;\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvb3JkZXItcGFuZWwvc2hvdy1vcmRlci1oZWFkZXIvc2hvdy1vcmRlci1oZWFkZXIuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { ModalBuilder } from 'src/app/common-components/modal-builder';\r\nimport { ConfirmModalComponent } from 'src/app/modal/confirm-modal/confirm-modal-component';\r\nimport { OrderService } from 'src/app/service/order-service';\r\nimport { AggregatedOrder } from 'src/app/model/AggregatedOrder';\r\nimport { AddOrderItemModalComponent } from 'src/app/modal/add-order-item-modal/add-order-item-modal.component';\r\n\r\n@Component({\r\n  selector: 'show-order-header',\r\n  templateUrl: './show-order-header.component.html',\r\n  styleUrls: ['./show-order-header.component.css']\r\n})\r\nexport class OrderHeaderComponent implements OnInit {\r\n\r\n  @Input() order: AggregatedOrder\r\n\r\n  @Output() onCloseOrderEvent = new EventEmitter()\r\n  @Output() onAddOrderItemEvent = new EventEmitter()\r\n\r\n  constructor(private modalBuilder: ModalBuilder,\r\n              private orderService: OrderService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onClickAddOrderItem() {\r\n    let modalRef = this.modalBuilder.openCenteredLargeModal(AddOrderItemModalComponent);\r\n    modalRef.componentInstance.orderId = this.order.aggregatedOrderInfo.id;\r\n    modalRef.componentInstance.addOrderItemEvent.subscribe(($e) => {\r\n      this.onAddOrderItemEvent.emit();\r\n    })\r\n  }\r\n\r\n  onClickCloseOrder() {\r\n    let modalRef = this.modalBuilder.open(ConfirmModalComponent);\r\n    modalRef.componentInstance.title = \"Close Order Confirmation\";\r\n    modalRef.componentInstance.message = \"Are you sure you want to close the order \"\r\n          + this.order.aggregatedOrderInfo.name + \" for the store \" + this.order.aggregatedOrderInfo.store.name + \" ?\";\r\n\r\n    modalRef.result.then((response) => {\r\n      if (response) {\r\n        this.orderService.closeOrder(this.order.aggregatedOrderInfo.id).subscribe(\r\n          data => {\r\n            this.order.aggregatedOrderInfo.closeDatetime = data.closeDateTime;\r\n            this.order.aggregatedOrderInfo.status = data.status;\r\n          }\r\n        )\r\n      }\r\n    })\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvb3JkZXItcGFuZWwvc2hvdy1vcmRlci9zaG93LW9yZGVyLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\nimport { OrderService } from '../../service/order-service';\r\nimport { OrderItem } from '../../model/OrderItem'\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AggregatedOrder } from 'src/app/model/AggregatedOrder';\r\n\r\n@Component({\r\n  \r\n  selector: 'show-order',\r\n  templateUrl: './show-order.component.html',\r\n  styleUrls: ['./show-order.component.css'],\r\n  changeDetection: ChangeDetectionStrategy.Default\r\n})\r\nexport class ShowOrderComponent implements OnInit {\r\n\r\n  order: AggregatedOrder;\r\n\r\n  constructor(private orderService: OrderService,\r\n              private route: ActivatedRoute,\r\n              private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.order = new AggregatedOrder();\r\n    const orderId = parseInt(this.route.snapshot.paramMap.get('id'));\r\n    this.loadOrder(orderId);\r\n  }\r\n\r\n  onOrderItemAdded(orderItem: OrderItem) {\r\n    this.refreshOrder();\r\n  }\r\n\r\n  onChangeOrderItem(orderItem: OrderItem) {\r\n    //this.order.items.set(orderItem.id, orderItem)\r\n  }\r\n\r\n  onDeleteOrderItem(ids: number[]) {\r\n    this.refreshOrder();\r\n  }\r\n\r\n  onClickBack() {\r\n    this.router.navigate(['/orders'])\r\n  }\r\n\r\n  private loadOrder(orderId: number) {\r\n    this.orderService.getOrder(orderId).subscribe(data => {\r\n      this.order = AggregatedOrder.fromJson(data);\r\n    })  \r\n  }\r\n\r\n  private refreshOrder() {\r\n    this.loadOrder(this.order.aggregatedOrderInfo.id) \r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvb3JkZXJzLW1hbmFnZXItcGFuZWwvbGlzdC1vcmRlcnMvbGlzdC1vcmRlcnMuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { OrderService } from 'src/app/service/order-service';\r\nimport { ModalBuilder } from 'src/app/common-components/modal-builder';\r\nimport { ConfirmModalComponent } from 'src/app/modal/confirm-modal/confirm-modal-component';\r\nimport { AggregatedOrder } from 'src/app/model/AggregatedOrder';\r\nimport { OrderNotificationModalComponent } from 'src/app/modal/order-notification-modal/order-notification-modal.component';\r\nimport { AggregatedOrderInfo } from '../../model/AggregatedOrderInfo';\r\n\r\n@Component({\r\n  selector: 'list-orders',\r\n  templateUrl: './list-orders.component.html',\r\n  styleUrls: ['./list-orders.component.css']\r\n})\r\nexport class ListOrdersComponent implements OnInit {\r\n\r\n  @Input() orders: AggregatedOrderInfo[]\r\n\r\n  page: number = 1\r\n  pageSize: number = 10\r\n  collectionSize: number\r\n\r\n  constructor(private orderService: OrderService,\r\n              private modalBuilder: ModalBuilder) {}\r\n\r\n  ngOnInit() {\r\n    this.collectionSize = this.orders.length\r\n  }\r\n\r\n  onClickCloseOrder(orderToClose: AggregatedOrderInfo) {\r\n    let modalRef = this.modalBuilder.open(ConfirmModalComponent);\r\n    modalRef.componentInstance.title = \"Close Order Confirmation\";\r\n    modalRef.componentInstance.message = \"Are you sure you want to close the order \"\r\n          + orderToClose.name + \" for the store \" + orderToClose.store.name + ' ?';\r\n\r\n    modalRef.result.then((response) => {\r\n      if (response) {\r\n        this.orderService.closeOrder(orderToClose.id).subscribe(\r\n          data => {\r\n            orderToClose.closeDatetime = data.closeDateTime\r\n            orderToClose.status = data.status\r\n          }\r\n        )\r\n      }\r\n    });\r\n  }\r\n\r\n  onClickNotify(order: AggregatedOrderInfo) {\r\n    let modalRef = this.modalBuilder.open(OrderNotificationModalComponent);\r\n    modalRef.componentInstance.orderId = order.id;\r\n  }\r\n\r\n  get ordersArray(): AggregatedOrderInfo[] {\r\n    return this.orders\r\n              .slice((this.page - 1) * this.pageSize, (this.page -1) * this.pageSize + this.pageSize)\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvb3JkZXJzLW1hbmFnZXItcGFuZWwvb3JkZXJzLW1hbmFnZXIvb3JkZXJzLW1hbmFnZXIuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { OrderService } from 'src/app/service/order-service';\r\nimport { ModalBuilder } from 'src/app/common-components/modal-builder';\r\nimport { CreateOrderModalComponent } from 'src/app/modal/create-order-modal/create-order-modal.component';\r\nimport { AggregatedOrder } from 'src/app/model/AggregatedOrder';\r\nimport { AggregatedOrderInfo } from '../../model/AggregatedOrderInfo';\r\n\r\n@Component({\r\n  selector: 'orders-manager',\r\n  templateUrl: './orders-manager.component.html',\r\n  styleUrls: ['./orders-manager.component.css']\r\n})\r\nexport class OrdersManagerComponent implements OnInit {\r\n\r\n  orders: AggregatedOrderInfo[] = []\r\n  noOrdersFoundMessage: string\r\n  searchButtonDisabled: boolean = false\r\n  isOrderListFiltered: boolean = false\r\n\r\n  constructor(private orderService: OrderService,\r\n              private modalBuilder: ModalBuilder) { }\r\n\r\n  ngOnInit() {\r\n    this.getAllOrders()\r\n  }\r\n\r\n  onClickSearch(value: string) {\r\n    if (value.length > 0) {\r\n      this.searchButtonDisabled = true\r\n      this.isOrderListFiltered = true\r\n      this.searchOrderByIdOrName(value)\r\n    } else if (value.length == 0 && this.isOrderListFiltered) {\r\n      this.searchButtonDisabled = true\r\n      this.getAllOrders()\r\n      this.isOrderListFiltered = false\r\n    }\r\n  }\r\n\r\n  private searchOrderByIdOrName(name: string) {\r\n    this.orderService.searchOrderByIdOrName(name).subscribe(\r\n      data => {\r\n        this.orders = this.parseOrderIntoArray(data)\r\n        this.searchButtonDisabled = false\r\n      }, error => {\r\n        console.log(\"error in search : \" + error);\r\n        this.orders = [];\r\n        this.searchButtonDisabled = false\r\n      }\r\n    )\r\n  }\r\n\r\n  private getAllOrders() {\r\n    this.orderService.getAllOrdersInfo().subscribe(\r\n      data => {\r\n          this.orders = this.parseOrderIntoArray(data)\r\n          if (this.orders.length == 0) {\r\n            this.noOrdersFoundMessage = \"No order found\"\r\n          }\r\n      }\r\n    ) \r\n  }\r\n\r\n  private parseOrderIntoArray(data: any) : AggregatedOrderInfo[] {\r\n    let orders: AggregatedOrderInfo[] = []\r\n    for (let i = 0; i < data.length ; i++) {\r\n      let item = AggregatedOrderInfo.fromJson(data[i]);\r\n      orders.push(item)\r\n    }\r\n    return orders\r\n  }\r\n\r\n  openCreateReportModal() {\r\n    const modalRef = this.modalBuilder.open(CreateOrderModalComponent)\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvcHJvZHVjdC9wcm9kdWN0cy1wYW5lbC9wcm9kdWN0cy1wYW5lbC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'products-panel',\r\n  templateUrl: './products-panel.component.html',\r\n  styleUrls: ['./products-panel.component.css']\r\n})\r\nexport class ProductsPanelComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpService } from './http-service';\r\nimport { AdminSetting } from '../model/admin/AdminSetting'\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n@Injectable()\r\nexport class AdminSettingService {\r\n\r\n    constructor(private httpApi: HttpService) {}\r\n\r\n    getAdminSetting(adminSetting: AdminSetting) : Observable<any> {\r\n        console.log(\"Get admin setting.\");\r\n        return this.httpApi.get(\"/v1/admin/setting/get\")\r\n    }\r\n\r\n    updateAdminSetting(adminSetting: AdminSetting): Observable<any> {\r\n        console.log(\"Update admin setting \" + adminSetting);\r\n        return this.httpApi.post(\"v1/admin/setting/update\", adminSetting)\r\n    }\r\n}\r\n","\r\nimport { Observable } from 'rxjs';\r\nimport { HttpService } from './http-service';\r\nimport { Injectable } from '@angular/core';\r\nimport { AddOrUpdateCustomerReq } from '../model/request/customer/AddOrUpdateCustomerReq';\r\n\r\n@Injectable()\r\nexport class CustomerService {\r\n\r\n    private url: string = \"v1/store\";\r\n\r\n    constructor(private http: HttpService) {\r\n    }\r\n\r\n    addCustomer(req: AddOrUpdateCustomerReq): Observable<any> {\r\n        return this.http.post(this.url + \"/add\", req);\r\n    }\r\n\r\n    updateCustomer(req: AddOrUpdateCustomerReq): Observable<any> {\r\n        return this.http.post(this.url + \"/update\", req);\r\n    }\r\n\r\n    getCustomer(id: number): Observable<any> {\r\n        return this.http.get(this.url + \"/get/\" + id);\r\n    }\r\n    \r\n    getStoresOfOwner(ownerId: number): Observable<any> {\r\n        return this.http.get(this.url + \"/storesOfOwner/\" + ownerId);\r\n    }\r\n    \r\n    getAllCustomers(): Observable<any> {\r\n        return this.http.get(this.url + \"/all\");\r\n    }\r\n\r\n    getAllCustomersNoLimit(): Observable<any> {\r\n        return this.http.get(this.url + \"/allNoLimit\");\r\n    }\r\n\r\n    searchCustomerByIdOrNames(input: string): Observable<any> {\r\n        return this.http.get(this.url + \"/searchByIdOrName/\" + input);\r\n    }\r\n\r\n    getAllOwnersIdsAndNames(): Observable<any>{\r\n        return this.http.get(\"v1/owner/allOwnerIdsAndNames\");\r\n    }\r\n}","import { HttpClient, HttpHeaders } from '@angular/common/http'\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class HttpService {\r\n\r\n    constructor(private http: HttpClient){}\r\n\r\n    get(url: string, options?) : Observable<any> {\r\n        return this.http.get(url, options)\r\n    }\r\n\r\n    post(url: string, body: any, options?) : Observable<any> {\r\n        const req = this.http.post(url, body, options != null ? options : this.getHeaders());\r\n        alert(JSON.stringify(options))\r\n        return req;\r\n    }\r\n\r\n    delete(url: string) : Observable<any> {\r\n        return this.http.delete(url, this.getHeaders());\r\n    }\r\n\r\n    put(url: string): Observable<any> {\r\n      return this.http.put(url, this.getHeaders());\r\n    }\r\n\r\n    private getHeaders() {\r\n        let httpHeaders = new HttpHeaders()\r\n            .set('Content-Type', 'application/json')\r\n        let options = {\r\n            headers: httpHeaders\r\n        };\r\n        return options\r\n    }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpService } from \"./http-service\";\r\nimport { LoginRequest } from \"../model/request/login/LoginRequest\";\r\nimport { HttpHeaders } from \"@angular/common/http\";\r\nimport { BehaviorSubject, Observable } from \"rxjs\";\r\n\r\n@Injectable()\r\nexport class LoginService {\r\n\r\n    private userLogged = new BehaviorSubject<boolean>(false);\r\n\r\n    constructor(private httpApi: HttpService) {}\r\n\r\n    authenticate(req: LoginRequest) {\r\n        let httpHeaders = new HttpHeaders()\r\n            .set('Content-Type', 'application/json')\r\n            .set('Authorization', 'Basic ' + btoa(req.username + ':' + req.password))\r\n        let options = {\r\n            headers: httpHeaders\r\n        };\r\n        alert(JSON.stringify(options))\r\n        return this.httpApi.get(\"/user\", options)\r\n    }\r\n\r\n    logout() {\r\n        window.sessionStorage.removeItem('username');\r\n        let httpHeaders = new HttpHeaders()\r\n            .set('Content-Type', 'application/json')\r\n            .set('Authorization', 'Basic ' + btoa('admin:admin'))\r\n        let options = {\r\n            headers: httpHeaders\r\n        };\r\n        return this.httpApi.post(\"/logout\", \"\", options);\r\n        this.setUserLoggedIn(false, 'admin')\r\n    }\r\n\r\n    isUserLoggedIn() : boolean {\r\n        return sessionStorage.getItem('username') != null;\r\n    }\r\n\r\n    setUserLoggedIn(isLogged: boolean, username: string) {\r\n        window.sessionStorage.setItem('username', username);\r\n        this.userLogged.next(isLogged);\r\n    }\r\n\r\n    getUserLoggedObservable(): Observable<boolean> {\r\n        return this.userLogged.asObservable()\r\n    }\r\n\r\n    getLoggedUsers(): Observable<any> {\r\n        return this.httpApi.get(\"/v1/user/loggedUsers\");\r\n    }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpService } from \"./http-service\";\r\nimport { Observable } from \"rxjs\";\r\nimport { HttpHeaders } from \"@angular/common/http\";\r\n\r\n@Injectable()\r\nexport class MonitoringService {\r\n\r\n    private ACTUATOR_URL: string = 'actuator/'\r\n    private ACTUATOR_METRICS_URL: string = this.ACTUATOR_URL + 'metrics/'\r\n    private ACTUATOR_HEALTH_URL: string = this.ACTUATOR_URL + 'health/'\r\n    constructor(private httpApi: HttpService) {}\r\n\r\n    getCpuUsage(): Observable<any> {\r\n        return this.httpApi.get(this.ACTUATOR_METRICS_URL + 'process.cpu.usage');\r\n    }\r\n\r\n    getSystemCpuCount(): Observable<any> {\r\n        return this.httpApi.get(this.ACTUATOR_METRICS_URL + 'system.cpu.count');\r\n    }\r\n\r\n    getJvmThreadsLive(): Observable<any> {\r\n        return this.httpApi.get(this.ACTUATOR_METRICS_URL + 'jvm.threads.live');\r\n    }\r\n\r\n    getJvmMemoryUsed(): Observable<any> {\r\n        return this.httpApi.get(this.ACTUATOR_METRICS_URL + 'jvm.memory.used');\r\n    }\r\n\r\n    getJvmMemoryMax(): Observable<any> {\r\n        return this.httpApi.get(this.ACTUATOR_METRICS_URL + 'jvm.memory.max');\r\n    }\r\n\r\n    getElasticsearchHealth(): Observable<any> {\r\n        return this.httpApi.get(this.ACTUATOR_HEALTH_URL + 'elasticsearchRest');\r\n    }\r\n\r\n    getDatabaseHealth(): Observable<any> {\r\n        return this.httpApi.get(this.ACTUATOR_HEALTH_URL + 'db');\r\n    }\r\n\r\n    getServerLogFile(): Observable<any> {\r\n        let options = {\r\n            responseType: 'text'\r\n        }; \r\n        return this.httpApi.get(this.ACTUATOR_URL + 'logfile', options);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpService } from './http-service';\r\nimport { Observable } from 'rxjs';\r\nimport { OrderNotificationRequest } from '../model/request/notification/OrderNotificationRequest';\r\n\r\n@Injectable()\r\nexport class NotificationService {\r\n\r\n    private url: string = \"v1/notification\";\r\n\r\n    constructor(private httpApi: HttpService) {}\r\n\r\n    notify(req: OrderNotificationRequest): Observable<any> {\r\n        let options = {\r\n            responseType: 'blob',\r\n            observe: 'response'\r\n        }; \r\n        return this.httpApi.post(this.url + \"/notify\", req, options);\r\n    }\r\n\r\n    getDocumentTypes(): Observable<any> {\r\n        return this.httpApi.get(this.url + \"/document-types\");\r\n    }\r\n} ","\r\nimport { Injectable } from '@angular/core'\r\nimport { HttpService } from './http-service'\r\nimport { Order } from \"../model/Order\";\r\nimport { Observable } from 'rxjs';\r\nimport { AddOrderItemReq } from '../model/request/order/AddOrderItemReq';\r\nimport { OrderItem } from '../model/OrderItem';\r\nimport { DeleteOrderItemsReq } from '../model/request/order/DeleteOrderItemsReq';\r\nimport { AddOrderItemByBarCodeReq } from '../model/request/order/AddOrderItemByBarCodeReq';\r\n\r\n@Injectable()\r\nexport class OrderService {\r\n\r\n    constructor(private httpApi: HttpService) {}\r\n\r\n    addOrder(order: Order): Observable<any> {\r\n        const request = {\r\n            \"name\": order.name,\r\n            \"storeId\": order.store.id,\r\n            \"comment\": order.comment\r\n        }\r\n        return this.httpApi.post(\"/v1/order/add\", request)\r\n    }\r\n\r\n    getOrder(id: number): Observable<any> {\r\n        console.log(\"Get order by id \" + id);\r\n        return this.httpApi.get(\"/v1/order/get/\" + id);\r\n    }\r\n\r\n    searchOrderByIdOrName(input: string): Observable<any> {\r\n        console.log(\"Search orders by input : \" + input);\r\n        return this.httpApi.get(\"/v1/order/searchByIdOrName/\" + input);\r\n    }\r\n\r\n    getOrdersOfCustomer(id: number): Observable<any> {\r\n        console.log(\"Get orders of customer \" + id);\r\n        return this.httpApi.get(\"/v1/order/ordersOfCustomer/\" + id);\r\n    }\r\n\r\n    getOrdersOfStore(id: number): Observable<any> {\r\n        console.log(\"Get orders of store \" + id);\r\n        return this.httpApi.get(\"/v1/order/ordersOfStore/\" + id);\r\n    }\r\n\r\n    addOrderItem(req: AddOrderItemReq) : Observable<any> {\r\n        console.log(\"Add order item[ \" + \", \" + req.requestedQty + \" to order \" + req.orderId);\r\n        return this.httpApi.post(\"/v1/order/addOrderItemByInfo\", req);\r\n    }\r\n\r\n    addOrderItemByBarCode(req: AddOrderItemByBarCodeReq) : Observable<any> {\r\n        console.log(\"Add order item by barCode to order \" + req.orderId + \" : \" + req.barCode);\r\n        return this.httpApi.post(\"/v1/order/addSingleOrderItemsByBarCode\", req);\r\n    }\r\n\r\n    updateStockItem(order: Order, itemToUpdate: OrderItem): Observable<any> {\r\n        console.log(\"updateProductItem order \" + order.id + \" | \" + itemToUpdate)\r\n        //return this.httpApi.post(\"/v1/order/updateProductItem\", this.toUpdateRequest(order, itemToUpdate))\r\n        return null;\r\n    }\r\n\r\n    deleteOrderItems(req: DeleteOrderItemsReq): Observable<any> {\r\n        console.log(\"Delete OrderItems from order : \" + req.orderId + \" : \" + req.orderItemsId)\r\n        return this.httpApi.post(\"/v1/order/deleteOrderItems\", req);\r\n    }\r\n\r\n    closeOrder(orderId: number): Observable<any> {\r\n        console.log(\"Close order : \" + orderId)\r\n        let request = { \"id\" : orderId }\r\n        return this.httpApi.post(\"/v1/order/close\", request);\r\n    }\r\n\r\n    getAllOrdersInfo(): Observable<any> {\r\n        console.log(\"Get all orders info\")\r\n        return this.httpApi.get(\"/v1/order/allOrdersInfo\")\r\n    } \r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpService } from \"./http-service\";\r\nimport { Observable } from \"rxjs\";\r\n\r\n@Injectable()\r\nexport class OrdersStatisticService {\r\n\r\n    private ORDERS_STATISTIC_URL = \"/v1/os\"\r\n\r\n    constructor(private httpApi: HttpService) {}\r\n\r\n    getOpenClosedOrdersOfStore(storeId: number): Observable<any> {\r\n        return this.httpApi.get(this.ORDERS_STATISTIC_URL + \"/openClosedByStore/\" + storeId)\r\n    }\r\n\r\n    getLastOrdersOfStore(storeId: number, lastOrderNb: number): Observable<any> {\r\n        return this.httpApi.get(this.ORDERS_STATISTIC_URL + \"/lastOrdersByStore/\" + storeId + '/' + lastOrderNb)\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpService } from './http-service';\r\nimport { Observable } from 'rxjs';\r\nimport { Product } from '../model/Product';\r\n\r\n@Injectable()\r\nexport class ProductService {\r\n\r\n    constructor(private http: HttpService) {\r\n    }\r\n\r\n    get(id: number): Observable<any> {\r\n        return this.http.get(\"/v1/productItem/get/\" + id)\r\n    }\r\n\r\n    getAllProductNames(): Observable<any> {\r\n        return this.http.get(\"/v1/stock/getAllExistingProductNames\")\r\n    }\r\n\r\n    getProductStockInfo(productId: number): Observable<any> {\r\n        return this.http.get(\"/v1/stock/productStockInfo/\" + productId);\r\n    }\r\n\r\n    getProductItemByBarCode(barCode: string): Observable<Product> {\r\n        return this.http.get(\"/v1/stock/productItemByBarCode/\" + barCode);\r\n    }\r\n\r\n    confirmProductItemFileUpload(uploadId: string): Observable<any> {\r\n      return this.http.put(\"/v1/productItemFileUpload/upload-confirm/\" + uploadId);\r\n    }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpService } from \"./http-service\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Store } from \"../model/Store\";\r\n\r\n@Injectable()\r\nexport class StoreService {\r\n\r\n    private STORE_URL: string = '/v1/store'\r\n\r\n    constructor(private httpApi: HttpService) {}\r\n\r\n    get(id: number): Observable<any> {\r\n        return this.httpApi.get(this.STORE_URL + '/get/' + id)\r\n    }\r\n\r\n    update(store: Store): Observable<any> {\r\n        return this.httpApi.post(this.STORE_URL + '/update', store)\r\n    } \r\n}","import { Injectable, TemplateRef } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastService {\n\n  toasts: any[] = [];\n \n  // Push new Toasts to array with content and options\n  show(textOrTpl: string | TemplateRef<any>, options: any = {}) {\n    this.toasts.push({ textOrTpl, ...options });\n  }\n \n  // Callback method to remove Toast DOM element from view\n  remove(toast) {\n    this.toasts = this.toasts.filter(t => t !== toast);\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser'\r\nimport { FilterPipe } from './common-components/pipe/FilterPipe';\r\n\r\n@NgModule({\r\n    imports:[\r\n        BrowserModule\r\n    ],\r\n    declarations: [\r\n        FilterPipe\r\n    ],\r\n    providers:[\r\n        // service\r\n    ],\r\n    exports:[\r\n        FilterPipe\r\n    ],\r\n})\r\nexport class SharedModule {}","export class StringUtil {\r\n\r\n    static capitalFirstLetter(word: string) {\r\n        return word.charAt(0).toUpperCase() + word.slice(1);\r\n    }\r\n}","export class TypeUtil {\r\n\r\n    static toBoolean(str: string): boolean {\r\n        return str.toLowerCase() == 'true';\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}